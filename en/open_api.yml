---
openapi: 3.0.0
info:
  title: Agendrix API
  description: |2-

    This page contains a detailed description of Agendrix's public API. Below, you will find a Get Started section resuming the main steps leading you to your first API call, as well as an OAuth 2.0 section, describing the authentication process necessary in order to retrieve a mandatory access token. You can also access information about the API headers, responses and errors. Each endpoint is then described, grouped by their database model. Authorizations, parameters, responses, everything you need is there. Enjoy!

    # Getting Started
    This guide describes how to make your first call to Agendrix's Public API.

    ## Create an Application
    Creating an application will generate your development keys, for a sandbox environment where you can do any test you want, and a production environment. You can use the application for yourself or your clients.
      - From the [Applications](./applications) section, click on the New Application button, and choose a name for your new application.
      - You have now been redirected to your app general information. You can add a description, an icon and edit your application name as well. You can also see the approval status of your application. Your application needs to be approved before it can be used in production.
      - You can retrieve your development and production credentials in their respective sections. You can regenerate your secrets, manage your redirect URIs and your scopes.

    Your Client ID and Client Secret are mandatory in order to retrieve your OAuth 2.0 tokens. Redirect URIs are as well - at least one.

    ## Sandbox
    The sandbox environment is used for testing. Your application does not require to be approved to use this environment. When using the sandbox, do not forget to change your calls accordingly - sandbox.agendrix.net/oauth instead of app.agendrix.com/oauth and api.sandbox.agendrix.net instead of api.agendrix.com.

    To sign in to the sandbox environment, follow these steps:
      - From the [Applications](./applications) section, click on your application.
      - Go to the Sandbox tab.
      - Click the Sign in to the sandbox link.

    ## Retrieve an OAuth 2.0 access token
    You need an access token to access Agendrix API. The simpler way to do so is through the OAuth 2.0 [Playground](./playground). There is also a detailed explanation of the process in the OAuth 2.0 section below.

    ## Make an API call
    Now that you have an access token, you can use this token to make any call you like by adding the Authorization header to the request, as long as your credentials include the required scopes for a specific endpoint.

    # Resources
    This section regroups the different downloadable Agendrix's API resources.

    ## OAS 3
    An Open API Specification document is a detailed, precise description of an API, from its security schemes to its endpoints. It has a lot of uses - our own [document](https://github.com/agendrix/openapi/blob/main/en/open_api.yml) generates a large part of this documentation, as well as the Postman collection. The Open API ecosystem is rich and mature and is used widely by the community. For more on OAS, click <a href='https://github.com/OAI/OpenAPI-Specification' target='_blank'>here</a>.

    ## Examples
    We also implemented basic <a href='https://github.com/agendrix/public-api-integration-examples' target='_blank'>examples</a> of integration with our API in javascript and ruby.
    Those examples include the complete OAuth flow as well as tokens handling and of course, making requests to the API.

    # OAuth 2.0
    Agendrix uses OAuth 2.0 protocol for authorization. Once you create an application, it can be used to request access and refresh tokens. The access token is
    valid for a period of 2 hours and needs to be refreshed afterward using the refresh token. The access token can then be used to make API calls. For an interactive
    demonstration of the process, use the OAuth 2.0 Playground.

    ## Prepare the Authorization Request
    The first step is to prepare the authorization request using the Client ID and one of the redirect URIs defined for the application - or the client. Scopes default to read when not specified.
    ```
    https://app.agendrix.com/oauth/authorize?client_id={CLIENT_ID}&redirect_uri={REDIRECT_URI}&response_type=code&scope=read+write
    ```

    ## Redirect the User
    Once the user is redirected to the authorization request, he needs to gives his approval sharing his data with the application, and choose the organization for which he wants to do so. The authorization request is then processed by the OAuth 2.0 server.

    ## Handle the OAuth 2.0 Server Response
    If the authorization request is valid, the OAuth 2.0 server sends an authorization code to the redirect URI specified in the authorization request. This code can be used to prepare the request to retrieve the access and refresh tokens.

    ## Exchange the Authorization Code for Tokens
    The final step is simply to exchange the authorization code received against the tokens. The Client ID, the Client Secret, the redirect URI and the grant type - which is always *authorization_code* - need to be included in the request. The OAuth 2.0 server then sends the access and refresh token to the redirect URI defined.
    ```
    curl --request POST 'https://app.agendrix.com/oauth/token' \
    --header 'Content-Type: application/json' \
    --data-raw '{
      "client_id": "{CLIENT_ID}",
      "client_secret": "{CLIENT_SECRET}",
      "redirect_uri": "{REDIRECT_URI}",
      "grant_type": "authorization_code",
      "code": "{AUTORIZATION_CODE}"
    }'
    ```

    ## Exchange the Refresh Token for new tokens
    The retrieved access token will eventually expire - it has a TTL of 2 hours. Instead of going through all the authorizing process again, the refresh token can be used to request new access and refresh tokens. The grant type becomes *refresh_token* and the refresh token must be included in the request, along with the Client ID, Client Secret and redirect URI. A subset of the original access token scopes can also be included in the request.
    ```
    curl --request POST 'https://app.agendrix.com/oauth/token' \
    --header 'Content-Type: application/json' \
    --data-raw '{
      "client_id": "{CLIENT_ID}",
      "client_secret": "{CLIENT_SECRET}",
      "redirect_uri": "{REDIRECT_URI}",
      "grant_type": "refresh_token",
      "refresh_token": "{REFRESH_TOKEN}",
    }'
    ```

    The refresh tokens become invalid once used, but do not expire. You can repeat the refresh process as long as you need to.

    # Token's Owner Role
    The data returned by the API will be scoped to the token's owner role. This means that if an access token was generated using an access grant of a manager, the data returned by the API will be scoped to the positions and sites managed by the user. Actions will also be limited by the owner's role. If you wish to retrieve all data related to an organization, the token used must be generated by an administrator of the organization.

    # Headers
    Specific headers must be set in order to interact with the API. Some headers in the API's response also contain relevant information.

    ## Requests
    All requests made to the Agendrix's Public API must have two specific headers set. The first one is the Content-Type header. It must always be set to *application/json*, since it is the supported format by the API. The second one is the Authorization header, in which you must add your access token as *Bearer*. You can see an example of a classic curl request in the [Make an API Call](./documentation#section/Make-an-API-Call) section.

    ## Responses
    All responses from the API are in JSON; therefore, they all have the Content-Type header set to *application/json*. In the specific case the number of requests to the API is over the rate [limit](./documentation#section/Rate-Limiting), the headers RateLimit-Limit, RateLimit-Remaining and RateLimit-Reset are added to the response headers. They respectively represent the rate limit of requests allowed, the remaining number of requests allowed - which is always 0 in that case - and the amount of seconds before the rate limit resets.

    # Rate Limiting
    The API's rate limiting is currently set to 360 requests per minute. As long as the rate limiting is respected and the request is valid as well as its access token, it is processed by API.

    # Bulk Actions
    ## Bulk size limit
    The bulk size limit is currently set to a 1000 per request. Just as the rate limiting, as long as the size limit is respected, and the request and its access token are valid, it is processed by the API.

    # Make an API Call
    Once you have the access token, making a call to Agendrix's Public API is rather straightforward. It is a classic HTTP request. All you have to do is add the required headers as well as the body or the query params - depending on the type of request -, as you can see in the example below.
    ```
    curl --request POST 'https://api.agendrix.com/v1/positions' \
    --header 'Content-Type: application/json' \
    --header 'Authorization: Bearer {ACCESS_TOKEN}' \
    --data-raw '{
        "name": "A position name"
    }'
    ```

    # Responses
    All responses are in JSON. Responses structure vary slightly depending on the context.

    ## Paginated Responses
    Paginated responses always contain the data and pagination fields. The data field represents the requested data returned by the API - for paginated responses, it is an array of objects. The pagination field represents the response pagination metadata. The pagination field contains the sort value, the search values, the page size, the limit on the page size, the current, next, previous, last, first and total pages, the total count of records and finally if the requested page is out of range.

    ## Other Responses
    All other responses always contain the data and errors fields. The data field represents once again the data returned by the API - but directly as an object this time - and will be null if there are errors. The errors field is an array of objects describing the error with a source, short message and/or long message fields. The errors field is null if the request is processed without errors.

    # Errors
    ## Unauthorized Error - Code 401
    Different kind of unauthorized errors can happen while using the API:
    - Invalid token
    - Expired token
    - Revoked token
    - Unknown token
    - Unapproved application
    - Unauthorized operation (Your Agendrix user does not have the rights to perform the action)

    ## Forbidden Error - Code 403
    When the token does not possess the required scope to perform the action.

    ## Rate Limiting Error - Code 429
    When the rate limit of 180 requests per minute is not respected, a rate limit error is returned. The *RateLimit-Reset* header specifies how much time is left before another request can be made.

    ## Internal Server Error - Code 500
    When an unexpected error occurs on the server, the API will return an internal server error.

    ## Not Found Error - Code 404
    It can happen for every endpoint that needs to retrieve an existing record - GET and PUT requests -, except for a bulk update.

    ## Query Param Error - Code 400
    Different kind of query param errors can be triggered by the API:
    - If a required param is missing
    - If a param has the wrong format (i.e. dates)
    - If a param has the wrong value (i.e. sort or search values)

    It can happen only for paginated endpoints - GET requests.

    ## Input Params Error - Code 400
    If a payload does not respect the schema specified in the documentation, the API will return an input params error. It can only occur for POST and PUT requests.

    ## Path Param Error - Code 400
    It can only happen for endpoints that require uncommon parameters in their path - i.e. the availability list of a member shown by date: `/members/{id}/availability_lists/{date}`.

    # Help
    ## Contact us
    If you cannot find the information you are looking for in this guide, you can contact us at the following email address: <a href='mailto:api@agendrix.com'>api@agendrix.com</a>.
  version: 1.10.5
servers:
- url: https://api.agendrix.com/v1
security:
- oauth:
  - read
  - write
tags:
- name: AvailabilityListRequests
  description: Availability list requests operations
- name: BillboardTags
  description: Billboard tags operations
- name: BillboardThreads
  description: Billboard threads operations
- name: ClockLogs
  description: Clock logs operations
- name: Comments
  description: Comments operations
- name: DriveSignatureRequests
  description: Drive signature requests operations
- name: DriveSignatures
  description: Drive signatures operations
- name: LeaveRequests
  description: Time off requests operations
- name: HRFields
  description: Human resource fields operations
- name: LeaveTypes
  description: Time off types operations
- name: MemberTimeBankTransactions
  description: Member time bank transactions operations
- name: Members
  description: A member is the entity that links a user to an organization. A user
    has one member per organization they are part of in Agendrix.
- name: OpenShiftRequests
  description: Open shift requests operations
- name: Payrolls
  description: Payrolls operations
- name: Positions
  description: A position represents an available position in the organization. Employees
    can have multiple positions assigned for each site they are part of.
- name: PremiumEntries
  description: Premium entries operations
- name: Premiums
  description: Premiums operations
- name: Publications
  description: Publications operations
- name: Resources
  description: Resources operations
- name: RoleDefinitions
  description: Role definitions operations
- name: SchedulerProjections
  description: Scheduler projections operations
- name: Session
  description: Session operations
- name: Shifts
  description: 'The shifts are the data that populates the scheduler. Is it important
    to note that the scheduler is composed of draft and published shifts. An employee
    in Agendrix will only see published shifts in their schedule. When an administrator
    or manager creates a future shift, it will be as a draft. The shift needs to be
    published for the employee to see it. Making modifications to an existing future
    shift will create a new shift version as draft. Once the shift is published, it
    will replace its older version in the employee schedule. This is also true for
    deletions, transfers, etc. Shifts in the past are automatically published. It
    is possible to add ''publish: true'' to write requests to automatically publish
    a shift after it has been modified through the API.'
- name: Sites
  description: A site represents one of the organization's sites. A manager will manage
    specific sites.
- name: TimeBanks
  description: Time banks operations
- name: TimeEntries
  description: The time entries are the finalized entries of an employee. They are
    generated from shifts, time off requests, clock-in and clock-out, and so on.
- name: TransferRequests
  description: Transfer requests operations
- name: Users
  description: Users operations
paths:
  "/availability_list_requests":
    get:
      summary: Get paginated availability list requests.
      description: Return paginated availability list requests.
      tags:
      - AvailabilityListRequests
      operationId: index_availability_list_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[member_id]
        in: query
        description: The member_id used for the search applied on the query.
        schema:
          type: string
      - name: search[created_by]
        in: query
        description: The created_by used for the search applied on the query.
        schema:
          type: string
      - name: search[availability_list_id]
        in: query
        description: The availability_list_id used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/availability_list_requests/{id}":
    get:
      summary: Get one availability list request.
      description: Return the availability list request's id holder.
      tags:
      - AvailabilityListRequests
      operationId: show_availability_list_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_tags":
    get:
      summary: Get paginated billboard tags.
      description: Return paginated billboard tags.
      tags:
      - BillboardTags
      operationId: index_billboard_tag
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a billboard tag.
      description: Create a billboard tag from the body.
      tags:
      - BillboardTags
      operationId: create_billboard_tag
      requestBody:
        "$ref": "#/components/requestBodies/BillboardTagCreate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/billboard_tags/{id}":
    get:
      summary: Get one billboard tag.
      description: Return the billboard tag's id holder.
      tags:
      - BillboardTags
      operationId: show_billboard_tag
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a billboard tag.
      description: Update a billboard tag from the body.
      tags:
      - BillboardTags
      operationId: update_billboard_tag
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/BillboardTagUpdate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a billboard tag
      description: Delete the billboard tag's id holder.
      tags:
      - BillboardTags
      operationId: delete_billboard_tag
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_threads":
    get:
      summary: Get paginated billboard threads.
      description: Return paginated billboard threads.
      tags:
      - BillboardThreads
      operationId: index_billboard_thread
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[start_date]
        in: query
        description: Sorts the query by the start_date value, which must be 'asc'
          or 'desc', case insensitive.
        schema:
          type: string
      - name: sort[end_date]
        in: query
        description: Sorts the query by the end_date value, which must be 'asc' or
          'desc', case insensitive.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a billboard thread.
      description: Create a billboard thread from the body.
      tags:
      - BillboardThreads
      operationId: create_billboard_thread
      requestBody:
        "$ref": "#/components/requestBodies/BillboardThreadCreate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/billboard_threads/{id}":
    get:
      summary: Get one billboard thread.
      description: Return the billboard thread's id holder.
      tags:
      - BillboardThreads
      operationId: show_billboard_thread
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a billboard thread.
      description: Update a billboard thread from the body.
      tags:
      - BillboardThreads
      operationId: update_billboard_thread
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/BillboardThreadUpdate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a billboard thread
      description: Delete the billboard thread's id holder.
      tags:
      - BillboardThreads
      operationId: delete_billboard_thread
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_threads/{id}/positions":
    get:
      summary: Get paginated positions.
      description: Return paginated positions.
      tags:
      - BillboardThreads
      operationId: index_billboard_thread_positions
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[name]
        in: query
        description: Sorts the query by the name value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: sort[rank]
        in: query
        description: Sorts the query by the rank value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: search[name]
        in: query
        description: The name used for the search applied on the query.
        schema:
          type: string
      - name: search[rank]
        in: query
        description: The rank used for the search applied on the query.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Includes archived positions into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active positions from the paginated result.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/billboard_threads/{id}/sites":
    get:
      summary: Get paginated sites.
      description: Return paginated sites.
      tags:
      - BillboardThreads
      operationId: index_billboard_thread_sites
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Includes archived sites into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active sites from the paginated result.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/billboard_threads/{id}/tags":
    get:
      summary: Get paginated billboard tags.
      description: Return paginated billboard tags.
      tags:
      - BillboardThreads
      operationId: index_billboard_thread_billboard_tags
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/clock_logs":
    get:
      summary: Get paginated clock logs.
      description: Return paginated clock logs.
      tags:
      - ClockLogs
      operationId: index_clock_log
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[created_at]
        in: query
        description: Sorts the query by the created_at value, which must be 'asc'
          or 'desc', case insensitive.
        schema:
          type: string
      - name: search[shift_id]
        in: query
        description: The shift_id used for the search applied on the query.
        schema:
          type: string
      - name: search[member_id]
        in: query
        description: The member_id used for the search applied on the query.
        schema:
          type: string
      - name: search[job_site_id]
        in: query
        description: The job_site_id used for the search applied on the query.
        schema:
          type: string
      - name: search[success]
        in: query
        description: The success status - true or false - used for the search applied
          on the query.
        schema:
          type: string
      - name: search[has_questions]
        in: query
        description: The has_questions status - true or false - used for the search
          applied on the query.
        schema:
          type: string
      - name: search[created_since]
        in: query
        description: The created_since date time used for the search applied on the
          query.
        schema:
          type: string
      - name: search[created_until]
        in: query
        description: The created_until date time used for the search applied on the
          query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ClockLogSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/clock_logs/{id}":
    get:
      summary: Get one clock log.
      description: Return the clock log's id holder.
      tags:
      - ClockLogs
      operationId: show_clock_log
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ClockLogSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/comments":
    get:
      summary: Get paginated comments.
      description: Return paginated comments.
      tags:
      - Comments
      operationId: index_comment
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[commentable_id]
        in: query
        description: The commentable_id used for the search applied on the query.
        schema:
          type: string
      - name: search[commentable_type]
        in: query
        description: The commentable_type used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a comment.
      description: Create a comment from the body.
      tags:
      - Comments
      operationId: create_comment
      requestBody:
        "$ref": "#/components/requestBodies/CommentCreate"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/comments/{id}":
    get:
      summary: Get one comment.
      description: Return the comment's id holder.
      tags:
      - Comments
      operationId: show_comment
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a comment.
      description: Update a comment from the body.
      tags:
      - Comments
      operationId: update_comment
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/CommentUpdate"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a comment
      description: Delete the comment's id holder.
      tags:
      - Comments
      operationId: delete_comment
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/documents/{id}":
    get:
      summary: Get one document.
      description: Return the document's id holder.
      tags:
      - Documents
      operationId: show_document
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DocumentSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests/{id}/approve":
    put:
      summary: Approve a time off request
      description: Change a pending time off request status to approved
      tags:
      - LeaveRequests
      operationId: approve_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests/{id}/cancel":
    put:
      summary: Cancel a time off request
      description: Change a time off request status to canceled
      tags:
      - LeaveRequests
      operationId: cancel_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests":
    get:
      summary: Get paginated time off requests.
      description: Return paginated time off requests.
      tags:
      - LeaveRequests
      operationId: index_leave_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[member_id]
        in: query
        description: The member_id used for the search applied on the query.
        schema:
          type: string
      - name: search[created_by]
        in: query
        description: The created_by used for the search applied on the query.
        schema:
          type: string
      - name: search[status]
        in: query
        description: The time off requests status. Valid values are approved, canceled,
          declined and pending.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a time off request.
      description: Create a time off request from the body.
      tags:
      - LeaveRequests
      operationId: create_leave_request
      requestBody:
        "$ref": "#/components/requestBodies/LeaveRequestCreate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_requests/{id}/decline":
    put:
      summary: Decline a pending time off request
      description: Change a time off request status to declined
      tags:
      - LeaveRequests
      operationId: decline_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests/{id}":
    get:
      summary: Get one time off request.
      description: Return the time off request's id holder.
      tags:
      - LeaveRequests
      operationId: show_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a time off request.
      description: Update a time off request from the body.
      tags:
      - LeaveRequests
      operationId: update_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/LeaveRequestUpdate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_types":
    get:
      summary: Get paginated time off types.
      description: Return paginated time off types.
      tags:
      - LeaveTypes
      operationId: index_leave_type
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a time off type.
      description: Create a time off type from the body.
      tags:
      - LeaveTypes
      operationId: create_leave_type
      requestBody:
        "$ref": "#/components/requestBodies/LeaveTypeCreate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_types/{id}":
    get:
      summary: Get one time off type.
      description: Return the time off type's id holder.
      tags:
      - LeaveTypes
      operationId: show_leave_type
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a time off type.
      description: Update a time off type from the body.
      tags:
      - LeaveTypes
      operationId: update_leave_type
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/LeaveTypeUpdate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a time off type.
      description: Delete the time off type's id holder.
      tags:
      - LeaveTypes
      operationId: delete_leave_type
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        403:
          "$ref": "#/components/responses/ForbiddenFailure"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/member_time_bank_transactions":
    get:
      summary: Get paginated member time bank transactions.
      description: Return paginated member time bank transactions.
      tags:
      - MemberTimeBankTransactions
      operationId: index_member_time_bank_transaction
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[date]
        in: query
        description: Sorts the query by the date value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: search[member_id]
        in: query
        description: The member_id used for the search applied on the query.
        schema:
          type: string
      - name: search[member_time_bank_id]
        in: query
        description: The member_time_bank_id used for the search applied on the query.
        schema:
          type: string
      - name: search[from]
        in: query
        description: The from date used for the search applied on the query.
        schema:
          type: string
      - name: search[to]
        in: query
        description: The to date used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankTransactionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/member_time_bank_transactions/{id}":
    get:
      summary: Get one member time bank transaction.
      description: Return the member time bank transaction's id holder.
      tags:
      - MemberTimeBankTransactions
      operationId: show_member_time_bank_transaction
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankTransactionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members":
    get:
      summary: Get paginated members.
      description: Return paginated members.
      tags:
      - Members
      operationId: index_member
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[main_position_id]
        in: query
        description: The main_position_id used for the search applied on the query.
        schema:
          type: string
      - name: search[main_site_id]
        in: query
        description: The main_site_id used for the search applied on the query.
        schema:
          type: string
      - name: search[visible]
        in: query
        description: The visible used for the search applied on the query.
        schema:
          type: string
      - name: search[identification_number]
        in: query
        description: The identification_number used for the search applied on the
          query.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Includes archived members into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active members from the paginated result.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a member.
      description: Create a member from the body.
      tags:
      - Members
      operationId: create_member
      requestBody:
        "$ref": "#/components/requestBodies/MemberCreate"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/members/{id}":
    get:
      summary: Get one member.
      description: Return the member's id holder.
      tags:
      - Members
      operationId: show_member
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a member.
      description: Update a member from the body.
      tags:
      - Members
      operationId: update_member
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/MemberUpdate"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a member.
      description: Delete the member's id holder.
      tags:
      - Members
      operationId: delete_member
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/restore":
    put:
      summary: Restore a deleted member.
      description: Restore the member's id holder.
      tags:
      - Members
      operationId: restore_member
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/availability_lists/{date}":
    get:
      summary: Get one availability list.
      description: Return an approved availability list at the specified date.
      tags:
      - Members
      operationId: show_availability_list
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/Date"
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListSuccessOne"
        400:
          "$ref": "#/components/responses/PathParamFailure"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/availability_lists":
    get:
      summary: Get paginated availability lists.
      description: Return paginated availability lists.
      tags:
      - Members
      operationId: index_member_availability_lists
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[status]
        in: query
        description: The status used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/member_sites":
    get:
      summary: Get paginated member sites.
      description: Return paginated member sites.
      tags:
      - Members
      operationId: index_member_member_sites
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[role]
        in: query
        description: The role used for the search applied on the query. Must be 'member',
          'supervisor' or 'manager'.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberSiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/member_time_banks":
    get:
      summary: Get paginated member time banks.
      description: Return paginated member time banks.
      tags:
      - Members
      operationId: index_member_member_time_banks
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[time_bank_id]
        in: query
        description: The time_bank_id used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/positions":
    get:
      summary: Get paginated positions.
      description: Return paginated positions.
      tags:
      - Members
      operationId: index_member_positions
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[name]
        in: query
        description: Sorts the query by the name value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: sort[rank]
        in: query
        description: Sorts the query by the rank value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: search[name]
        in: query
        description: The name used for the search applied on the query.
        schema:
          type: string
      - name: search[rank]
        in: query
        description: The rank used for the search applied on the query.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Includes archived positions into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active positions from the paginated result.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/hr/private_data":
    get:
      summary: Get human resource private data.
      description: Return the member's human resource private data.
      tags:
      - Members
      operationId: show_member_hr_private_data
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/HRPrivateDataSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/sites":
    get:
      summary: Get paginated sites.
      description: Return paginated sites.
      tags:
      - Members
      operationId: index_member_sites
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Includes archived sites into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active sites from the paginated result.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/open_shift_requests/{id}/approve":
    put:
      summary: Approve an open shift request
      description: Assign the open shift to one or many volunteers.
      tags:
      - OpenShiftRequests
      operationId: approve_open_shift_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/open_shift_requests/{id}/cancel":
    put:
      summary: Cancel an open shift request
      description: Change an open shift request status to canceled and delete the
        corresponding open shift.
      tags:
      - OpenShiftRequests
      operationId: cancel_open_shift_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/open_shift_requests":
    get:
      summary: Get paginated open shift requests.
      description: Return paginated open shift requests.
      tags:
      - OpenShiftRequests
      operationId: index_open_shift_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[shift_id]
        in: query
        description: The shift_id used for the search applied on the query.
        schema:
          type: string
      - name: search[with_volunteers]
        in: query
        description: Set to true to only return requests with volunteers.
        schema:
          type: string
      - name: search[status]
        in: query
        description: The open shift request's status. Valid values are approved, canceled,
          expired, and pending.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/open_shift_requests/{id}":
    get:
      summary: Get one open shift request.
      description: Return the open shift request's id holder.
      tags:
      - OpenShiftRequests
      operationId: show_open_shift_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/payrolls":
    get:
      summary: Get paginated payrolls.
      description: Return paginated payrolls.
      tags:
      - Payrolls
      operationId: index_payroll
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[start_at]
        in: query
        description: Sorts the query by the start_at value, which must be 'asc' or
          'desc', case insensitive.
        schema:
          type: string
      - name: sort[end_at]
        in: query
        description: Sorts the query by the end_at value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: search[status]
        in: query
        description: The status used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/payrolls/{id}":
    get:
      summary: Get one payroll.
      description: Return the payroll's id holder.
      tags:
      - Payrolls
      operationId: show_payroll
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a payroll.
      description: Update a payroll from the body.
      tags:
      - Payrolls
      operationId: update_payroll
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/PayrollUpdate"
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/positions":
    get:
      summary: Get paginated positions.
      description: Return paginated positions.
      tags:
      - Positions
      operationId: index_position
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[name]
        in: query
        description: Sorts the query by the name value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: sort[rank]
        in: query
        description: Sorts the query by the rank value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: search[name]
        in: query
        description: The name used for the search applied on the query.
        schema:
          type: string
      - name: search[rank]
        in: query
        description: The rank used for the search applied on the query.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Includes archived positions into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active positions from the paginated result.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a position.
      description: Create a position from the body.
      tags:
      - Positions
      operationId: create_position
      requestBody:
        "$ref": "#/components/requestBodies/PositionCreate"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/positions/{id}":
    get:
      summary: Get one position.
      description: Return the position's id holder.
      tags:
      - Positions
      operationId: show_position
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a position.
      description: Update a position from the body.
      tags:
      - Positions
      operationId: update_position
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/PositionUpdate"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a position.
      description: Delete the position's id holder.
      tags:
      - Positions
      operationId: delete_position
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/premium_entries":
    get:
      summary: Get paginated premium entries.
      description: Return paginated premium entries.
      tags:
      - PremiumEntries
      operationId: index_premium_entry
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[entry_id]
        in: query
        description: The entry's id used for the search applied on the query.
        schema:
          type: string
      - name: search[entry_type]
        in: query
        description: The entry's type used for the search applied on the query.
        schema:
          type: string
      - name: search[created_by_id]
        in: query
        description: The entry's creator id used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PremiumEntrySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/premium_entries/{id}":
    get:
      summary: Get one premium entry.
      description: Return the premium entry's id holder.
      tags:
      - PremiumEntries
      operationId: show_premium_entry
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PremiumEntrySuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/premiums":
    get:
      summary: Get paginated premiums.
      description: Return paginated premiums.
      tags:
      - Premiums
      operationId: index_premium
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[only_time_offs]
        in: query
        description: The only_time_offs value used for the search applied on the query.
        schema:
          type: string
      - name: search[compute_manually]
        in: query
        description: The compute_manually value used for the search applied on the
          query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PremiumSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/premiums/{id}":
    get:
      summary: Get one premium.
      description: Return the premium's id holder.
      tags:
      - Premiums
      operationId: show_premium
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PremiumSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/publications":
    get:
      summary: Get paginated publications.
      description: Return paginated publications.
      tags:
      - Publications
      operationId: index_publication
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/PublicationSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/publications/{id}":
    get:
      summary: Get one publication.
      description: Return the publication's id holder.
      tags:
      - Publications
      operationId: show_publication
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PublicationSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/resources":
    get:
      summary: Get paginated resources.
      description: Return paginated resources.
      tags:
      - Resources
      operationId: index_resource
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Includes archived resources into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active resources from the paginated result.
        schema:
          type: string
      - name: search[name]
        in: query
        description: The name used for the search applied on the query.
        schema:
          type: string
      - name: search[no]
        in: query
        description: The unique short identifier used for the search applied on the
          query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a resource.
      description: Create a resource from the body.
      tags:
      - Resources
      operationId: create_resource
      requestBody:
        "$ref": "#/components/requestBodies/ResourceCreate"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/resources/{id}":
    get:
      summary: Get one resource.
      description: Return the resource's id holder.
      tags:
      - Resources
      operationId: show_resource
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a resource.
      description: Update a resource from the body.
      tags:
      - Resources
      operationId: update_resource
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ResourceUpdate"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a resource.
      description: Delete the resource's id holder.
      tags:
      - Resources
      operationId: delete_resource
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/resources/{id}/restore":
    put:
      summary: Restore a resource
      description: Restore an archived resource
      tags:
      - Resources
      operationId: restore_resource
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/resources/bulk":
    post:
      summary: Create many resources.
      description: Create many resources from the body.
      tags:
      - Resources
      operationId: bulk_create_resource
      requestBody:
        "$ref": "#/components/requestBodies/ResourceBulkCreate"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessManyWithoutPagination"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/role_definitions":
    get:
      summary: Get paginated role definitions.
      description: Return paginated role definitions.
      tags:
      - RoleDefinitions
      operationId: index_role_definition
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/RoleDefinitionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/role_definitions/{id}":
    get:
      summary: Get one role definition.
      description: Return the role definition's id holder.
      tags:
      - RoleDefinitions
      operationId: show_role_definition
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/RoleDefinitionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/scheduler_projections":
    get:
      summary: Get paginated scheduler projections.
      description: Return paginated scheduler projections.
      tags:
      - SchedulerProjections
      operationId: index_scheduler_projection
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[date]
        in: query
        description: Sorts the query by the date value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: search[site_id]
        in: query
        description: The site_id used for the search applied on the query.
        schema:
          type: string
      - name: search[position_id]
        in: query
        description: The position_id used for the search applied on the query.
        schema:
          type: string
      - name: search[integration_name]
        in: query
        description: The integration_name used for the search applied on the query.
        schema:
          type: string
      - name: search[from]
        in: query
        description: The from date time used for the search applied on the query.
        schema:
          type: string
      - name: search[to]
        in: query
        description: The to date time used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a scheduler projection.
      description: Create a scheduler projection from the body.
      tags:
      - SchedulerProjections
      operationId: create_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionCreate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/scheduler_projections/{id}":
    get:
      summary: Get one scheduler projection.
      description: Return the scheduler projection's id holder.
      tags:
      - SchedulerProjections
      operationId: show_scheduler_projection
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a scheduler projection.
      description: Update a scheduler projection from the body.
      tags:
      - SchedulerProjections
      operationId: update_scheduler_projection
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a scheduler projection.
      description: Delete the scheduler projection's id holder.
      tags:
      - SchedulerProjections
      operationId: delete_scheduler_projection
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/scheduler_projections/bulk":
    put:
      summary: Update many scheduler projections.
      description: Update many scheduler projections from the body.
      tags:
      - SchedulerProjections
      operationId: bulk_update_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionBulkUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessManyWithoutPagination"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    post:
      summary: Create many scheduler projections.
      description: Create many scheduler projections from the body.
      tags:
      - SchedulerProjections
      operationId: bulk_create_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionBulkCreate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessManyWithoutPagination"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/session":
    get:
      summary: Get one session
      description: Return your organization, user and member data
      tags:
      - Session
      operationId: show_session
      responses:
        200:
          "$ref": "#/components/responses/SessionSuccessOne"
  "/shifts":
    get:
      summary: Get paginated shifts.
      description: Return paginated shifts.
      tags:
      - Shifts
      operationId: index_shift
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[start_at]
        in: query
        description: Sorts the query by the start_at value, which must be 'asc' or
          'desc', case insensitive.
        schema:
          type: string
      - name: sort[end_at]
        in: query
        description: Sorts the query by the end_at value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: sort[updated_at]
        in: query
        description: Sorts the query by the updated_at value, which must be 'asc'
          or 'desc', case insensitive.
        schema:
          type: string
      - name: search[member_id]
        in: query
        description: The member_id used for the search applied on the query.
        schema:
          type: string
      - name: search[position_id]
        in: query
        description: The position_id used for the search applied on the query.
        schema:
          type: string
      - name: search[site_id]
        in: query
        description: The site_id used for the search applied on the query.
        schema:
          type: string
      - name: search[status]
        in: query
        description: The status used for the search applied on the query. Must be
          'draft' or 'published'.
        schema:
          type: string
      - name: search[from]
        in: query
        description: The from date time used for the search applied on the query.
          Required if updated_since and updated_until are not provided.
        schema:
          type: string
      - name: search[to]
        in: query
        description: The to date time used for the search applied on the query. The
          maximum range between 'from' and 'to' must be equal to or less than 31 days.
          Every shift overlapping this range will be returned. Required if updated_since
          and updated_until are not provided.
        schema:
          type: string
      - name: search[updated_since]
        in: query
        description: The updated_since date time used for the search applied on the
          query.
        schema:
          type: string
      - name: search[updated_until]
        in: query
        description: The updated_until date time used for the search applied on the
          query.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Includes archived shifts into the paginated result. Only usable
          with updated_since and updated_until filters.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a shift.
      description: Create a shift from the body.
      tags:
      - Shifts
      operationId: create_shift
      requestBody:
        "$ref": "#/components/requestBodies/ShiftCreate"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/shifts/{id}":
    get:
      summary: Get one shift.
      description: Return the shift's id holder.
      tags:
      - Shifts
      operationId: show_shift
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a shift.
      description: Update a shift from the body.
      tags:
      - Shifts
      operationId: update_shift
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ShiftUpdate"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a shift.
      description: Delete the shift's id holder.
      tags:
      - Shifts
      operationId: delete_shift
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ShiftDelete"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/shifts/{id}/transfer":
    put:
      summary: Transfer a shift.
      description: Transfer to a specific member and/or date. Can also transfer an
        assigned shift to an open one by leaving the member_id blank.
      tags:
      - Shifts
      operationId: transfer_shift
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ShiftTransfer"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/shifts/{id}/toggle_tasks_completion":
    put:
      summary: Toggle task completion.
      description: Toggle task completion for a shift (if the Plus plan is enabled).
      tags:
      - ShiftTasks
      operationId: toggle_shift_tasks
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/shifts/{id}/activities":
    get:
      summary: Get paginated activities.
      description: Return paginated activities.
      tags:
      - Shifts
      operationId: index_shift_activities
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[created_at]
        in: query
        description: Sorts the query by the created_at value, which must be 'asc'
          or 'desc', case insensitive.
        schema:
          type: string
      - name: search[trackable_id]
        in: query
        description: The trackable_id used for the search applied on the query.
        schema:
          type: string
      - name: search[trackable_type]
        in: query
        description: The trackable_type used for the search applied on the query.
        schema:
          type: string
      - name: search[owner_id]
        in: query
        description: The owner_id used for the search applied on the query.
        schema:
          type: string
      - name: search[owner_type]
        in: query
        description: The owner_type used for the search applied on the query.
        schema:
          type: string
      - name: search[key]
        in: query
        description: The key used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ActivitySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/breaks":
    get:
      summary: Get paginated breaks.
      description: Return paginated breaks.
      tags:
      - Shifts
      operationId: index_shift_breaks
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BreakSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/tasks":
    get:
      summary: Get paginated tasks (if the Plus plan is enabled).
      description: Return paginated tasks.
      tags:
      - Shifts
      operationId: index_shift_tasks
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/TaskSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/premium_entries":
    get:
      summary: Get paginated premium entries.
      description: Return paginated premium entries.
      tags:
      - Shifts
      operationId: index_shift_premium_entries
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[entry_id]
        in: query
        description: The entry's id used for the search applied on the query.
        schema:
          type: string
      - name: search[entry_type]
        in: query
        description: The entry's type used for the search applied on the query.
        schema:
          type: string
      - name: search[created_by_id]
        in: query
        description: The entry's creator id used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PremiumEntrySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/resources":
    get:
      summary: Get paginated resources.
      description: Return paginated resources.
      tags:
      - Shifts
      operationId: index_shift_resources
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Includes archived resources into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active resources from the paginated result.
        schema:
          type: string
      - name: search[name]
        in: query
        description: The name used for the search applied on the query.
        schema:
          type: string
      - name: search[no]
        in: query
        description: The unique short identifier used for the search applied on the
          query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/versions":
    get:
      summary: Get many shifts.
      description: Return the shift's id holder versions.
      tags:
      - Shifts
      operationId: show_shift_shifts
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessManyWithoutPagination"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/shifts/{id}/audience_members":
    get:
      summary: Get paginated open shift audience members.
      description: Return paginated open shift audience members.
      tags:
      - Shifts
      operationId: index_shift_open_shift_audience_members
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[query]
        in: query
        description: Keywords used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftAudienceMemberSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/sites":
    get:
      summary: Get paginated sites.
      description: Return paginated sites.
      tags:
      - Sites
      operationId: index_site
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Includes archived sites into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active sites from the paginated result.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a site.
      description: Create a site from the body.
      tags:
      - Sites
      operationId: create_site
      requestBody:
        "$ref": "#/components/requestBodies/SiteCreate"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/sites/{id}":
    get:
      summary: Get one site.
      description: Return the site's id holder.
      tags:
      - Sites
      operationId: show_site
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a site.
      description: Update a site from the body.
      tags:
      - Sites
      operationId: update_site
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/SiteUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a site.
      description: Delete the site's id holder.
      tags:
      - Sites
      operationId: delete_site
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/time_banks":
    get:
      summary: Get paginated time banks.
      description: Return paginated time banks.
      tags:
      - TimeBanks
      operationId: index_time_bank
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[name]
        in: query
        description: Sorts the query by the name value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: search[name]
        in: query
        description: The name used for the search applied on the query.
        schema:
          type: string
      - name: search[time_off]
        in: query
        description: Returns only the time off banks if set to true, excludes them
          if set to false.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/TimeBankSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/time_banks/{id}":
    get:
      summary: Get one time bank.
      description: Return the time bank's id holder.
      tags:
      - TimeBanks
      operationId: show_time_bank
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TimeBankSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/time_entries":
    get:
      summary: Get paginated time entries.
      description: Return paginated time entries.
      tags:
      - TimeEntries
      operationId: index_time_entry
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[start_at]
        in: query
        description: Sorts the query by the start_at value, which must be 'asc' or
          'desc', case insensitive.
        schema:
          type: string
      - name: sort[end_at]
        in: query
        description: Sorts the query by the end_at value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: sort[date]
        in: query
        description: Sorts the query by the date value, which must be 'asc' or 'desc',
          case insensitive.
        schema:
          type: string
      - name: sort[updated_at]
        in: query
        description: Sorts the query by the updated_at value, which must be 'asc'
          or 'desc', case insensitive.
        schema:
          type: string
      - name: search[time_off]
        in: query
        description: The time_off status - true or false - used for the search applied
          on the query.
        schema:
          type: string
      - name: search[position_id]
        in: query
        description: The position_id used for the search applied on the query.
        schema:
          type: string
      - name: search[site_id]
        in: query
        description: The site_id used for the search applied on the query.
        schema:
          type: string
      - name: search[member_id]
        in: query
        description: The member_id used for the search applied on the query.
        schema:
          type: string
      - name: search[approved]
        in: query
        description: The approved status - true of false - used for the search applied
          on the query.
        schema:
          type: string
      - name: search[from]
        in: query
        description: The 'from' date used for the search applied on the query. Required
          if 'updated_since', 'updated_until' or 'member_id' are not provided.
        schema:
          type: string
      - name: search[to]
        in: query
        description: The 'to' date used for the search applied on the query. The maximum
          range between 'from' and 'to' must be equal to or less than 31 days. Required
          if 'updated_since', 'updated_until' or 'member_id' are not provided.
        schema:
          type: string
      - name: search[updated_since]
        in: query
        description: The updated_since date time used for the search applied on the
          query.
        schema:
          type: string
      - name: search[updated_until]
        in: query
        description: The updated_until date time used for the search applied on the
          query.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Includes archived time entries into the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active time entries from the paginated result.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a time entry.
      description: Create a time entry from the body.
      tags:
      - TimeEntries
      operationId: create_time_entry
      requestBody:
        "$ref": "#/components/requestBodies/TimeEntryCreate"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/time_entries/{id}":
    get:
      summary: Get one time entry.
      description: Return the time entry's id holder.
      tags:
      - TimeEntries
      operationId: show_time_entry
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a time entry.
      description: Update a time entry from the body.
      tags:
      - TimeEntries
      operationId: update_time_entry
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/TimeEntryUpdate"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a time entry.
      description: Delete the time entry's id holder.
      tags:
      - TimeEntries
      operationId: delete_time_entry
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/time_entries/{id}/activities":
    get:
      summary: Get paginated activities.
      description: Return paginated activities.
      tags:
      - TimeEntries
      operationId: index_time_entry_activities
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[created_at]
        in: query
        description: Sorts the query by the created_at value, which must be 'asc'
          or 'desc', case insensitive.
        schema:
          type: string
      - name: search[trackable_id]
        in: query
        description: The trackable_id used for the search applied on the query.
        schema:
          type: string
      - name: search[trackable_type]
        in: query
        description: The trackable_type used for the search applied on the query.
        schema:
          type: string
      - name: search[owner_id]
        in: query
        description: The owner_id used for the search applied on the query.
        schema:
          type: string
      - name: search[owner_type]
        in: query
        description: The owner_type used for the search applied on the query.
        schema:
          type: string
      - name: search[key]
        in: query
        description: The key used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ActivitySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/transfer_requests":
    get:
      summary: Get paginated transfer requests.
      description: Return paginated transfer requests.
      tags:
      - TransferRequests
      operationId: index_transfer_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[member_id]
        in: query
        description: The member_id used for the search applied on the query.
        schema:
          type: string
      - name: search[created_by]
        in: query
        description: The created_by used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/TransferRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/transfer_requests/{id}":
    get:
      summary: Get one transfer request.
      description: Return the transfer request's id holder.
      tags:
      - TransferRequests
      operationId: show_transfer_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TransferRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/users/me":
    get:
      summary: Get one user.
      description: Return your user data.
      tags:
      - Users
      operationId: show_user
      responses:
        200:
          "$ref": "#/components/responses/UserSuccessOne"
    put:
      summary: Update a user.
      description: Update your user data.
      tags:
      - Users
      operationId: update_user
      requestBody:
        "$ref": "#/components/requestBodies/UserUpdate"
      responses:
        200:
          "$ref": "#/components/responses/UserSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/drive/files":
    post:
      summary: Create a file.
      description: Create a file from the body.
      tags:
      - DriveFiles
      operationId: create_drive_file
      requestBody:
        "$ref": "#/components/requestBodies/DriveFileCreate"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/drive/files/{id}":
    put:
      summary: Update a file.
      description: Update a file from the body.
      tags:
      - DriveFiles
      operationId: update_drive_file
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/DriveFileUpdate"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a file.
      description: Delete the file's id holder.
      tags:
      - DriveFiles
      operationId: delete_drive_file
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/folders":
    post:
      summary: Create a folder.
      description: Create a folder from the body.
      tags:
      - DriveFolders
      operationId: create_drive_folder
      requestBody:
        "$ref": "#/components/requestBodies/DriveFolderCreate"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/drive/folders/{id}":
    put:
      summary: Update a folder.
      description: Update a folder from the body.
      tags:
      - DriveFolders
      operationId: update_drive_folder
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/DriveFolderUpdate"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a folder.
      description: Delete the folder's id holder.
      tags:
      - DriveFolders
      operationId: delete_drive_folder
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/items":
    get:
      summary: Get paginated files and folders.
      description: Return paginated files and folders.
      tags:
      - DriveItems
      operationId: index_drive_item
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[member_id]
        in: query
        description: The member_id used for the search applied on the query.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Includes archived files/folders in the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active files/folders from the paginated result.
        schema:
          type: string
      - name: search[folder_id]
        in: query
        description: The folder_id used for the search applied on the query.
        schema:
          type: string
      - name: search[type]
        in: query
        description: The item type. Valid values are folder and file.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/drive/items/{id}":
    get:
      summary: Get one item.
      description: Return the item's id holder.
      tags:
      - DriveItems
      operationId: show_drive_item
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/signature_requests":
    get:
      summary: Get paginated signature requests.
      description: Get paginated signature requests.
      tags:
      - DriveSignatureRequests
      operationId: index_drive_signature_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Includes canceled signature requests in the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active signature requests from the paginated result.
        schema:
          type: string
      - name: search[creator_id]
        in: query
        description: Filter by id of the creator of the signature request.
        schema:
          type: string
      - name: search[state]
        in: query
        description: 'Filter by state of the request. Options are: ''pending'', ''completed'',
          or ''canceled''.'
        schema:
          type: string
      - name: search[type]
        in: query
        description: 'Filter by signature request type. Options are: ''member'', ''onboarding'',
          or ''team_library''.'
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a signature request.
      description: Create a signature request with parameters.
      tags:
      - DriveSignatureRequests
      operationId: create_drive_signature_request
      requestBody:
        "$ref": "#/components/requestBodies/DriveSignatureRequestCreate"
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureRequestSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/drive/signature_requests/{id}":
    get:
      summary: Get a signature request.
      description: Return the signature request's id holder.
      tags:
      - DriveSignatureRequests
      operationId: show_drive_signature_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/signature_requests/{id}/cancel":
    put:
      summary: Cancel a signature request.
      description: Cancel the signature request's id holder.
      tags:
      - DriveSignatureRequests
      operationId: cancel_drive_signature_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/signatures/{id}":
    get:
      summary: Get one signature.
      description: Return the signature's id holder.
      tags:
      - DriveSignatures
      operationId: show_drive_signature
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/signatures":
    get:
      summary: Get paginated signatures.
      description: Return paginated signatures.
      tags:
      - DriveSignatures
      operationId: index_drive_signature
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Includes canceled signatures in the paginated result.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Excludes active signatures from the paginated result.
        schema:
          type: string
      - name: search[state]
        in: query
        description: 'Filter by state of the signature. Options are: ''pending'' or
          ''completed''.'
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/hr/fields":
    get:
      summary: Get paginated human resource fields.
      description: Return paginated human resource fields.
      tags:
      - HRFields
      operationId: index_hr_field
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[custom]
        in: query
        description: The custom status - true or false - used for the search applied
          on the query.
        schema:
          type: string
      - name: search[enabled]
        in: query
        description: The enabled status - true or false - used for the search applied
          on the query.
        schema:
          type: string
      - name: search[rank]
        in: query
        description: The rank used for the search applied on the query.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/HRFieldSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/hr/fields/{id}":
    get:
      summary: Get a human resource field.
      description: Return the human resource field's id holder.
      tags:
      - HRFields
      operationId: show_hr_field
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/HRFieldSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
components:
  schemas:
    Activity:
      type: object
      description: A detailed description of an activity.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        trackable_id:
          type: string
          description: The activity's trackable id.
          format: uuid
        trackable_type:
          type: string
          description: The activity's trackable type.
        owner_id:
          type: string
          description: The activity's owner id.
          format: uuid
        owner_type:
          type: string
          description: The activity's owner type.
        key:
          type: string
          description: The activity's key.
        created_at:
          type: string
          description: When the activity was created.
          format: date-time
        updated_at:
          type: string
          description: When the activity was last updated.
          format: date-time
        parameters:
          type: object
          description: The activity's parameters.
    Availability:
      type: object
      description: A detailed description of an availability.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        day:
          type: integer
          description: The day of the scheduler week for the organization.
          format: int32
        start_at:
          type: string
          description: The start at time of the availability (HH:MM).
        end_at:
          type: string
          description: The end at time of the availability (HH:MM).
        available:
          type: boolean
          description: If the availability is available or not.
        all_day:
          type: boolean
          description: If the availability is all day or not.
        created_at:
          type: string
          description: When the availability was created.
          format: date-time
        updated_at:
          type: string
          description: When the availability was last updated.
          format: date-time
    AvailabilityListRequest:
      type: object
      description: A detailed description of an availability list request.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The availability list request's member id.
          format: uuid
        created_by:
          type: string
          description: The availability list request's creator id.
          format: uuid
        availability_list_id:
          type: string
          description: The availability list request's availability list id.
          format: uuid
        expired_at:
          type: string
          description: The availability list request expiration date time.
          format: date-time
        created_at:
          type: string
          description: When the availability list request was created.
          format: date-time
        updated_at:
          type: string
          description: When the availability list request was last updated.
          format: date-time
    AvailabilityList:
      type: object
      description: A detailed description of an availability list.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The availability list's member id.
          format: uuid
        name:
          type: string
          description: The availability list's name.
        note:
          type: string
          description: The availability list's notes.
        week_minimum:
          type: integer
          description: The minimum number of hours per week desired by the employee.
          format: int32
        week_maximum:
          type: integer
          description: The maximum number of hours per week desired by the employee.
          format: int32
        repeat_interval:
          type: boolean
          description: 'How often the availability list is repeated, in weeks (e.g.,
            1: every week, null: is not repeated).'
        status:
          type: string
          description: The availability list's status.
        cancelable:
          type: boolean
          description: If the availability list is cancelable.
        start_date:
          type: string
          description: When the availability list starts.
          format: date
        end_date:
          type: string
          description: When the availability list ends.
          format: date
        created_at:
          type: string
          description: When the availability list was created.
          format: date-time
        updated_at:
          type: string
          description: When the availability list was last updated.
          format: date-time
        availabilities:
          type: array
          description: The availability in the availability list.
          items:
            "$ref": "#/components/schemas/Availability"
    BillboardTag:
      type: object
      description: A detailed description of a billboard tag.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The tag's name.
        unread_count:
          type: integer
          description: Number of unread threads with this tag.
          format: int32
        created_at:
          type: string
          description: When the tag was created.
          format: date-time
        updated_at:
          type: string
          description: When the tag was last updated.
          format: date-time
    BillboardThreadStats:
      type: object
      description: A detailed description of a billboard thread stats.
      properties:
        confirmed_count:
          type: integer
          description: The number of acknowledgements.
          format: int32
        percent_confirmed:
          type: number
          description: The percentage of acknowledgements out of all concerned members.
          format: float
        views_count:
          type: integer
          description: The number of views.
          format: int32
        percent_views:
          type: number
          description: The percentage of views out of all concerned members.
          format: float
    BillboardThread:
      type: object
      description: A detailed description of a billboard thread.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        created_by:
          type: string
          description: The unique identifier of the member who created the thread.
          format: uuid
        updated_by:
          type: string
          description: The unique identifier of the last member who updated the thread.
          format: uuid
        title:
          type: string
          description: The thread's title.
        content:
          type: string
          description: The thread's full content.
        content_excerpt:
          type: string
          description: And excerpt of the thread's full content (around 20 words).
        billboard_views_count:
          type: integer
          description: The number of times the thread has been viewed.
          format: int32
        billboard_acknowledged_count:
          type: integer
          description: The number of times the thread has been acknowledged.
          format: int32
        comments_count:
          type: integer
          description: The number of comments on the thread.
          format: int32
        start_date:
          type: string
          description: The thread's publication date.
          format: date
        end_date:
          type: string
          description: When the thread will be automatically archived.
          format: date
        start_time:
          type: string
          description: The thread's publication time.
        organization_wide:
          type: boolean
          description: If the thread is accessible to all the organization's members.
            False if the thread is scoped to specific sites or positions or members.
        commentable:
          type: boolean
          description: If the thread is commentable.
        acknowledgeable:
          type: boolean
          description: If the thread must be acknowledged by its concerned members.
        draft:
          type: boolean
          description: If the thread is a draft.
        sticky:
          type: boolean
          description: If the thread is pinned.
        unread:
          type: boolean
          description: If the thread is unread by the current member.
        unconfirmed:
          type: boolean
          description: If the thread hasn't been acknowledged by the current member.
        excerpted:
          type: boolean
          description: If the thread has an excerpt (if the content has more than
            20 words).
        can_acknowledge:
          type: boolean
          description: If the current member has to acknowledge the thread. False
            if the current member is not concerned by the thread or has already acknowledged
            it.
        can_edit:
          type: boolean
          description: If the current member has the necessary rights to edit this
            thread.
        archived_at:
          type: string
          description: The moment the thread has been archived.
          format: date-time
        acknowledged_at:
          type: string
          description: The last time the thread has been acknowledged by the current
            member.
          format: date-time
        updated_at:
          type: string
          description: When the thread was last updated.
          format: date-time
        created_at:
          type: string
          description: When the thread was created.
          format: date-time
        stats:
          "$ref": "#/components/schemas/BillboardThreadStats"
    Break:
      type: object
      description: A detailed description of a break.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        length:
          type: integer
          description: The break length, in minutes.
          format: int32
        offset:
          type: integer
          description: The break's offset from the shift's start, in minutes. E.g.,
            a break starting at 7:30 for a shift starting at 7:00 will have an offset
            of 30.
          format: int32
        paid:
          type: boolean
          description: If the break is paid or not.
        start_at:
          type: string
          description: When the break starts.
          format: date-time
        end_at:
          type: string
          description: When the break ends.
          format: date-time
        created_at:
          type: string
          description: When the break was created.
          format: date-time
        updated_at:
          type: string
          description: When the break was last updated.
          format: date-time
    ClockLog:
      type: object
      description: A detailed description of a clock log.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The unique identifier of the clock log's member.
          format: uuid
        time_entry_id:
          type: string
          description: The unique identifier of the clock log's time entry.
          format: uuid
        shift_id:
          type: string
          description: The unique identifier of the clock log's shift.
          format: uuid
        job_site_id:
          type: string
          description: The unique identifier of the clock log's job site.
          format: uuid
        code:
          type: string
          description: The code used to clock.
        action:
          type: string
          description: The type of clock. Whether clocked_in or clocked_out.
        type:
          type: string
          description: The type of device used to clock.
        params:
          type: object
          description: The clock's parameters.
        response:
          type: object
          description: The clock's errors, if there are any.
        success:
          type: boolean
          description: Whether or not the clock was a success.
        has_questions:
          type: boolean
          description: Whether or not the clock has questions.
        created_at:
          type: string
          description: When the clock log was created.
          format: date-time
        updated_at:
          type: string
          description: When the clock log was last updated.
          format: date-time
    Comment:
      type: object
      description: A detailed description of a comment.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        body:
          type: string
          description: The comment's body.
        commentable_id:
          type: string
          description: The id of the commented resource.
          format: uuid
        commentable_type:
          type: string
          description: The type of the commented resource - Shift, LeaveRequest, BillboardThread,
            etc.
        editable:
          type: boolean
          description: If the comment is editable.
        deletable:
          type: boolean
          description: If the comment is deletable.
        created_at:
          type: string
          description: When the comment was created.
          format: date-time
        updated_at:
          type: string
          description: When the comment was last updated.
          format: date-time
    Document:
      type: object
      description: A detailed description of a document, representing an external
        file uploaded to Agendrix.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        file_content_type:
          type: string
          description: The document's file type.
        file_size:
          type: integer
          description: The document's file size.
          format: int32
        file_name:
          type: string
          description: The document's file name.
        file_url:
          type: string
          description: The URL of the uploaded file.
        created_at:
          type: string
          description: When the document was created.
          format: date-time
    LeaveType:
      type: object
      description: A detailed description of a time off type.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The time off type's name.
        paid:
          type: boolean
          description: If the time off type is paid.
        created_at:
          type: string
          description: When the time off type was created.
          format: date-time
        updated_at:
          type: string
          description: When the time off type was last updated.
          format: date-time
    Resource:
      type: object
      description: A detailed description of a resource.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The resource's name.
        'no':
          type: string
          description: The resource's unique short identifier.
        description:
          type: string
          description: The resource's description.
        address:
          type: string
          description: The resource's address.
        exclusive:
          type: boolean
          description: If the resource is exclusive.
        type_job_site:
          type: boolean
          description: If the resource is a job site.
        type_equipment:
          type: boolean
          description: If the resource is an equipment.
        private_comments_count:
          type: integer
          description: The number of private comments on the resource.
          format: int32
        clock_logs_count:
          type: integer
          description: The number of clock logs on the resource.
          format: int32
        public_comments_count:
          type: integer
          description: The number of public comments on the resource.
          format: int32
        minimum_paid_minutes_per_entry:
          type: integer
          description: The minimum amount of paid minutes per entry on the resource.
          format: int32
        created_at:
          type: string
          description: When the resource was created.
          format: date-time
        updated_at:
          type: string
          description: When the resource was last updated.
          format: date-time
        deleted_at:
          type: string
          description: When the resource was archived.
          format: date-time
    TimeOffPaymentConstraint:
      type: object
      description: A detailed description of a time off constraint.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        paid_weekdays:
          type: array
          description: The days of the week that are considered paid for the time
            off, with 0 as Sunday, up to 6 as Saturday. Only one occurrence of each
            day can be specified.
          items:
            type: integer
            format: int32
        excluded_dates:
          type: array
          description: The dates that are considered unpaid for the time off. This
            attribute takes precedence over paid_weekdays.
          items:
            type: string
            format: date
    LeaveRequest:
      type: object
      description: A detailed description of a time off request.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The requester's id.
          format: uuid
        member_site_position_id:
          type: string
          description: The requester's site position id.
          format: uuid
        created_by:
          type: string
          description: The time off request creator's id.
          format: uuid
        justification:
          type: string
          description: The time off request justification.
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        paid:
          type: boolean
          description: If the time off request is paid.
        all_day:
          type: boolean
          description: If the time off request is all day.
        multiple_days:
          type: boolean
          description: If the time off request is multiple days.
        overlapping_shifts_count:
          type: integer
          description: How many of the member's shifts overlap with the time off request.
          format: int32
        start_at:
          type: string
          description: The time at which the time off request starts.
          format: date-time
        start_date:
          type: string
          description: The date on which the time off request starts.
          format: date
        end_at:
          type: string
          description: The time at which the time off request ends.
          format: date-time
        end_date:
          type: string
          description: The date on which the time off request ends.
          format: date
        approved_by:
          type: string
          description: The time off request's approver id.
        declined_by:
          type: string
          description: The time off request's decliner's id.
        canceled_by:
          type: string
          description: The time off request's canceler's id.
        approved_at:
          type: string
          description: The time at which the time off request was approved.
          format: date-time
        declined_at:
          type: string
          description: The time at which the time off request was declined.
          format: date-time
        canceled_at:
          type: string
          description: The time at which the time off request was canceled.
          format: date-time
        expired_at:
          type: string
          description: The time at which the time off request expires.
          format: date-time
        created_at:
          type: string
          description: When the time off request was created.
          format: date-time
        updated_at:
          type: string
          description: When the time off request was last updated.
          format: date-time
        leave_type:
          "$ref": "#/components/schemas/LeaveType"
        resource:
          "$ref": "#/components/schemas/Resource"
        time_off_payment_constraint:
          "$ref": "#/components/schemas/TimeOffPaymentConstraint"
    Location:
      type: object
      description: A detailed description of a location.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        locatable_id:
          type: string
          description: The locatable object's unique id.
          format: uuid
        locatable_type:
          type: string
          description: The locatable object's type.
        latitude:
          type: number
          description: The location's latitude.
          format: float
        longitude:
          type: number
          description: The location's longitude.
          format: float
        created_at:
          type: string
          description: When the location was created.
          format: date-time
        updated_at:
          type: string
          description: When the location was last updated.
          format: date-time
    MemberShiftConflict:
      type: object
      description: A detailed description of a member's shift conflict.
      properties:
        start_at:
          type: string
          description: The conflicting shift's start date and time.
          format: date-time
        end_at:
          type: string
          description: The conflicting shift's end date and time.
          format: date-time
    MemberSitePosition:
      type: object
      description: A detailed description of a member site position.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        position_id:
          type: string
          description: The position's unique identifier.
          format: uuid
        rate_base:
          type: number
          description: The member's rate for regular hours in this position.
          format: float
        rate_overtime:
          type: number
          description: The member's rate for overtime hours in this position.
          format: float
        rate_overtime_2:
          type: number
          description: The member's rate for overtime 2 hours in this position, if
            enabled.
          format: float
        created_at:
          type: string
          description: When the member site's position was created.
          format: date-time
        updated_at:
          type: string
          description: When the member site's position was last updated.
          format: date-time
    MemberSite:
      type: object
      description: A detailed description of a member site.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        site_id:
          type: string
          description: The site's unique id
          format: uuid
        role:
          type: string
          description: The member's role for this site. Can either be member, supervisor
            or manager. Also called hierarchical level.
        role_definition_id:
          type: string
          description: The role definition's unique identifier.
          format: uuid
        supervisor_position_ids:
          type: array
          description: Which position ids in the current site does the member supervise.
          items:
            type: string
        supervisor_resource_ids:
          type: array
          description: Which resource ids in the current site does the member supervise.
          items:
            type: string
        rate_type:
          type: string
          description: Whether the same rates are applied to all positions (single)
            or every position has their own rates (position).
        created_at:
          type: string
          description: When the member site was created.
          format: date-time
        updated_at:
          type: string
          description: When the member site was last updated.
          format: date-time
        member_site_positions:
          type: array
          description: The member site's positions.
          items:
            "$ref": "#/components/schemas/MemberSitePosition"
    MemberTimeBankTransaction:
      type: object
      description: A detailed description of a member time bank transaction.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The unique identifier of this transaction's member.
          format: uuid
        created_by_id:
          type: string
          description: The unique identifier of this transaction's creator.
          format: uuid
        member_time_bank_id:
          type: string
          description: The unique identifier of this transaction's time bank.
          format: uuid
        time_bank_id:
          type: string
          description: The unique identifier of this transaction's time bank.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of this transaction's position.
          format: uuid
        site_id:
          type: string
          description: The unique identifier of this transaction's site.
          format: uuid
        'no':
          type: integer
          description: The unique sequential number of this transaction in the bank
          format: int32
        revert_no:
          type: integer
          description: The unique sequential number of the transaction this transaction
            reverted
          format: int32
        action:
          type: string
          description: The transaction's action on the time bank.
        notes:
          type: string
          description: The transaction's notes
        date:
          type: string
          description: The transaction's date.
          format: date
        multiplier:
          type: number
          description: The transaction's minutes multiplier.
          format: float
        rate_regular:
          type: number
          description: The transaction's regular rate.
          format: float
        rate_overtime:
          type: number
          description: The transaction's overtime rate.
          format: float
        rate_overtime_2:
          type: number
          description: The transaction's overtime 2 rate, if enabled.
          format: float
        total_minutes:
          type: integer
          description: The transaction's total minutes after applying the multiplier
          format: int32
        minutes:
          type: integer
          description: The transaction's minutes before applying the multiplier
          format: int32
        regular_minutes:
          type: integer
          description: The transaction's regular minutes.
          format: int32
        overtime_1_minutes:
          type: integer
          description: The transaction's overtime 1 minutes.
          format: int32
        overtime_2_minutes:
          type: integer
          description: The transaction's overtime 2 minutes.
          format: int32
        overtime_minutes:
          type: integer
          description: The transaction's total overtime minutes.
          format: int32
        paid_minutes:
          type: integer
          description: The transaction's paid minutes.
          format: int32
        balance:
          type: integer
          description: The current balance in the bank up to this transaction, inclusively
          format: int32
        created_at:
          type: string
          description: When the transaction was created.
          format: date-time
        updated_at:
          type: string
          description: When the transaction was last updated.
          format: date-time
    MemberTimeBank:
      type: object
      description: A detailed description of a member time bank.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The member's unique id.
          format: uuid
        time_bank_id:
          type: string
          description: The time bank's unique id.
          format: uuid
        processed_transactions_count:
          type: integer
          description: The member's time bank amount of processed transactions.
          format: int32
        processed_total_minutes:
          type: integer
          description: The member's time bank processed total minutes.
          format: int32
        pending_total_minutes:
          type: integer
          description: The member's time bank pending total minutes.
          format: int32
        available_total_minutes:
          type: integer
          description: The member's time bank available total minutes.
          format: int32
        created_at:
          type: string
          description: When the member time bank was created.
          format: date-time
        updated_at:
          type: string
          description: When the member time bank was last updated.
          format: date-time
    Profile:
      type: object
      description: A detailed description of a profile.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        first_name:
          type: string
          description: The profile's first name.
        last_name:
          type: string
          description: The profile's last name.
        full_name:
          type: string
          description: The profile's full name.
        nickname:
          type: string
          description: The profile's nickname.
        display_name:
          type: string
          description: The profile's display name.
        email:
          type: string
          description: The profile's email.
          format: email
        birthdate:
          type: string
          description: The profile's birthdate.
          format: date
        civic_address:
          type: string
          description: The profile's civic address.
        document_id:
          type: string
          description: The unique identifier of the profile's picture.
        phone_1_number:
          type: string
          description: The profile's first phone number.
          format: phone
        phone_2_number:
          type: string
          description: The profile's second phone number.
          format: phone
        phone_3_number:
          type: string
          description: The profile's third phone number.
          format: phone
        phone_1_type:
          type: string
          description: The profile's first phone type.
        phone_2_type:
          type: string
          description: The profile's second phone type.
        phone_3_type:
          type: string
          description: The profile's third phone type.
        created_at:
          type: string
          description: When the profile was created.
          format: date-time
        updated_at:
          type: string
          description: When the profile was last updated.
          format: date-time
    Member:
      type: object
      description: A detailed description of a member.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        user_id:
          type: string
          description: The unique identifier of this member's user.
          format: uuid
        profile_id:
          type: string
          description: The unique identifier of this member's profile.
          format: uuid
        identification_number:
          type: string
          description: The member's identification number.
        highest_role:
          type: string
          description: The highest hierarchical level associated to this user. Can
            either be member, supervisor or manager.
        visible_rates:
          type: boolean
          description: Whether this member can see rates and costs, depending on the
            organization's settings.
        color:
          type: string
          description: The color associated to the organization for this member.
        additional_information:
          type: string
          description: Additional information related to the member.
        assigned_site_names:
          type: string
          description: A list of the names of all sites associated the this member.
        invitable_phone_number:
          type: string
          description: A valid mobile phone number that can be used to invite the
            member.
        invited_since:
          type: string
          description: When the member has been invited to Agendrix, in words.
        main_position_id:
          type: string
          description: The unique identifier of the member's primary position.
          format: uuid
        main_site_id:
          type: string
          description: The unique identifier of the member's main site.
          format: uuid
        last_invitation_method:
          type: string
          description: The last method used to invite the member; SMS or email.
        admin:
          type: boolean
          description: If the member is an administrator of the organization.
        hide_before_seniority_date:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets before
            the seniority date.
        messenger_active:
          type: boolean
          description: If the member is currently active on Agendrix's Messenger
        visible:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets.
        is_subordinate:
          type: boolean
          description: If the member is a subordinate to the current user.
        has_unsupervised_sites:
          type: boolean
          description: If the member is assigned to sites that aren't supervised by
            the current user.
        override_overtime:
          type: boolean
          description: If the member has custom overtime thresholds.
        multi_level_overtime:
          type: boolean
          description: If multi-level overtime is enabled for the member.
        overtime_day_threshold:
          type: number
          description: The member's custom day overtime 1 threshold.
          format: float
        overtime_week_threshold:
          type: number
          description: The member's custom week overtime 1 threshold.
          format: float
        overtime_2_day_threshold:
          type: number
          description: The member's custom day overtime 2 threshold, if multi-level
            overtime is enabled.
          format: float
        overtime_2_week_threshold:
          type: number
          description: The member's custom week overtime 2 threshold, if multi-level
            overtime is enabled.
          format: float
        comments_count:
          type: integer
          description: The number of comments created by the member.
          format: int32
        shifts_updated_count:
          type: integer
          description: The number of shifts updated by the member.
          format: int32
        seniority_date:
          type: string
          description: When the member first started working for this organization.
          format: date
        deletion_date:
          type: string
          description: When the member will be archived.
          format: date
        invited_at:
          type: string
          description: When the member has been invited.
          format: date-time
        connected_at:
          type: string
          description: When the member accepted the invitation.
          format: date-time
        code:
          type: string
          description: The member's invitation code.
        time_clock_code:
          type: string
          description: The member's time clock code.
        time_clock_override_defaults:
          type: boolean
          description: If the member overrides the organization's time clock settings.
        time_clock_must_be_scheduled:
          type: boolean
          description: If the member must be scheduled in order to clock.
        time_clock_transfer_next_call:
          type: boolean
          description: If the next phone clock must be transferred.
        time_clock_transfer_next_call_number:
          type: string
          description: The number to transfer the next phone clock to.
        time_clock_window:
          type: integer
          description: The window used for various time clock settings, in minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description: If the member's clock in times are rounded to the shift's planned
            start time.
        time_clock_limit_to_shift_end_window:
          type: integer
          description: If the member's clock out time is limited to the shift's planned
            end time.
          format: int32
        payroll_seniority:
          type: integer
          description: The member's total minutes worked.
          format: int32
        payroll_seniority_hours:
          type: number
          description: The member's total worked hours.
          format: float
        payroll_auto_update:
          type: boolean
          description: If the member doesn't have to clock in.
        updated_at:
          type: string
          description: When the member was last updated.
          format: date-time
        created_at:
          type: string
          description: When the member was created.
          format: date-time
        deleted_at:
          type: string
          description: When the member was archived.
          format: date-time
        hr_data:
          type: object
          description: The member's hr data.
        default_leave_value:
          type: integer
          description: The member's default time off value, in minutes. Overrides
            the organization's default time off value. Will only work if the member's
            hours are computed in days.
          format: int32
        profile:
          "$ref": "#/components/schemas/Profile"
    OpenShiftAudienceConfig:
      type: object
      description: A detailed description of an open shift audience config.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        send_by_seniority:
          type: boolean
          description: If the open shift is sent by seniority.
        exclude_members_in_overtime:
          type: boolean
          description: If members in overtime situation are excluded from the open
            shift audience.
        exclude_members_in_conflict:
          type: boolean
          description: If members with shift conflicts are excluded from the open
            shift audience.
        excluded_member_ids:
          type: array
          description: The identifiers of the members manually excluded from the open
            shift audience.
          items:
            type: string
            format: uuid
    OpenShiftAudienceMemberRequestState:
      type: object
      description: A detailed description of an audience member's state.
      properties:
        state:
          type: string
          description: The member's state.
        timestamp:
          type: string
          description: The timestamp of the state.
          format: date-time
    OpenShiftAudienceMember:
      type: object
      description: A detailed description of an open shift audience member.
      properties:
        conflicts:
          type: array
          description: The member's shift conflicts.
          items:
            "$ref": "#/components/schemas/MemberShiftConflict"
        request_state:
          "$ref": "#/components/schemas/OpenShiftAudienceMemberRequestState"
    OpenShiftRequestMember:
      type: object
      description: A detailed description of an open shift's volunteer.
      properties:
        member_id:
          type: string
          description: The unique identifier of the employee who volunteered.
          format: uuid
        shift_id:
          type: string
          description: The unique identifier of the shift assigned to the employee.
          format: uuid
        approved_at:
          type: string
          description: The time at which the shift was assigned to the volunteer.
          format: date-time
        declined_at:
          type: string
          description: The time at which the employee's offer to volunteer was declined.
          format: date-time
        created_at:
          type: string
          description: The time at which the employee offered to volunteer.
          format: date-time
    OpenShiftRequest:
      type: object
      description: A detailed description of an open shift request.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        shift_id:
          type: string
          description: The open shift's id.
          format: uuid
        members_count:
          type: integer
          description: The number of employees who applied for this open shift.
          format: int32
        approved_by:
          type: string
          description: The open shift request's approver id.
        canceled_by:
          type: string
          description: The open shift request's canceler's id.
        approved_at:
          type: string
          description: The time at which the open shift request was approved.
          format: date-time
        canceled_at:
          type: string
          description: The time at which the open shift request was canceled.
          format: date-time
        expired_at:
          type: string
          description: The time at which the open shift request expires.
          format: date-time
        created_at:
          type: string
          description: When the open shift request was created.
          format: date-time
        updated_at:
          type: string
          description: When the open shift request was last updated.
          format: date-time
        open_shift_request_members:
          type: array
          description: The list of volunteers for this open shift.
          items:
            "$ref": "#/components/schemas/OpenShiftRequestMember"
    Organization:
      type: object
      description: A detailed description of an organization.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The organization's name.
        week_start:
          type: integer
          description: The index of the day for which the organization working week
            starts. Starting with sunday at 0, and ending with saturday at 6.
          format: int32
        day_start:
          type: string
          description: The hour at which the organization working day starts.
        day_end:
          type: string
          description: The hour at which the organization working day ends.
        time_zone_name:
          type: string
          description: The organization time zone's name.
        availabilities_need_approval:
          type: boolean
          description: If the availability needs approval or not.
        created_at:
          type: string
          description: When the organization was created.
          format: date-time
        updated_at:
          type: string
          description: When the organization was last updated.
          format: date-time
    Payroll:
      type: object
      description: A detailed description of a payroll.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        start_at:
          type: string
          description: The date time at which the payroll starts.
          format: date-time
        end_at:
          type: string
          description: The date time at which the payroll ends.
          format: date-time
        is_bankable:
          type: boolean
          description: If the payroll is bankable.
        status:
          type: string
          description: The payroll's current status.
        created_at:
          type: string
          description: When the payroll was created.
          format: date-time
        updated_at:
          type: string
          description: When the payroll was last updated.
          format: date-time
    Position:
      type: object
      description: A detailed description of a position.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The position's name.
        normalized_name:
          type: string
          description: The position's normalized name.
        rank:
          type: integer
          description: The position's rank.
          format: int32
        color:
          type: string
          description: The position's color.
        color_formatted:
          type: string
          description: The position's formatted color.
        parent_id:
          type: string
          description: The unique identifier of the position's parent. If this is
            present, it means this is a sub-position.
        created_at:
          type: string
          description: When the position was created.
          format: date-time
        updated_at:
          type: string
          description: When the position was last updated.
          format: date-time
        deleted_at:
          type: string
          description: When the position was archived.
          format: date-time
    PremiumEntry:
      type: object
      description: A detailed description of a premium entry.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        premium_id:
          type: string
          description: The premium's unique identifier.
          format: uuid
        entry_id:
          type: string
          description: The premium's entry unique identifier.
          format: uuid
        entry_type:
          type: string
          description: The premium's entry type.
        entry_minutes:
          type: integer
          description: The number of minutes the premium is applied to.
          format: int32
        minutes:
          type: integer
          description: The number of extra minutes added by the premium.
          format: int32
        manual:
          type: boolean
          description: If the premium is manual.
        created_by_id:
          type: string
          description: The premium's entry creator id.
          format: uuid
    Premium:
      type: object
      description: A detailed description of a premium.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The premium's name.
        weekdays:
          type: array
          description: Which weekdays the premium is applied to.
          items:
            type: integer
            format: int32
        start_at:
          type: string
          description: When the premium starts.
        end_at:
          type: string
          description: When the premium ends.
        multiplier:
          type: number
          description: What the premium hours are multiplied by.
          format: float
        default_value:
          type: integer
          description: The premium's default value.
          format: int32
        compute_manually:
          type: boolean
          description: If the premium has to be applied manually.
        compute_entire_shifts:
          type: boolean
          description: If the premium is applied to the entirety of work shifts that
            overlap the premium period.
        only_time_offs:
          type: boolean
          description: If the premium is only applied to time off.
        all_day:
          type: boolean
          description: If the premium is applied to every hour of the day.
        all_week:
          type: boolean
          description: If the premium is applied to every day of the week.
        all_leave_types:
          type: boolean
          description: If the premium is applied to all time off types.
        all_sites:
          type: boolean
          description: If the premium is applied to all sites.
        all_members:
          type: boolean
          description: If the premium is applied to all employees.
        all_positions:
          type: boolean
          description: If the premium is applied to all positions.
        created_at:
          type: string
          description: When the premium was created.
          format: date-time
        updated_at:
          type: string
          description: When the premium was last updated.
          format: date-time
    Publication:
      type: object
      description: A detailed description of a publication.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The publication's member id.
          format: uuid
        site_id:
          type: string
          description: The publication's site id.
          format: uuid
        from:
          type: string
          description: Starting date at which shifts are published.
          format: date
        to:
          type: string
          description: Ending date at which shifts are published.
          format: date
        created_at:
          type: string
          description: When the publication was created.
          format: date-time
    RoleDefinition:
      type: object
      description: A detailed description of a role definition.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The role definition's name.
        default:
          type: boolean
          description: If this is the default definition for this particular role.
        role:
          type: string
          description: The defined role.
        disabled_features:
          type: array
          description: Features disabled for this role.
          items:
            type: string
        created_at:
          type: string
          description: When the role definition was created.
          format: date-time
        updated_at:
          type: string
          description: When the role definition was last updated.
          format: date-time
        deleted_at:
          type: string
          description: When the role definition was archived.
          format: date-time
    SchedulerProjection:
      type: object
      description: A detailed description of a scheduler projection.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        site_id:
          type: string
          description: The unique identifier of the scheduler projection's site.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of the scheduler projection's position.
          format: uuid
        date:
          type: string
          description: The scheduler projection's date.
          format: date
        hours:
          type: number
          description: The number of expected scheduled hours.
          format: float
        revenues:
          type: number
          description: The amount of expected revenues.
          format: float
        productivity:
          type: number
          description: The number of expected productivity units.
          format: float
        created_at:
          type: string
          description: When the scheduler projection was created.
          format: date-time
        updated_at:
          type: string
          description: When the scheduler projection was last updated.
          format: date-time
    User:
      type: object
      description: A detailed description of a user.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        email:
          type: string
          description: The user's email.
          format: email
        unconfirmed_email:
          type: string
          description: The user's unconfirmed email.
          format: email
        email_notifications:
          type: boolean
          description: If the user receives email notifications.
        push_notifications:
          type: boolean
          description: If the user receives notifications in the mobile app.
        sms_notifications:
          type: boolean
          description: If the user receives SMS notifications.
        sms_notifications_phone_status:
          type: string
          description: If the phone number's confirmation status, pending or confirmed.
        sms_notifications_phone_number:
          type: string
          description: The phone number at which the user receives the sms notifications
        sms_available:
          type: boolean
          description: If SMS notifications are available for this member.
        sms_blacklisted_numbers:
          type: array
          description: A list of phone numbers that have been blacklisted and can't
            receive notifications.
          items:
            type: string
        disabled_notifications:
          type: array
          description: A list of the notifications this user has disabled.
          items:
            type: string
        shift_reminder_time:
          type: integer
          description: When the user is reminded of an upcoming shift, in minutes.
          format: int32
        last_sign_in_at:
          type: string
          description: When the user has last signed in.
          format: date-time
        sign_in_count:
          type: integer
          description: The number of times the user has signed in.
          format: int32
        unconfirmed:
          type: boolean
          description: If the user's email is unconfirmed.
        confirmed_at:
          type: string
          description: When the user's email was confirmed.
          format: date-time
        locale:
          type: string
          description: The user's language.
        time_format:
          type: integer
          description: The user's time format, 12 or 24.
          format: int32
        time_zone_name:
          type: string
          description: The user's time zone name.
        time_zone_identifier:
          type: string
          description: The user's time zone identifier.
        last_seen_at:
          type: string
          description: When the user was last seen doing an action.
          format: date-time
        created_at:
          type: string
          description: When the user was created.
          format: date-time
        updated_at:
          type: string
          description: When the user was last updated.
          format: date-time
        profile:
          "$ref": "#/components/schemas/Profile"
    Session:
      type: object
      description: A detailed description of a session.
      properties:
        organization:
          "$ref": "#/components/schemas/Organization"
        user:
          "$ref": "#/components/schemas/User"
        member:
          "$ref": "#/components/schemas/Member"
    Shift:
      type: object
      description: A detailed description of a shift.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        start_at:
          type: string
          description: The shift's start date time.
          format: date-time
        start_date:
          type: string
          description: The shift's start date.
          format: date
        end_at:
          type: string
          description: The shift's end date time.
          format: date-time
        end_date:
          type: string
          description: The shift's end date.
          format: date
        date:
          type: string
          description: The shift's date.
          format: date
        paid_break:
          type: integer
          description: The number of minutes of paid break in this shift.
          format: int32
        unpaid_break:
          type: string
          description: The number of minutes of unpaid break in this shift.
        status:
          type: string
          description: The shift's status, either draft or published.
        site_id:
          type: string
          description: The unique identifier of the shift's site.
          format: uuid
        member_id:
          type: string
          description: The unique identifier of the shift's member.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of the shift's position.
          format: uuid
        sub_position_id:
          type: string
          description: The unique identifier of the shift's sub-position.
          format: uuid
        member_site_position_id:
          type: string
          description: The unique identifier of the shift's member_site_position.
          format: uuid
        publication_id:
          type: string
          description: The unique identifier of the shift's publication.
          format: uuid
        leave_request_id:
          type: string
          description: The unique identifier of the shift's time off request.
          format: uuid
        leave_type_id:
          type: string
          description: The unique identifier of the shift's time off type.
          format: uuid
        shift_series_id:
          type: string
          description: The unique identifier of the shift's recurrence.
          format: uuid
        updated_by:
          type: string
          description: The unique identifier of the last member who updated this shift.
        open:
          type: boolean
          description: If the shift is open.
        recurring:
          type: boolean
          description: If the shift is recurring.
        time_off:
          type: boolean
          description: If the shift is a time off.
        paid:
          type: boolean
          description: If the shift is a paid time off or not.
        single_clock:
          type: boolean
          description: If the shift only requires a clock in.
        auto_clock:
          type: boolean
          description: If the shift is added automatically to the member's timesheet.
        on_call:
          type: boolean
          description: If the shift is on call.
        training:
          type: boolean
          description: If the shift is a training.
        all_day:
          type: boolean
          description: If the shift is an all day time off.
        same_date:
          type: boolean
          description: If the start and end of this shift are on the same date.
        hide_end_at:
          type: boolean
          description: If the shift's end is hidden to members.
        confirmed:
          type: boolean
          description: If the shift has been confirmed by its member.
        to_delete:
          type: boolean
          description: If the shift needs to be deleted or not.
        color:
          type: string
          description: The shift's position or sub-position color.
        reminder:
          type: string
          description: The shift's additional information.
        viewed_at:
          type: string
          description: When the shift was seen by its member.
          format: date-time
        confirmed_at:
          type: string
          description: When the shift was confirmed by its member.
          format: date-time
        open_quantity:
          type: integer
          description: How many shifts are available.
          format: int32
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        comments_count:
          type: integer
          description: The number of comments on the shift.
          format: int32
        resources_count:
          type: integer
          description: The number of resources on the shift.
          format: int32
        regular_minutes:
          type: integer
          description: The amount of regular time in the shift, in minutes.
          format: int32
        overtime_1_minutes:
          type: integer
          description: The amount of overtime 1 in the shift, in minutes.
          format: int32
        overtime_2_minutes:
          type: integer
          description: The amount of overtime 2 in the shift, in minutes.
          format: int32
        overtime_minutes:
          type: integer
          description: The total amount of overtime in the shift, in minutes.
          format: int32
        premium_minutes:
          type: integer
          description: The amount of premium time added to the shift, in minutes.
          format: int32
        premium_entries_count:
          type: integer
          description: The number of premiums applied to the shift.
          format: int32
        duration:
          type: integer
          description: The shift's total duration.
          format: int32
        original_shift_id:
          type: string
          description: The shift's original shift id.
          format: uuid
        new_version_id:
          type: string
          description: The shift's new version id.
          format: uuid
        rate_base:
          type: number
          description: The rate paid to the member for the regular time.
          format: float
        rate_overtime:
          type: number
          description: The rate paid to the member for the overtime 1.
          format: float
        rate_overtime_2:
          type: number
          description: The rate paid to the member for the overtime 2.
          format: float
        resource_ids:
          type: array
          description: The shift's resource ids.
          items:
            type: string
            format: uuid
        drive_file_ids:
          type: array
          description: The shift's team library file ids.
          items:
            type: string
            format: uuid
        created_at:
          type: string
          description: When the shift was created.
          format: date-time
        updated_at:
          type: string
          description: When the shift was last updated.
          format: date-time
        deleted_at:
          type: string
          description: When the shift was archived.
          format: date-time
        audience_config:
          "$ref": "#/components/schemas/OpenShiftAudienceConfig"
    Site:
      type: object
      description: A detailed description of a site.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The site's name.
        address:
          type: string
          description: The site's address.
        instructions:
          type: string
          description: The site's additional information.
        created_at:
          type: string
          description: When the site was created.
          format: date-time
        updated_at:
          type: string
          description: When the site was last updated.
          format: date-time
        deleted_at:
          type: string
          description: When the site was archived.
          format: date-time
        location:
          "$ref": "#/components/schemas/Location"
    Task:
      type: object
      description: A detailed description of a task.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The task's name.
        instructions:
          type: string
          description: The task's instructions.
        offset:
          type: integer
          description: The task's offset from the shift's start time, in minutes.
            E.g., a task starting at 7:30 for a shift starting at 7:00 will have an
            offset of 30.
          format: int32
        start_at:
          type: string
          description: When the task starts.
          format: date-time
        completed:
          type: boolean
          description: If the task has been completed.
        completed_at:
          type: string
          description: When the task was completed.
          format: date-time
        completed_by_id:
          type: string
          description: Unique identifier of the member who completed the task.
          format: uuid
    TimeBank:
      type: object
      description: A detailed description of a time bank.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The time bank's name.
        multiplier:
          type: number
          description: The time bank's multiplier.
          format: float
        leave_type_id:
          type: string
          description: The time off bank's time off type id.
          format: uuid
        created_at:
          type: string
          description: When the time bank was created.
          format: date-time
        updated_at:
          type: string
          description: When the time bank was last updated.
          format: date-time
    TimeEntry:
      type: object
      description: A detailed description of a time entry.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        unpaid_break:
          type: integer
          description: Unpaid break minutes for the time entry.
          format: int32
        paid_break:
          type: integer
          description: Paid break minutes for the time entry.
          format: int32
        length:
          type: integer
          description: The time entry's length.
          format: int32
        overwritten_length_minutes:
          type: integer
          description: The time entry's custom length.
          format: int32
        regular_minutes:
          type: integer
          description: The amount of regular time in the time entry, in minutes.
          format: int32
        overtime_1_minutes:
          type: integer
          description: The amount of overtime 1 in the time entry, in minutes.
          format: int32
        overtime_2_minutes:
          type: integer
          description: The amount of overtime 2 in the time entry, in minutes.
          format: int32
        overtime_minutes:
          type: integer
          description: The total amount of overtime in the time entry, in minutes.
          format: int32
        override_overtime:
          type: boolean
          description: If custom overtime values have been specified for the time
            entry.
        premium_minutes:
          type: integer
          description: The time entry's extra minutes granted by premiums.
          format: int32
        premium_entries_count:
          type: integer
          description: The number of premium entries for the time entry.
          format: int32
        position_id:
          type: string
          description: The time entry's position id.
          format: uuid
        site_id:
          type: string
          description: The time entry's site id.
          format: uuid
        member_site_position_id:
          type: string
          description: The time entry's member site position id.
          format: uuid
        member_id:
          type: string
          description: The time entry's member id.
          format: uuid
        shift_id:
          type: string
          description: The time entry's shift id.
          format: uuid
        time_off:
          type: boolean
          description: If the time entry is a time off.
        time_off_length:
          type: integer
          description: The length of the time off.
          format: int32
        time_off_leave_type_id:
          type: string
          description: The unique identifier of the time off type.
          format: uuid
        time_off_paid:
          type: boolean
          description: If the time off is paid.
        date:
          type: string
          description: The time entry's date.
          format: date
        start_at:
          type: string
          description: The date time at which the time entry starts.
          format: date-time
        end_at:
          type: string
          description: The date time at which the time entry ends.
          format: date-time
        start_at_clock_notes:
          type: string
          description: Note left by the employee while clocking in.
        end_at_clock_notes:
          type: string
          description: Note left by the employee while clocking out.
        break_started_at:
          type: string
          description: The date time at which the time entry break started.
          format: date-time
        break_type:
          type: string
          description: The time entry break's type.
        approved_suggested_end_at:
          type: boolean
          description: If the clock out time suggested by the employee has been approved.
        suggested_end_at:
          type: string
          description: The clock out time suggested by the employee.
        suggested_end_at_justification:
          type: string
          description: The employee's explanation for the suggested clock out time.
        suggested_end_at_confirmed_at:
          type: string
          description: When the suggested clock out time has been approved.
          format: date-time
        approved:
          type: boolean
          description: If the time entry has been approved.
        has_notes:
          type: boolean
          description: If the time entry has notes.
        has_caller_phone_number:
          type: boolean
          description: If the time entry has been clocked in or out using a phone.
        start_at_clock_caller_phone_number:
          type: string
          description: The phone number used for clocking in.
        end_at_clock_caller_phone_number:
          type: string
          description: The phone number used for clocking out.
        rate_regular:
          type: number
          description: The regular rate for the time entry.
          format: float
        rate_overtime:
          type: number
          description: The overtime 1 rate for the time entry.
          format: float
        rate_overtime_2:
          type: number
          description: The overtime 2 rate for the time entry.
          format: float
        notes:
          type: string
          description: The time entry notes.
        start_at_clock_job_site_id:
          type: string
          description: The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description: The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        time_off_resource_id:
          type: string
          description: The unique identifier of the time off's resource.
          format: uuid
        created_at:
          type: string
          description: When the time entry was created.
          format: date-time
        updated_at:
          type: string
          description: When the time entry was last updated.
          format: date-time
        deleted_at:
          type: string
          description: When the time entry was archived.
          format: date-time
        premium_entries:
          type: array
          description: The premium entries of the time entry.
          items:
            "$ref": "#/components/schemas/PremiumEntry"
    TransferRequest:
      type: object
      description: A detailed description of a transfer request.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The transfer request's member id.
          format: uuid
        created_by:
          type: string
          description: The transfer request's creator id.
          format: uuid
        justification:
          type: string
          description: The transfer request justification.
        sub_type:
          type: string
          description: The transfer request sub type.
        expired_at:
          type: string
          description: The transfer request expiration date time.
          format: date-time
        created_at:
          type: string
          description: When the transfer request was created.
          format: date-time
        updated_at:
          type: string
          description: When the transfer request was last updated.
          format: date-time
    BillboardTagCreate:
      required:
      - name
      type: object
      description: A detailed description of a billboard tag's creation input parameters.
      properties:
        name:
          type: string
          description: The tag's name.
    BillboardTagUpdate:
      required:
      - name
      type: object
      description: A detailed description of a billboard tag's update input parameters.
      properties:
        name:
          type: string
          description: The tag's name.
    BillboardThreadTagCreateAttributes:
      required:
      - billboard_tag_id
      type: object
      description: A detailed description of a billboard thread tag's creation input
        parameters.
      properties:
        billboard_tag_id:
          type: string
          description: The tag's unique identifier.
          format: uuid
    BillboardThreadTagUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a billboard thread tag's update input
        parameters.
      properties:
        billboard_tag_id:
          type: string
          description: The tag's unique identifier.
          format: uuid
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    BillboardThreadCreate:
      required:
      - title
      - content
      - start_date
      type: object
      description: A detailed description of a billboard thread's creation input parameters.
      properties:
        title:
          type: string
          description: The thread's title.
        content:
          type: string
          description: The thread's full content.
        start_date:
          type: string
          description: The thread's publication date.
          format: date
        end_date:
          type: string
          description: When the thread will be automatically archived.
          format: date
        start_time:
          type: string
          description: The thread's publication time.
        draft:
          type: boolean
          description: If the thread is a draft.
        notify:
          type: boolean
          description: If the action notifies the organization's members.
        sticky:
          type: boolean
          description: If the thread is pinned.
        commentable:
          type: boolean
          description: If the thread is commentable.
        acknowledgeable:
          type: boolean
          description: If the thread must be acknowledged by its concerned members.
        site_ids:
          type: array
          description: The site ids for which the thread is visible.
          items:
            type: string
        position_ids:
          type: array
          description: The position ids for which the thread is visible.
          items:
            type: string
        document_ids:
          type: array
          description: The documents attached to the thread.
          items:
            type: string
        billboard_thread_tags_attributes:
          type: array
          description: An array of billboard thread tags
          items:
            "$ref": "#/components/schemas/BillboardThreadTagCreateAttributes"
    BillboardThreadUpdate:
      type: object
      description: A detailed description of a billboard thread's update input parameters.
      properties:
        title:
          type: string
          description: The thread's title.
        content:
          type: string
          description: The thread's full content.
        start_date:
          type: string
          description: The thread's publication date.
          format: date
        end_date:
          type: string
          description: When the thread will be automatically archived.
          format: date
        start_time:
          type: string
          description: The thread's publication time.
        draft:
          type: boolean
          description: If the thread is a draft.
        notify:
          type: boolean
          description: If the action notifies the organization's members.
        sticky:
          type: boolean
          description: If the thread is pinned.
        commentable:
          type: boolean
          description: If the thread is commentable.
        acknowledgeable:
          type: boolean
          description: If the thread must be acknowledged by its concerned members.
        site_ids:
          type: array
          description: The site ids for which the thread is visible.
          items:
            type: string
        position_ids:
          type: array
          description: The position ids for which the thread is visible.
          items:
            type: string
        document_ids:
          type: array
          description: The documents attached to the thread.
          items:
            type: string
        billboard_thread_tags_attributes:
          type: array
          description: An array of billboard thread tags
          items:
            oneOf:
            - "$ref": "#/components/schemas/BillboardThreadTagUpdateAttributes"
            - "$ref": "#/components/schemas/BillboardThreadTagCreateAttributes"
    BreakCreateAttributes:
      required:
      - length
      type: object
      description: A detailed description of a break's creation input parameters.
      properties:
        length:
          type: integer
          description: The break length, in minutes.
          format: int32
        offset:
          type: integer
          description: The break's offset from the shift's start, in minutes. E.g.,
            a break starting at 7:30 for a shift starting at 7:00 will have an offset
            of 30.
          format: int32
        paid:
          type: boolean
          description: If the break is paid or not.
    BreakUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a break's update input parameters.
      properties:
        length:
          type: integer
          description: The break length, in minutes.
          format: int32
        offset:
          type: integer
          description: The break's offset from the shift's start, in minutes. E.g.,
            a break starting at 7:30 for a shift starting at 7:00 will have an offset
            of 30.
          format: int32
        paid:
          type: boolean
          description: If the break is paid or not.
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    CommentCreate:
      required:
      - body
      - commentable_type
      - commentable_id
      type: object
      description: A detailed description of a comment's creation input parameters.
      properties:
        body:
          type: string
          description: The comment's body.
        commentable_type:
          type: string
          description: The type of the commented resource - Shift, LeaveRequest, BillboardThread,
            etc.
        commentable_id:
          type: string
          description: The id of the commented resource.
          format: uuid
        type:
          type: string
          description: If the comment is private or not. Must be 'private' or 'public'.
    CommentUpdate:
      type: object
      description: A detailed description of a comment's update input parameters.
      properties:
        body:
          type: string
          description: The comment's body.
        commentable_type:
          type: string
          description: The type of the commented resource - Shift, LeaveRequest, BillboardThread,
            etc.
        commentable_id:
          type: string
          description: The id of the commented resource.
          format: uuid
        type:
          type: string
          description: If the comment is private or not. Must be 'private' or 'public'.
    DriveItem:
      type: object
      description: A detailed description of a file or folder.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The item member's id.
          format: uuid
        creator_id:
          type: string
          description: The item creator's id.
          format: uuid
        folder_id:
          type: string
          description: The parent folder's id.
          format: uuid
        type:
          type: string
          description: The item's type. Can either be folder or file.
        name:
          type: string
          description: The name of the item.
        role:
          type: string
          description: The role required to see the item. Can either be member, supervisor,
            manager, or admin.
        member_viewable:
          type: boolean
          description: Set to true if the member can see this file.
        deleted_at:
          type: string
          description: When the item was deleted.
          format: date-time
        created_at:
          type: string
          description: When the item was created.
          format: date-time
        updated_at:
          type: string
          description: When the item was last updated.
          format: date-time
        body:
          type: string
          description: If the item is an internal text file, contains the body.
        note:
          type: string
          description: The file's note.
        comments_count:
          type: integer
          description: The number of comments on the file.
          format: int32
        new_version_id:
          type: string
          description: The new version's id.
          format: uuid
        document:
          "$ref": "#/components/schemas/Document"
        body_documents:
          type: array
          description: The embedded documents in the text file.
          items:
            "$ref": "#/components/schemas/Document"
    DriveSignature:
      type: object
      description: A detailed description of a signature.
      properties:
        id:
          type: string
          description: Unique identifier of the signature.
          format: uuid
        signature_request_id:
          type: string
          description: The identifier of the signature request associated with the
            signature.
          format: uuid
        member_id:
          type: string
          description: The identifier of the member associated with the signature.
          format: uuid
        legal_name:
          type: string
          description: The legal name of the signing member.
        ip_address:
          type: string
          description: The IP address of the device used to sign the document.
        user_agent:
          type: string
          description: The browser information used to sign the document.
        pss_signature:
          type: string
          description: Represents a cryptographic signature generated using the Probabilistic
            Signature Scheme (PSS).
        signed_at:
          type: string
          description: The date and time when the signature was applied.
          format: date-time
        consent_given_at:
          type: string
          description: The date and time when consent to the signature was given.
          format: date-time
        deleted_at:
          type: string
          description: Date and time of the signature cancelation.
          format: date-time
        created_at:
          type: string
          description: Date and time of the signature creation.
          format: date-time
        updated_at:
          type: string
          description: Date and time of the signature's last modification.
          format: date-time
    DriveSignatureRequest:
      type: object
      description: A detailed description of a signature request.
      properties:
        id:
          type: string
          description: Unique identifier of the signature request.
          format: uuid
        creator_id:
          type: string
          description: The identifier of the signature request's creator.
          format: uuid
        drive_file_id:
          type: string
          description: The identifier of the file being signed.
          format: uuid
        original_file_id:
          type: string
          description: The identifier of the file used to create the request.
          format: uuid
        original_document_hash:
          type: string
          description: Hash of the original document.
        completed_at:
          type: string
          description: Date and time of the signature request's completion.
          format: date-time
        deleted_at:
          type: string
          description: Date and time of the signature request's cancelation.
          format: date-time
        created_at:
          type: string
          description: Date and time of the signature request's creation.
          format: date-time
        updated_at:
          type: string
          description: Date and time of the signature request's last modification.
          format: date-time
        drive_file:
          "$ref": "#/components/schemas/DriveItem"
        completion_certificate:
          "$ref": "#/components/schemas/Document"
        signatures:
          type: array
          description: The signatures associated with the signature request.
          items:
            "$ref": "#/components/schemas/DriveSignature"
    DriveFileShiftCreateAttributes:
      required:
      - drive_file_id
      type: object
      description: A detailed description of a shift file's creation input parameters.
      properties:
        drive_file_id:
          type: string
          description: The unique identifier of the file in the team library.
          format: uuid
    DriveFileShiftUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a shift file's update input parameters.
      properties:
        drive_file_id:
          type: string
          description: The unique identifier of the file in the team library.
          format: uuid
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    HRField:
      type: object
      description: A detailed description of a human resource field.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The name of the human resource field.
        help_info:
          type: string
          description: The instruction of the human resource field.
        enabled:
          type: boolean
          description: If the human resource field is enabled.
        section:
          type: string
          description: The section of a human resource field.
        rank:
          type: integer
          description: The rank of the human resource field.
          format: int32
        show_in_onboarding:
          type: boolean
          description: If the human resource field is shown during the onboarding.
        required_in_onboarding:
          type: boolean
          description: If the human resource field is required during the onboarding.
        custom:
          type: boolean
          description: If the human resource field is created by the organization.
        field_type:
          type: string
          description: The type of the human resource field.
        metadata:
          type: object
          description: The metadata depending on the field_type of the human resource
            field.
        private_field:
          type: boolean
          description: If the human resource field is private.
        sortable:
          type: boolean
          description: If the human resource field is sortable.
        filterable:
          type: boolean
          description: If the human resource field is filterable.
        deleted_at:
          type: string
          description: When the human resource field was last deleted.
          format: date-time
        created_at:
          type: string
          description: When the human resource field was last created.
          format: date-time
        updated_at:
          type: string
          description: When the human resource field was last updated.
          format: date-time
    LeaveRequestCreate:
      required:
      - member_id
      - justification
      - start_at
      - end_at
      type: object
      description: A detailed description of a time off request's creation input parameters.
      properties:
        start_at:
          type: string
          description: The time at which the time off request starts.
          format: date-time
        end_at:
          type: string
          description: The time at which the time off request ends.
          format: date-time
        justification:
          type: string
          description: The time off request justification.
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        paid:
          type: boolean
          description: If the time off request is paid.
        leave_type_id:
          type: string
          description: The time off request's time off type id.
          format: uuid
        site_id:
          type: string
          description: The time off request's site id.
          format: uuid
        position_id:
          type: string
          description: The time off request's position id.
          format: uuid
        member_site_position_id:
          type: string
          description: The requester's site position id.
          format: uuid
        resource_id:
          type: string
          description: The time off request's resource id.
          format: uuid
        member_id:
          type: string
          description: The requester's id.
          format: uuid
    TimeOffPaymentConstraintUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a time off payment's update input parameters.
      properties:
        paid_weekdays:
          type: array
          description: The days of the week that are considered paid for the time
            off, with 0 as Sunday, up to 6 as Saturday. Only one occurrence of each
            day can be specified. If this attribute is provided but not excluded_dates,
            the excluded_dates will be overwritten.
          items:
            type: integer
            format: int32
        excluded_dates:
          type: array
          description: The dates that are considered unpaid for the time off. This
            attribute takes precedence over paid_weekdays.
          items:
            type: string
            format: date
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
    LeaveRequestUpdate:
      type: object
      description: A detailed description of a time off request's update input parameters.
      properties:
        start_at:
          type: string
          description: The time at which the time off request starts.
          format: date-time
        end_at:
          type: string
          description: The time at which the time off request ends.
          format: date-time
        justification:
          type: string
          description: The time off request justification.
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        paid:
          type: boolean
          description: If the time off request is paid.
        leave_type_id:
          type: string
          description: The time off request's time off type id.
          format: uuid
        site_id:
          type: string
          description: The time off request's site id.
          format: uuid
        position_id:
          type: string
          description: The time off request's position id.
          format: uuid
        member_site_position_id:
          type: string
          description: The requester's site position id.
          format: uuid
        resource_id:
          type: string
          description: The time off request's resource id.
          format: uuid
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintUpdateAttributes"
    LeaveTypeCreate:
      required:
      - name
      - paid
      type: object
      description: A detailed description of a time off type's creation input parameters.
      properties:
        keep_track_hours:
          type: boolean
          description: If time clock is enabled for your organization, whether time
            off with this time off type should impact the associated time bank.
        name:
          type: string
          description: The time off type's name.
        paid:
          type: boolean
          description: If the time off type is paid.
    LeaveTypeUpdate:
      type: object
      description: A detailed description of a time off type's update input parameters.
      properties:
        keep_track_hours:
          type: boolean
          description: If time clock is enabled for your organization, whether time
            off with this time off type should impact the associated time bank.
        name:
          type: string
          description: The time off type's name.
        paid:
          type: boolean
          description: If the time off type is paid.
    LeaveValueSettingCreateAttributes:
      required:
      - interval_start
      - interval_end
      - worked_days_type
      type: object
      description: A detailed description of a time off value settings' creation input
        parameters.
      properties:
        interval_start:
          type: string
          description: Start date of the interval used to calculate the time off's
            value.
          format: date
        interval_end:
          type: string
          description: End date of the interval used to calculate the time off's value.
          format: date
        worked_days_type:
          type: string
          description: Whether the hours worked during the interval are divided by
            the number of days worked (variable) or by a specific amount (fixed).
        worked_days_count:
          type: integer
          description: The number by which the total is divided if the type is fixed.
          format: int32
    LeaveValueSettingUpdateAttributes:
      required:
      - interval_start
      - interval_end
      - worked_days_type
      type: object
      description: A detailed description of a time off value settings' update input
        parameters.
      properties:
        interval_start:
          type: string
          description: Start date of the interval used to calculate the time off's
            value.
          format: date
        interval_end:
          type: string
          description: End date of the interval used to calculate the time off's value.
          format: date
        worked_days_type:
          type: string
          description: Whether the hours worked during the interval are divided by
            the number of days worked (variable) or by a specific amount (fixed).
        worked_days_count:
          type: integer
          description: The number by which the total is divided if the type is fixed.
          format: int32
    LocationCreateAttributes:
      required:
      - longitude
      - latitude
      type: object
      description: A detailed description of a location's creation input parameters.
      properties:
        latitude:
          type: number
          description: The location's latitude.
          format: float
        longitude:
          type: number
          description: The location's longitude.
          format: float
    LocationUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a location's update input parameters.
      properties:
        latitude:
          type: number
          description: The location's latitude.
          format: float
        longitude:
          type: number
          description: The location's longitude.
          format: float
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    MemberSitePositionCreateAttributes:
      required:
      - member_site_id
      - position_id
      type: object
      description: A detailed description of a member site position's creation input
        parameters.
      properties:
        member_site_id:
          type: string
          description: The member_site's unique identifier.
          format: uuid
        position_id:
          type: string
          description: The position's unique identifier.
          format: uuid
        rate_base:
          type: number
          description: The member's rate for regular hours in this position.
          format: float
        rate_overtime:
          type: number
          description: The member's rate for overtime hours in this position.
          format: float
        rate_overtime_2:
          type: number
          description: The member's rate for overtime 2 hours in this position, if
            enabled.
          format: float
    MemberSitePositionUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a member site position's update input
        parameters.
      properties:
        member_site_id:
          type: string
          description: The member_site's unique identifier.
          format: uuid
        position_id:
          type: string
          description: The position's unique identifier.
          format: uuid
        rate_base:
          type: number
          description: The member's rate for regular hours in this position.
          format: float
        rate_overtime:
          type: number
          description: The member's rate for overtime hours in this position.
          format: float
        rate_overtime_2:
          type: number
          description: The member's rate for overtime 2 hours in this position, if
            enabled.
          format: float
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    MemberSiteResourceCreateAttributes:
      required:
      - member_site_id
      - resource_id
      type: object
      description: A detailed description of a member site resource's creation input
        parameters.
      properties:
        member_site_id:
          type: string
          description: The member_site's unique identifier.
          format: uuid
        resource_id:
          type: string
          description: The resource's unique identifier.
          format: uuid
    MemberSiteResourceUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a member site resource's update input
        parameters.
      properties:
        member_site_id:
          type: string
          description: The member_site's unique identifier.
          format: uuid
        resource_id:
          type: string
          description: The resource's unique identifier.
          format: uuid
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    MemberSiteCreateAttributes:
      required:
      - site_id
      - role
      type: object
      description: A detailed description of a member site's creation input parameters.
      properties:
        site_id:
          type: string
          description: The site's unique id
          format: uuid
        role:
          type: string
          description: The member's role for this site. Can either be member, supervisor
            or manager. Also called hierarchical level.
        role_definition_id:
          type: string
          description: The role definition's unique identifier.
          format: uuid
        rate_single_base:
          type: number
          description: The member's rate for regular hours for all positions in this
            site.
          format: float
        rate_single_overtime:
          type: number
          description: The member's rate for overtime hours for all positions in this
            site.
          format: float
        rate_single_overtime_2:
          type: number
          description: The member's rate for overtime 2 hours for all positions in
            this site, if enabled.
          format: float
        rate_type:
          type: string
          description: Whether the same rates are applied to all positions (single)
            or every position has their own rates (position).
        member_site_positions_attributes:
          type: array
          description: The positions associated to this member in this site
          items:
            "$ref": "#/components/schemas/MemberSitePositionCreateAttributes"
        member_site_resources_attributes:
          type: array
          description: The resources associated to this member in this site
          items:
            "$ref": "#/components/schemas/MemberSiteResourceCreateAttributes"
    MemberSiteUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a member site's update input parameters.
      properties:
        site_id:
          type: string
          description: The site's unique id
          format: uuid
        role:
          type: string
          description: The member's role for this site. Can either be member, supervisor
            or manager. Also called hierarchical level.
        role_definition_id:
          type: string
          description: The role definition's unique identifier.
          format: uuid
        rate_single_base:
          type: number
          description: The member's rate for regular hours for all positions in this
            site.
          format: float
        rate_single_overtime:
          type: number
          description: The member's rate for overtime hours for all positions in this
            site.
          format: float
        rate_single_overtime_2:
          type: number
          description: The member's rate for overtime 2 hours for all positions in
            this site, if enabled.
          format: float
        rate_type:
          type: string
          description: Whether the same rates are applied to all positions (single)
            or every position has their own rates (position).
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
        member_site_positions_attributes:
          type: array
          description: The positions associated to this member in this site
          items:
            oneOf:
            - "$ref": "#/components/schemas/MemberSitePositionUpdateAttributes"
            - "$ref": "#/components/schemas/MemberSitePositionCreateAttributes"
        member_site_resources_attributes:
          type: array
          description: The resources associated to this member in this site
          items:
            oneOf:
            - "$ref": "#/components/schemas/MemberSiteResourceUpdateAttributes"
            - "$ref": "#/components/schemas/MemberSiteResourceCreateAttributes"
    ProfileCreateAttributes:
      required:
      - first_name
      - last_name
      - email
      type: object
      description: A detailed description of a profile's creation input parameters.
      properties:
        email:
          type: string
          description: The profile's email.
          format: email
        first_name:
          type: string
          description: The profile's first name.
        last_name:
          type: string
          description: The profile's last name.
        nickname:
          type: string
          description: The profile's nickname.
        birthdate:
          type: string
          description: The profile's birthdate.
          format: date
        civic_address:
          type: string
          description: The profile's civic address.
        document_id:
          type: string
          description: The unique identifier of the profile's picture.
        phone_1_number:
          type: string
          description: The profile's first phone number.
          format: phone
        phone_2_number:
          type: string
          description: The profile's second phone number.
          format: phone
        phone_3_number:
          type: string
          description: The profile's third phone number.
          format: phone
        phone_1_type:
          type: string
          description: The profile's first phone type.
        phone_2_type:
          type: string
          description: The profile's second phone type.
        phone_3_type:
          type: string
          description: The profile's third phone type.
    MemberCreate:
      required:
      - profile_attributes
      - member_sites_attributes
      type: object
      description: A detailed description of a member's creation input parameters.
      properties:
        seniority_date:
          type: string
          description: When the member first started working for this organization.
          format: date
        deletion_date:
          type: string
          description: When the member will be archived.
          format: date
        identification_number:
          type: string
          description: The member's identification number.
        additional_information:
          type: string
          description: Additional information related to the member.
        override_overtime:
          type: boolean
          description: If the member has custom overtime thresholds.
        multi_level_overtime:
          type: boolean
          description: If multi-level overtime is enabled for the member.
        override_spread_overtime:
          type: boolean
          description: If the member overrides the organization's overtime spread
            setting.
        overtime_day_threshold:
          type: number
          description: The member's custom day overtime 1 threshold.
          format: float
        overtime_week_threshold:
          type: number
          description: The member's custom week overtime 1 threshold.
          format: float
        overtime_2_day_threshold:
          type: number
          description: The member's custom day overtime 2 threshold, if multi-level
            overtime is enabled.
          format: float
        overtime_2_week_threshold:
          type: number
          description: The member's custom week overtime 2 threshold, if multi-level
            overtime is enabled.
          format: float
        spread_overtime_enabled:
          type: boolean
          description: If the overtime is spread across multiple weeks for this member.
        main_position_id:
          type: string
          description: The unique identifier of the member's primary position.
          format: uuid
        main_site_id:
          type: string
          description: The unique identifier of the member's main site.
          format: uuid
        admin:
          type: boolean
          description: If the member is an administrator of the organization.
        invite:
          type: boolean
          description: If this member has been invited to join the organization.
        visible:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets.
        hide_before_seniority_date:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets before
            the seniority date.
        time_clock_code:
          type: string
          description: The member's time clock code.
        time_clock_override_defaults:
          type: boolean
          description: If the member overrides the organization's time clock settings.
        time_clock_transfer_next_call:
          type: boolean
          description: If the next phone clock must be transferred.
        time_clock_transfer_next_call_number:
          type: string
          description: The number to transfer the next phone clock to.
        time_clock_must_be_scheduled:
          type: boolean
          description: If the member must be scheduled in order to clock.
        time_clock_window:
          type: integer
          description: The window used for various time clock settings, in minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description: If the member's clock in times are rounded to the shift's planned
            start time.
        time_clock_limit_to_shift_end_window:
          type: integer
          description: If the member's clock out time is limited to the shift's planned
            end time.
          format: int32
        payroll_seniority:
          type: integer
          description: The member's total minutes worked.
          format: int32
        payroll_auto_update:
          type: boolean
          description: If the member doesn't have to clock in.
        default_leave_value:
          type: integer
          description: The member's default time off value, in minutes. Overrides
            the organization's default time off value. Will only work if the member's
            attendance is computed in days.
          format: int32
        profile_attributes:
          "$ref": "#/components/schemas/ProfileCreateAttributes"
        member_sites_attributes:
          type: array
          description: The member's sites.
          items:
            "$ref": "#/components/schemas/MemberSiteCreateAttributes"
    ProfileUpdateAttributes:
      type: object
      description: A detailed description of a profile's update input parameters.
      properties:
        email:
          type: string
          description: The profile's email.
          format: email
        first_name:
          type: string
          description: The profile's first name.
        last_name:
          type: string
          description: The profile's last name.
        nickname:
          type: string
          description: The profile's nickname.
        birthdate:
          type: string
          description: The profile's birthdate.
          format: date
        civic_address:
          type: string
          description: The profile's civic address.
        document_id:
          type: string
          description: The unique identifier of the profile's picture.
        phone_1_number:
          type: string
          description: The profile's first phone number.
          format: phone
        phone_2_number:
          type: string
          description: The profile's second phone number.
          format: phone
        phone_3_number:
          type: string
          description: The profile's third phone number.
          format: phone
        phone_1_type:
          type: string
          description: The profile's first phone type.
        phone_2_type:
          type: string
          description: The profile's second phone type.
        phone_3_type:
          type: string
          description: The profile's third phone type.
    MemberUpdate:
      type: object
      description: A detailed description of a member's update input parameters.
      properties:
        seniority_date:
          type: string
          description: When the member first started working for this organization.
          format: date
        deletion_date:
          type: string
          description: When the member will be archived.
          format: date
        identification_number:
          type: string
          description: The member's identification number.
        additional_information:
          type: string
          description: Additional information related to the member.
        override_overtime:
          type: boolean
          description: If the member has custom overtime thresholds.
        multi_level_overtime:
          type: boolean
          description: If multi-level overtime is enabled for the member.
        override_spread_overtime:
          type: boolean
          description: If the member overrides the organization's overtime spread
            setting.
        overtime_day_threshold:
          type: number
          description: The member's custom day overtime 1 threshold.
          format: float
        overtime_week_threshold:
          type: number
          description: The member's custom week overtime 1 threshold.
          format: float
        overtime_2_day_threshold:
          type: number
          description: The member's custom day overtime 2 threshold, if multi-level
            overtime is enabled.
          format: float
        overtime_2_week_threshold:
          type: number
          description: The member's custom week overtime 2 threshold, if multi-level
            overtime is enabled.
          format: float
        spread_overtime_enabled:
          type: boolean
          description: If the overtime is spread across multiple weeks for this member.
        main_position_id:
          type: string
          description: The unique identifier of the member's primary position.
          format: uuid
        main_site_id:
          type: string
          description: The unique identifier of the member's main site.
          format: uuid
        admin:
          type: boolean
          description: If the member is an administrator of the organization.
        invite:
          type: boolean
          description: If this member has been invited to join the organization.
        visible:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets.
        hide_before_seniority_date:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets before
            the seniority date.
        time_clock_code:
          type: string
          description: The member's time clock code.
        time_clock_override_defaults:
          type: boolean
          description: If the member overrides the organization's time clock settings.
        time_clock_transfer_next_call:
          type: boolean
          description: If the next phone clock must be transferred.
        time_clock_transfer_next_call_number:
          type: string
          description: The number to transfer the next phone clock to.
        time_clock_must_be_scheduled:
          type: boolean
          description: If the member must be scheduled in order to clock.
        time_clock_window:
          type: integer
          description: The window used for various time clock settings, in minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description: If the member's clock in times are rounded to the shift's planned
            start time.
        time_clock_limit_to_shift_end_window:
          type: integer
          description: If the member's clock out time is limited to the shift's planned
            end time.
          format: int32
        payroll_seniority:
          type: integer
          description: The member's total minutes worked.
          format: int32
        payroll_auto_update:
          type: boolean
          description: If the member doesn't have to clock in.
        default_leave_value:
          type: integer
          description: The member's default time off value, in minutes. Overrides
            the organization's default time off value. Will only work if the member's
            attendance is computed in days.
          format: int32
        profile_attributes:
          "$ref": "#/components/schemas/ProfileUpdateAttributes"
        member_sites_attributes:
          type: array
          description: The member's sites.
          items:
            oneOf:
            - "$ref": "#/components/schemas/MemberSiteUpdateAttributes"
            - "$ref": "#/components/schemas/MemberSiteCreateAttributes"
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/Error"
    Error:
      type: object
      description: An error object.
      properties:
        source:
          type: string
        short_message:
          type: string
        full_message:
          type: string
    CommonPagination:
      type: object
      description: A pagination object returned on an index request.
      properties:
        sort:
          type: object
        search:
          type: object
        limit:
          type: integer
        page_size:
          type: integer
        total_pages:
          type: integer
        current_page:
          type: integer
        next_page:
          type: integer
        prev_page:
          type: integer
        first_page:
          type: boolean
        last_page:
          type: boolean
        out_of_range:
          type: boolean
        total_count:
          type: integer
    OpenShiftAudienceConfigCreateAttributes:
      type: object
      description: A detailed description of an open shift audience config's creation
        input parameters.
      properties:
        send_by_seniority:
          type: boolean
          description: If the open shift is sent by seniority.
        exclude_members_in_overtime:
          type: boolean
          description: If members in overtime situation are excluded from the open
            shift audience.
        exclude_members_in_conflict:
          type: boolean
          description: If members with shift conflicts are excluded from the open
            shift audience.
        excluded_member_ids:
          type: array
          description: The identifiers of the members manually excluded from the open
            shift audience.
          items:
            type: string
            format: uuid
    OpenShiftAudienceConfigUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of an open shift audience config's update
        input parameters.
      properties:
        send_by_seniority:
          type: boolean
          description: If the open shift is sent by seniority.
        exclude_members_in_overtime:
          type: boolean
          description: If members in overtime situation are excluded from the open
            shift audience.
        exclude_members_in_conflict:
          type: boolean
          description: If members with shift conflicts are excluded from the open
            shift audience.
        excluded_member_ids:
          type: array
          description: The identifiers of the members manually excluded from the open
            shift audience.
          items:
            type: string
            format: uuid
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
    OpenShiftRequestApprove:
      required:
      - member_ids
      type: object
      description: A detailed description of an open shift request approval input
        parameters.
      properties:
        member_ids:
          type: array
          description: The identifiers of the employees selected for this open shift.
          items:
            type: string
    PayrollUpdate:
      type: object
      description: A detailed description of a payroll's update input parameters.
      properties:
        status:
          type: string
          description: The payroll's current status.
    PhoneTerminalCreateAttributes:
      required:
      - name
      - phone_number
      - confidential
      type: object
      description: A detailed description of a phone terminal's creation input parameters.
      properties:
        site_id:
          type: string
          description: The unique identifier of the phone terminal's site.
          format: uuid
        name:
          type: string
          description: The phone terminal's name.
        phone_number:
          type: string
          description: The phone terminal's phone number.
        confidential:
          type: boolean
          description: If the phone terminal allows phone calls from confidential
            phone numbers.
    PhoneTerminalUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a phone terminal's update input parameters.
      properties:
        site_id:
          type: string
          description: The unique identifier of the phone terminal's site.
          format: uuid
        name:
          type: string
          description: The phone terminal's name.
        phone_number:
          type: string
          description: The phone terminal's phone number.
        confidential:
          type: boolean
          description: If the phone terminal allows phone calls from confidential
            phone numbers.
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    PositionCreate:
      required:
      - name
      type: object
      description: A detailed description of a position's creation input parameters.
      properties:
        name:
          type: string
          description: The position's name.
        rank:
          type: integer
          description: The position's rank.
          format: int32
        color:
          type: string
          description: The position's color.
        parent_id:
          type: string
          description: The unique identifier of the position's parent. If this is
            present, it means this is a sub-position.
          format: uuid
    PositionUpdate:
      type: object
      description: A detailed description of a position's update input parameters.
      properties:
        name:
          type: string
          description: The position's name.
        rank:
          type: integer
          description: The position's rank.
          format: int32
        color:
          type: string
          description: The position's color.
        parent_id:
          type: string
          description: The unique identifier of the position's parent. If this is
            present, it means this is a sub-position.
          format: uuid
    PremiumEntryCreateAttributes:
      required:
      - premium_id
      type: object
      description: A detailed description of a premium entry's creation input parameters.
      properties:
        premium_id:
          type: string
          description: The premium's unique identifier.
          format: uuid
        has_custom_value:
          type: boolean
          description: If the premium is applied to a specific number of hours, otherwise
            it is applied to the shift's length.
        entry_minutes:
          type: integer
          description: The number of minutes the premium is applied to.
          format: int32
    PremiumEntryUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a premium entry's update input parameters.
      properties:
        premium_id:
          type: string
          description: The premium's unique identifier.
          format: uuid
        has_custom_value:
          type: boolean
          description: If the premium is applied to a specific number of hours, otherwise
            it is applied to the shift's length.
        entry_minutes:
          type: integer
          description: The number of minutes the premium is applied to.
          format: int32
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    ResourceShiftCreateAttributes:
      required:
      - resource_id
      type: object
      description: A detailed description of a resource shift's creation input parameters.
      properties:
        resource_id:
          type: string
          description: The resource's unique identifier.
          format: uuid
    ResourceShiftUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a resource shift's update input parameters.
      properties:
        resource_id:
          type: string
          description: The resource's unique identifier.
          format: uuid
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    ResourceCreate:
      required:
      - name
      type: object
      description: A detailed description of a resource's creation input parameters.
      properties:
        'no':
          type: string
          description: The resource's unique short identifier.
        name:
          type: string
          description: The resource's name.
        address:
          type: string
          description: The resource's address.
        description:
          type: string
          description: The resource's description.
        exclusive:
          type: boolean
          description: If the resource is exclusive.
        type_job_site:
          type: boolean
          description: If the resource is a job site.
        type_equipment:
          type: boolean
          description: If the resource is an equipment.
        week_hours_min:
          type: number
          description: The minimum scheduling goals for this resource.
          format: float
        week_hours_max:
          type: number
          description: The maximum scheduling goals for this resource.
          format: float
        minimum_paid_minutes_per_entry:
          type: integer
          description: The minimum number of paid minutes per entry on the resource.
          format: int32
        document_ids:
          type: array
          description: The documents attached to this resource.
          items:
            type: string
        location_attributes:
          "$ref": "#/components/schemas/LocationCreateAttributes"
        phone_terminals_attributes:
          type: array
          description: The resource's phone terminals.
          items:
            "$ref": "#/components/schemas/PhoneTerminalCreateAttributes"
    ResourceUpdate:
      type: object
      description: A detailed description of a resource's update input parameters.
      properties:
        'no':
          type: string
          description: The resource's unique short identifier.
        name:
          type: string
          description: The resource's name.
        address:
          type: string
          description: The resource's address.
        description:
          type: string
          description: The resource's description.
        exclusive:
          type: boolean
          description: If the resource is exclusive.
        type_job_site:
          type: boolean
          description: If the resource is a job site.
        type_equipment:
          type: boolean
          description: If the resource is an equipment.
        week_hours_min:
          type: number
          description: The minimum scheduling goals for this resource.
          format: float
        week_hours_max:
          type: number
          description: The maximum scheduling goals for this resource.
          format: float
        minimum_paid_minutes_per_entry:
          type: integer
          description: The minimum number of paid minutes per entry on the resource.
          format: int32
        document_ids:
          type: array
          description: The documents attached to this resource.
          items:
            type: string
        location_attributes:
          "$ref": "#/components/schemas/LocationUpdateAttributes"
        phone_terminals_attributes:
          type: array
          description: The resource's phone terminals.
          items:
            oneOf:
            - "$ref": "#/components/schemas/PhoneTerminalUpdateAttributes"
            - "$ref": "#/components/schemas/PhoneTerminalCreateAttributes"
    SchedulerProjectionCreate:
      required:
      - site_id
      - date
      type: object
      description: A detailed description of a scheduler projection's creation input
        parameters.
      properties:
        revenues:
          type: number
          description: The amount of expected revenues.
          format: float
        hours:
          type: number
          description: The number of expected scheduled hours.
          format: float
        site_id:
          type: string
          description: The unique identifier of the scheduler projection's site.
          format: uuid
        date:
          type: string
          description: The scheduler projection's date.
          format: date
    SchedulerProjectionUpdate:
      type: object
      description: A detailed description of a scheduler projection's update input
        parameters.
      properties:
        revenues:
          type: number
          description: The amount of expected revenues.
          format: float
        hours:
          type: number
          description: The number of expected scheduled hours.
          format: float
    SchedulerProjectionUpdateForBulk:
      required:
      - site_id
      - date
      type: object
      description: A detailed description of a scheduler projection's update input
        parameters for a bulk operation.
      properties:
        revenues:
          type: number
          description: The amount of expected revenues.
          format: float
        hours:
          type: number
          description: The number of expected scheduled hours.
          format: float
        site_id:
          type: string
          description: The unique identifier of the scheduler projection's site.
          format: uuid
        date:
          type: string
          description: The scheduler projection's date.
          format: date
    TaskCreateAttributes:
      required:
      - name
      type: object
      description: A detailed description of a task's creation input parameters.
      properties:
        name:
          type: string
          description: The name of the task.
        instructions:
          type: string
          description: The instructions of the task.
        offset:
          type: integer
          description: The task's offset from the shift's start time, in minutes.
            E.g., a task starting at 7:30 for a shift starting at 7:00 will have an
            offset of 30.
          format: int32
    TimeOffPaymentConstraintCreateAttributes:
      type: object
      description: A detailed description of a time off payment's creation input parameters.
      properties:
        paid_weekdays:
          type: array
          description: The days of the week that are considered paid for the time
            off, with 0 as Sunday, up to 6 as Saturday. Only one occurrence of each
            day can be specified. If this attribute is provided but not excluded_dates,
            the excluded_dates will be overwritten.
          items:
            type: integer
            format: int32
        excluded_dates:
          type: array
          description: The dates that are considered unpaid for the time off. This
            attribute takes precedence over paid_weekdays.
          items:
            type: string
            format: date
    ShiftCreate:
      required:
      - site_id
      - position_id
      - start_at
      - end_at
      type: object
      description: A detailed description of a shift's creation input parameters.
      properties:
        site_id:
          type: string
          description: The unique identifier of the shift's site.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of the shift's position.
          format: uuid
        sub_position_id:
          type: string
          description: The unique identifier of the shift's sub-position.
          format: uuid
        date:
          type: string
          description: The shift's date.
          format: date
        start_at:
          type: string
          description: The shift's start date time.
          format: date-time
        start_at_time:
          type: string
          description: The shift's start time.
        start_date:
          type: string
          description: The shift's start date.
          format: date
        end_at:
          type: string
          description: The shift's end date time.
          format: date-time
        end_at_time:
          type: string
          description: The shift's end time.
        end_date:
          type: string
          description: The shift's end date.
          format: date
        on_call:
          type: boolean
          description: If the shift is on call.
        training:
          type: boolean
          description: If the shift is a training.
        time_off:
          type: boolean
          description: If the shift is a time off.
        all_day:
          type: boolean
          description: If the shift is an all day time off.
        single_clock:
          type: boolean
          description: If the shift only requires a clock in.
        auto_clock:
          type: boolean
          description: If the shift is added automatically to the member's timesheet.
        hide_end_at:
          type: boolean
          description: If the shift's end is hidden to members.
        paid:
          type: boolean
          description: If the shift is a paid time off or not.
        recurring:
          type: boolean
          description: If the shift is recurring.
        open:
          type: boolean
          description: If the shift is open.
        open_quantity:
          type: integer
          description: How many shifts are available.
          format: int32
        leave_type_id:
          type: string
          description: The unique identifier of the shift's time off type.
          format: uuid
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        reminder:
          type: string
          description: The shift's additional information.
        publish:
          type: boolean
          description: If the shift should be published after its creation.
        assign_position_to_member:
          type: boolean
          description: If the specified position should be assigned to the member
            if it's not already one of theirs.
        member_id:
          type: string
          description: The unique identifier of the shift's member. Required if 'open'
            is false.
          format: uuid
        resource_shifts_attributes:
          type: array
          description: The shift's resources.
          items:
            "$ref": "#/components/schemas/ResourceShiftCreateAttributes"
        drive_file_shifts_attributes:
          type: array
          description: The shift's team library files.
          items:
            "$ref": "#/components/schemas/DriveFileShiftCreateAttributes"
        breaks_attributes:
          type: array
          description: The shift's breaks.
          items:
            "$ref": "#/components/schemas/BreakCreateAttributes"
        tasks_attributes:
          type: array
          description: The shift's tasks (if the Plus plan is enabled).
          items:
            "$ref": "#/components/schemas/TaskCreateAttributes"
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintCreateAttributes"
        leave_value_setting_attributes:
          "$ref": "#/components/schemas/LeaveValueSettingCreateAttributes"
        manual_premium_entries:
          type: array
          description: The shift's manual premiums.
          items:
            "$ref": "#/components/schemas/PremiumEntryCreateAttributes"
        audience_config_attributes:
          "$ref": "#/components/schemas/OpenShiftAudienceConfigCreateAttributes"
    ShiftDelete:
      type: object
      description: A detailed description of a shift's delete input parameters.
      properties:
        publish:
          type: boolean
          description: If the shift should be published after its deletion.
    ShiftToggleTasksCompletion:
      required:
      - tasks_attributes
      type: object
      description: A detailed description of the input parameters for toggling the
        completion of a shift's tasks (if the Plus plan is enabled).
      properties:
        tasks_attributes:
          type: array
          description: The list of tasks whose completion will be toggled.
          items:
            "$ref": "#/components/schemas/TaskToggleCompletionAttributes"
    ShiftTransfer:
      type: object
      description: A detailed description of a shift transfer input parameters.
      properties:
        date:
          type: string
          description: The date to which the shift will be transferred.
          format: date
        member_id:
          type: string
          description: The ID of the member to which the shift will be transferred.
            A blank value will transfer this shift as an open shift.
          format: uuid
        publish:
          type: boolean
          description: If the shift should be published after its transfer.
    TaskUpdateAttributes:
      required:
      - id
      type: object
      description: A detailed description of a task's update input parameters.
      properties:
        name:
          type: string
          description: The name of the task.
        instructions:
          type: string
          description: The instructions of the task.
        offset:
          type: integer
          description: The task's offset from the shift's start time, in minutes.
            E.g., a task starting at 7:30 for a shift starting at 7:00 will have an
            offset of 30.
          format: int32
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description: Set to true if you want to delete this object while updating
            its parent.
    ShiftUpdate:
      type: object
      description: A detailed description of a shift's update input parameters.
      properties:
        site_id:
          type: string
          description: The unique identifier of the shift's site.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of the shift's position.
          format: uuid
        sub_position_id:
          type: string
          description: The unique identifier of the shift's sub-position.
          format: uuid
        date:
          type: string
          description: The shift's date.
          format: date
        start_at:
          type: string
          description: The shift's start date time.
          format: date-time
        start_at_time:
          type: string
          description: The shift's start time.
        start_date:
          type: string
          description: The shift's start date.
          format: date
        end_at:
          type: string
          description: The shift's end date time.
          format: date-time
        end_at_time:
          type: string
          description: The shift's end time.
        end_date:
          type: string
          description: The shift's end date.
          format: date
        on_call:
          type: boolean
          description: If the shift is on call.
        training:
          type: boolean
          description: If the shift is a training.
        time_off:
          type: boolean
          description: If the shift is a time off.
        all_day:
          type: boolean
          description: If the shift is an all day time off.
        single_clock:
          type: boolean
          description: If the shift only requires a clock in.
        auto_clock:
          type: boolean
          description: If the shift is added automatically to the member's timesheet.
        hide_end_at:
          type: boolean
          description: If the shift's end is hidden to members.
        paid:
          type: boolean
          description: If the shift is a paid time off or not.
        recurring:
          type: boolean
          description: If the shift is recurring.
        open:
          type: boolean
          description: If the shift is open.
        open_quantity:
          type: integer
          description: How many shifts are available.
          format: int32
        leave_type_id:
          type: string
          description: The unique identifier of the shift's time off type.
          format: uuid
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        reminder:
          type: string
          description: The shift's additional information.
        publish:
          type: boolean
          description: If the shift should be published after its update, if it generated
            a new version as a draft.
        resource_shifts_attributes:
          type: array
          description: The shift's resources.
          items:
            oneOf:
            - "$ref": "#/components/schemas/ResourceShiftUpdateAttributes"
            - "$ref": "#/components/schemas/ResourceShiftCreateAttributes"
        drive_file_shifts_attributes:
          type: array
          description: The shift's team library files.
          items:
            oneOf:
            - "$ref": "#/components/schemas/DriveFileShiftUpdateAttributes"
            - "$ref": "#/components/schemas/DriveFileShiftCreateAttributes"
        breaks_attributes:
          type: array
          description: The shift's breaks.
          items:
            oneOf:
            - "$ref": "#/components/schemas/BreakUpdateAttributes"
            - "$ref": "#/components/schemas/BreakCreateAttributes"
        tasks_attributes:
          type: array
          description: The shift's tasks (if the Plus plan is enabled).
          items:
            oneOf:
            - "$ref": "#/components/schemas/TaskUpdateAttributes"
            - "$ref": "#/components/schemas/TaskCreateAttributes"
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintUpdateAttributes"
        leave_value_setting_attributes:
          "$ref": "#/components/schemas/LeaveValueSettingUpdateAttributes"
        manual_premium_entries:
          type: array
          description: The shift's manual premiums.
          items:
            oneOf:
            - "$ref": "#/components/schemas/PremiumEntryUpdateAttributes"
            - "$ref": "#/components/schemas/PremiumEntryCreateAttributes"
        audience_config_attributes:
          oneOf:
          - "$ref": "#/components/schemas/OpenShiftAudienceConfigUpdateAttributes"
          - "$ref": "#/components/schemas/OpenShiftAudienceConfigCreateAttributes"
    SiteCreate:
      required:
      - name
      type: object
      description: A detailed description of a site's creation input parameters.
      properties:
        name:
          type: string
          description: The site's name.
        address:
          type: string
          description: The site's address.
        instructions:
          type: string
          description: The site's additional information.
        location_attributes:
          "$ref": "#/components/schemas/LocationCreateAttributes"
    SiteUpdate:
      type: object
      description: A detailed description of a site's update input parameters.
      properties:
        name:
          type: string
          description: The site's name.
        address:
          type: string
          description: The site's address.
        instructions:
          type: string
          description: The site's additional information.
        location_attributes:
          "$ref": "#/components/schemas/LocationUpdateAttributes"
    TaskToggleCompletionAttributes:
      required:
      - id
      - completed
      type: object
      description: A detailed description of a task's completion status toggle input
        parameters.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        completed:
          type: boolean
          description: Completion state of the task.
    TimeEntryCreate:
      required:
      - member_id
      - position_id
      - site_id
      - start_at
      type: object
      description: A detailed description of a time entry's creation input parameters.
      properties:
        start_at:
          type: string
          description: The date time at which the time entry starts.
          format: date-time
        end_at:
          type: string
          description: The date time at which the time entry ends.
          format: date-time
        start_at_time:
          type: string
          description: The time at which the time entry starts.
        end_at_time:
          type: string
          description: The time at which the time entry ends.
        overwritten_length_minutes:
          type: integer
          description: The time entry's custom length.
          format: int32
        date:
          type: string
          description: The time entry's date.
          format: date
        time_off:
          type: boolean
          description: If the time entry is a time off.
        time_off_length:
          type: integer
          description: The length of the time off.
          format: int32
        time_off_leave_type_id:
          type: string
          description: The unique identifier of the time off type.
          format: uuid
        time_off_paid:
          type: boolean
          description: If the time off is paid.
        time_off_resource_id:
          type: string
          description: The unique identifier of the time off's resource.
          format: uuid
        unpaid_break:
          type: integer
          description: Unpaid break minutes for the time entry.
          format: int32
        paid_break:
          type: integer
          description: Paid break minutes for the time entry.
          format: int32
        member_site_position_id:
          type: string
          description: The time entry's member site position id.
          format: uuid
        site_id:
          type: string
          description: The time entry's site id.
          format: uuid
        position_id:
          type: string
          description: The time entry's position id.
          format: uuid
        notes:
          type: string
          description: The time entry notes.
        start_at_clock_notes:
          type: string
          description: Note left by the employee while clocking in.
        end_at_clock_notes:
          type: string
          description: Note left by the employee while clocking out.
        start_at_clock_job_site_id:
          type: string
          description: The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description: The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        rate_regular:
          type: number
          description: The regular rate for the time entry.
          format: float
        rate_overtime:
          type: number
          description: The overtime 1 rate for the time entry.
          format: float
        rate_overtime_2:
          type: number
          description: The overtime 2 rate for the time entry.
          format: float
        break_started_at:
          type: string
          description: The date time at which the time entry break started.
          format: date-time
        member_id:
          type: string
          description: The time entry's member id.
          format: uuid
    TimeEntryUpdate:
      type: object
      description: A detailed description of a time entry's update input parameters.
      properties:
        start_at:
          type: string
          description: The date time at which the time entry starts.
          format: date-time
        end_at:
          type: string
          description: The date time at which the time entry ends.
          format: date-time
        start_at_time:
          type: string
          description: The time at which the time entry starts.
        end_at_time:
          type: string
          description: The time at which the time entry ends.
        overwritten_length_minutes:
          type: integer
          description: The time entry's custom length.
          format: int32
        date:
          type: string
          description: The time entry's date.
          format: date
        time_off:
          type: boolean
          description: If the time entry is a time off.
        time_off_length:
          type: integer
          description: The length of the time off.
          format: int32
        time_off_leave_type_id:
          type: string
          description: The unique identifier of the time off type.
          format: uuid
        time_off_paid:
          type: boolean
          description: If the time off is paid.
        time_off_resource_id:
          type: string
          description: The unique identifier of the time off's resource.
          format: uuid
        unpaid_break:
          type: integer
          description: Unpaid break minutes for the time entry.
          format: int32
        paid_break:
          type: integer
          description: Paid break minutes for the time entry.
          format: int32
        member_site_position_id:
          type: string
          description: The time entry's member site position id.
          format: uuid
        site_id:
          type: string
          description: The time entry's site id.
          format: uuid
        position_id:
          type: string
          description: The time entry's position id.
          format: uuid
        notes:
          type: string
          description: The time entry notes.
        start_at_clock_notes:
          type: string
          description: Note left by the employee while clocking in.
        end_at_clock_notes:
          type: string
          description: Note left by the employee while clocking out.
        start_at_clock_job_site_id:
          type: string
          description: The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description: The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        rate_regular:
          type: number
          description: The regular rate for the time entry.
          format: float
        rate_overtime:
          type: number
          description: The overtime 1 rate for the time entry.
          format: float
        rate_overtime_2:
          type: number
          description: The overtime 2 rate for the time entry.
          format: float
        break_started_at:
          type: string
          description: The date time at which the time entry break started.
          format: date-time
        override_overtime:
          type: boolean
          description: If custom overtime values have been specified for the time
            entry.
        overtime_1_minutes:
          type: number
          description: The amount of overtime minutes for level 1.
          format: float
        overtime_2_minutes:
          type: number
          description: The amount of overtime minutes for level 2.
          format: float
    UserUpdate:
      type: object
      description: A detailed description of a user's update input parameters.
      properties:
        locale:
          type: string
          description: The user's language.
        time_format:
          type: integer
          description: The user's time format, 12 or 24.
          format: int32
        time_zone_name:
          type: string
          description: The user's time zone name.
        email:
          type: string
          description: The user's email.
          format: email
        disabled_notifications:
          type: array
          description: A list of the notifications this user has disabled.
          items:
            type: string
        sms_notifications:
          type: boolean
          description: If the user receives SMS notifications.
        sms_notifications_phone_status:
          type: string
          description: If the phone number's confirmation status, pending or confirmed.
        sms_notifications_phone_number:
          type: string
          description: The phone number at which the user receives the SMS notifications.
        email_notifications:
          type: boolean
          description: If the user receives email notifications.
        shift_reminder_time:
          type: integer
          description: When the user is reminded of an upcoming shift, in minutes.
          format: int32
        profile_attributes:
          "$ref": "#/components/schemas/ProfileUpdateAttributes"
    DriveFileCreate:
      required:
      - name
      - role
      type: object
      description: A detailed description of a file's creation input parameters.
      properties:
        name:
          type: string
          description: The name of the file.
        member_viewable:
          type: boolean
          description: Set to true if the member can see this file.
        role:
          type: string
          description: The role required to see the file. Can either be supervisor,
            manager, or admin.
        folder_id:
          type: string
          description: The parent folder's id.
          format: uuid
        body:
          type: string
          description: An internal text file's content.
        note:
          type: string
          description: The file's note.
        site_ids:
          type: array
          description: The site ids for which the file is visible, if the file is
            a Team library file.
          items:
            type: string
        position_ids:
          type: array
          description: The position ids for which the file is visible, if the file
            is a Team library file.
          items:
            type: string
        publish_action:
          type: string
          description: Determines whether the file should be published or drafted,
            with the option to send a notification to the members concerned. Valid
            values are 'publish', 'publish_and_notify', or 'draft'.
        member_id:
          type: string
          description: The file member's id. Leave blank to create a Team library
            file.
          format: uuid
        file:
          type: string
          description: An external file to upload.
          format: binary
    DriveFileUpdate:
      type: object
      description: A detailed description of a file's update input parameters.
      properties:
        name:
          type: string
          description: The name of the file.
        member_viewable:
          type: boolean
          description: Set to true if the member can see this file.
        role:
          type: string
          description: The role required to see the file. Can either be supervisor,
            manager, or admin.
        folder_id:
          type: string
          description: The parent folder's id.
          format: uuid
        body:
          type: string
          description: An internal text file's content.
        note:
          type: string
          description: The file's note.
        site_ids:
          type: array
          description: The site ids for which the file is visible, if the file is
            a Team library file.
          items:
            type: string
        position_ids:
          type: array
          description: The position ids for which the file is visible, if the file
            is a Team library file.
          items:
            type: string
        publish_action:
          type: string
          description: Determines whether the file should be published or drafted,
            with the option to send a notification to the members concerned. Valid
            values are 'publish', 'publish_and_notify', or 'draft'.
    DriveFolderCreate:
      required:
      - name
      - role
      type: object
      description: A detailed description of a folder's creation input parameters.
      properties:
        name:
          type: string
          description: The name of the folder.
        member_viewable:
          type: boolean
          description: Set to true if the member can see this folder and all of its
            contents.
        role:
          type: string
          description: The role required to see the folder and all of its contents.
            Can either be member, supervisor, manager, or admin.
        site_ids:
          type: array
          description: The site ids for which the folder is visible, if the folder
            is a Team library folder.
          items:
            type: string
        position_ids:
          type: array
          description: The position ids for which the folder is visible, if the folder
            is a Team library folder.
          items:
            type: string
        member_id:
          type: string
          description: The folder member's id. Leave blank to create a Team library
            folder.
          format: uuid
    DriveFolderUpdate:
      type: object
      description: A detailed description of a folder's update input parameters.
      properties:
        name:
          type: string
          description: The name of the folder.
        member_viewable:
          type: boolean
          description: Set to true if the member can see this folder and all of its
            contents.
        role:
          type: string
          description: The role required to see the folder and all of its contents.
            Can either be member, supervisor, manager, or admin.
        site_ids:
          type: array
          description: The site ids for which the folder is visible, if the folder
            is a Team library folder.
          items:
            type: string
        position_ids:
          type: array
          description: The position ids for which the folder is visible, if the folder
            is a Team library folder.
          items:
            type: string
    DriveSignatureRequestCreate:
      required:
      - drive_file_id
      type: object
      description: A detailed description of the input parameters for creating a signature
        request.
      properties:
        drive_file_id:
          type: string
          description: The identifier of the file to use.
          format: uuid
        member_ids:
          type: array
          description: The identifiers of the members who will need to sign. Between
            one and four members allowed. This parameter is ignored if the file is
            a Team library file, as the file's audience is used instead.
          items:
            type: string
            format: uuid
    ResourceBulkCreate:
      required:
      - resources
      type: object
      description: A detailed description of resources creation input parameters.
      properties:
        resources:
          type: array
          description: The resources.
          items:
            "$ref": "#/components/schemas/ResourceCreate"
    SchedulerProjectionBulkCreate:
      required:
      - scheduler_projections
      type: object
      description: A detailed description of scheduler projections creation input
        parameters.
      properties:
        scheduler_projections:
          type: array
          description: The scheduler projections.
          items:
            "$ref": "#/components/schemas/SchedulerProjectionCreate"
    SchedulerProjectionBulkUpdate:
      required:
      - scheduler_projections
      type: object
      description: A detailed description of scheduler projections update input parameters.
      properties:
        scheduler_projections:
          type: array
          description: The scheduler projections.
          items:
            "$ref": "#/components/schemas/SchedulerProjectionUpdateForBulk"
  responses:
    AvailabilityListRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/AvailabilityListRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    AvailabilityListRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/AvailabilityListRequest"
    BillboardTagSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/BillboardTag"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    BillboardTagSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/BillboardTag"
    BillboardThreadSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/BillboardThread"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    BillboardThreadSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/BillboardThread"
    PositionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Position"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    SiteSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Site"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ClockLogSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/ClockLog"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ClockLogSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/ClockLog"
    CommentSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Comment"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    CommentSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Comment"
    DocumentSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Document"
    LeaveRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaveRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    LeaveRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/LeaveRequest"
    LeaveTypeSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaveType"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    LeaveTypeSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/LeaveType"
    MemberTimeBankTransactionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberTimeBankTransaction"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberTimeBankTransactionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/MemberTimeBankTransaction"
    MemberSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Member"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Member"
    AvailabilityListSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/AvailabilityList"
    AvailabilityListSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/AvailabilityList"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberSiteSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberSite"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberTimeBankSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberTimeBank"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    HRPrivateDataSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
    OpenShiftRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/OpenShiftRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    OpenShiftRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/OpenShiftRequest"
    PayrollSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Payroll"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PayrollSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Payroll"
    PositionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Position"
    PremiumEntrySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/PremiumEntry"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PremiumEntrySuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/PremiumEntry"
    PremiumSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Premium"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PremiumSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Premium"
    PublicationSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Publication"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PublicationSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Publication"
    ResourceSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Resource"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ResourceSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Resource"
    ResourceSuccessManyWithoutPagination:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Resource"
    RoleDefinitionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/RoleDefinition"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    RoleDefinitionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/RoleDefinition"
    SchedulerProjectionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/SchedulerProjection"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    SchedulerProjectionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/SchedulerProjection"
    SchedulerProjectionSuccessManyWithoutPagination:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/SchedulerProjection"
    SessionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Session"
    ShiftSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Shift"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ShiftSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Shift"
    ActivitySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Activity"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    BreakSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Break"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TaskSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Task"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ShiftSuccessManyWithoutPagination:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Shift"
    OpenShiftAudienceMemberSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/OpenShiftAudienceMember"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    SiteSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Site"
    TimeBankSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TimeBank"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TimeBankSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TimeBank"
    TimeEntrySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TimeEntry"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TimeEntrySuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TimeEntry"
    TransferRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TransferRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TransferRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TransferRequest"
    UserSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/User"
    DriveItemSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/DriveItem"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    DriveItemSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/DriveItem"
    DriveSignatureRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/DriveSignatureRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    DriveSignatureRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/DriveSignatureRequest"
    DriveSignatureSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/DriveSignature"
    DriveSignatureSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/DriveSignature"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    HRFieldSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/HRField"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    HRFieldSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/HRField"
    EmptySuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
    NotFoundFailure:
      description: Not found error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    ForbiddenFailure:
      description: Error – Forbidden
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    InputParamsFailure:
      description: Input param error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    QueryParamFailure:
      description: Query param error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    PathParamFailure:
      description: Path param error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
  parameters:
    PathId:
      name: id
      in: path
      description: Unique identifier for the object.
      required: true
      schema:
        type: string
    Date:
      name: date
      in: path
      description: The object active at this date (DD-MM-YYYY).
      required: true
      schema:
        type: string
    QueryPage:
      name: page
      in: query
      description: The page to return.
      schema:
        minimum: 1
        type: integer
        default: 1
    QueryLimit:
      name: limit
      in: query
      description: The limit on the returned page. It cannot exceed the page size.
      schema:
        maximum: 100
        minimum: 0
        type: integer
        default: 50
    QueryPageSize:
      name: page_size
      in: query
      description: The number of records per page.
      schema:
        maximum: 100
        minimum: 50
        type: integer
        default: 50
  requestBodies:
    BillboardTagCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardTagCreate"
    BillboardTagUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardTagUpdate"
    BillboardThreadCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardThreadCreate"
    BillboardThreadUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardThreadUpdate"
    CommentCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/CommentCreate"
    CommentUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/CommentUpdate"
    LeaveRequestCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveRequestCreate"
    LeaveRequestUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveRequestUpdate"
    LeaveTypeCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveTypeCreate"
    LeaveTypeUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveTypeUpdate"
    MemberCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/MemberCreate"
    MemberUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/MemberUpdate"
    PayrollUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PayrollUpdate"
    PositionCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PositionCreate"
    PositionUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PositionUpdate"
    ResourceCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ResourceCreate"
    ResourceUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ResourceUpdate"
    ResourceBulkCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ResourceBulkCreate"
    SchedulerProjectionCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionCreate"
    SchedulerProjectionUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionUpdate"
    SchedulerProjectionBulkCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionBulkCreate"
    SchedulerProjectionUpdateForBulk:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionUpdateForBulk"
    SchedulerProjectionBulkUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionBulkUpdate"
    ShiftCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftCreate"
    ShiftDelete:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftDelete"
    ShiftUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftUpdate"
    ShiftTransfer:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftTransfer"
    SiteCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SiteCreate"
    SiteUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SiteUpdate"
    TimeEntryCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/TimeEntryCreate"
    TimeEntryUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/TimeEntryUpdate"
    UserUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UserUpdate"
    DriveFileCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveFileCreate"
    DriveFileUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveFileUpdate"
    DriveFolderCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveFolderCreate"
    DriveFolderUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveFolderUpdate"
    DriveSignatureRequestCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveSignatureRequestCreate"
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: https://app.agendrix.com/oauth/token
          authorizationUrl: https://app.agendrix.com/oauth/authorize
          scopes:
            read: Read authorization
            write: Write authorization
