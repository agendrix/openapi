---
openapi: 3.0.0
info:
  title: Agendrix API
  description: |2-

    Cette page contient une description détaillée de l'API publique d'Agendrix. Ci-dessous, vous trouverez une section « Pour commencer » résumant les principales étapes  pour effectuer votre premier appel à l'API, ainsi qu'une section OAUth 2.0 décrivant le processus d'authentification nécessaire afin de récupérer un jeton d'accès obligatoire. Vous pouvez également accéder à l'information concernant les en-têtes, les réponses et les erreurs de l'API. Chaque point de terminaison est ensuite décrit, regroupé par leur modèle de base de données. Autorisations, paramètres, réponses, tout ce dont vous avez besoin est là. Profitez-en!

    # Pour commencer
    Ce guide décrit comment effectuer votre premier appel à l'API publique d'Agendrix.

    ## Créer une application
    Créer une application générera vos clés de développement pour un environnement de test où vous pouvez effectuer tous les tests que vous souhaitez, ainsi qu'un environnement de production. Il est possible d'utiliser l'application pour vous-même ou pour vos clients.
      - Depuis la section [Applications](./applications), cliquez sur le bouton « Nouvelle application » et choisissez un nom pour votre nouvelle application.
      - Vous avez maintenant été redirigé vers les informations générales de votre application. Vous pouvez y ajouter une description, une icône et modifier le nom de votre application. Vous pouvez également voir l'état d'approbation de votre application. Celle-ci doit être approuvée avant de pouvoir être utilisée en production.
      - Vous pouvez récupérer vos identifiants de développement et de production dans leurs sections respectives. Vous pouvez régénérer vos secrets, gérer vos adresses URIs de redirection et vos portées.

    Votre Client ID et votre Client Secret sont obligatoires afin de récupérer vos jetons OAuth 2.0. Les adresses URIs de redirection le sont également - au moins un.

    ## Développement
    L'environnement de test est utilisé pour effectuer des essais. Votre application n'a pas besoin d'être approuvée pour utiliser cet environnement. Lorsque vous utilisez la sandbox, n'oubliez pas de changer vos appels en conséquence - sandbox.agendrix.net/oauth au lieu de app.agendrix.com/oauth et api.sandbox.agendrix.net au lieu de api.agendrix.com.

    Pour vous connecter à l'environnement de test, suivez ces étapes:
      - Depuis la section [Applications](./applications), cliquez sur votre application;
      - Accédez à l'onglet « Développement »;
      - Cliquez sur le lien « Se connecter à l'environnement de test ».

    ## Obtenir un jeton d'accès OAuth 2.0
    Vous avez besoin d'un jeton d'accès pour accéder à l'API Agendrix. Le moyen le plus simple de le faire est via [l'aire de jeux](./playground) OAuth 2.0. Il y a également une explication détaillée du processus dans la section OAuth 2.0 ci-dessous.

    ## Faire un appel à l'API
    Maintenant que vous avez un jeton d'accès, vous pouvez l'utiliser pour faire toute sorte d'appels en ajoutant l'en-tête « Autorisation à la requête », à condition que vos identifiants incluent les portées requises pour un point de terminaison précis.

    # Ressources
    Cette section regroupe les différentes ressources téléchargeables de l'API d'Agendrix.

    ## OAS 3
    Un document Open API Specification est une description détaillée et précise d'une API, depuis ses schémas de sécurité jusqu'à ses points de terminaison. Il a de nombreuses utilisations - notre propre [document](https://github.com/agendrix/openapi/blob/main/fr/open_api.yml) génère une grande partie de cette documentation, ainsi que la collection Postman. L'écosystème Open API est riche, mature et est largement utilisé par la communauté. Pour en savoir plus sur l'OAS, cliquez <a href='https://github.com/OAI/OpenAPI-Specification' target='_blank'>ici</a>.

    ## Exemples
    Nous avons également mis en place des <a href='https://github.com/agendrix/public-api-integration-examples' target='_blank'>exemples</a> d'intégration de base avec notre API en Javascript et Ruby.
    Ces exemples comprennent le processus complet OAuth ainsi que la gestion des jetons et bien sûr, la réalisation des requêtes à l'API.

    # OAuth 2.0
    Agendrix utilise le protocole OAuth 2.0 pour l'autorisation. Dès qu'une application est créée, elle peut être utilisée pour demander des jetons d'accès et de rafraîchissement. Le jeton d'accès est valide pour une période de 2 heures et doit être rafraîchi par la suite avec le jeton de rafraîchissement. Le jeton d'accès peut ensuite être utilisé pour effectuer des appels à l'API. Pour une démonstration intéractive du processus, veuillez utiliser l'aire de jeux OAuth 2.0.

    ## Préparer la requête d'autorisation
    La première étape consiste à préparer la requête d'autorisation en utilisant le Client ID et l'un des URIs de redirection définis pour l'application - ou le client. Les portées sont « read » par défaut lorsqu'elles ne sont pas spécifiées.
    ```
    https://app.agendrix.com/oauth/authorize?client_id={CLIENT_ID}&redirect_uri={REDIRECT_URI}&response_type=code&scope=read+write
    ```

    ## Rediriger l'utilisateur
    Une fois que l'utilisateur est redirigé à la requête d'autorisation, il doit donner son approbation pour partager ses données avec l'application et choisir l'organisation pour laquelle il souhaite le faire. La requête d'autorisation est ensuite traitée par le serveur OAuth 2.0.

    ## Gérer la réponse du serveur OAuth 2.0
    Si la requête d'autorisation est valide, le serveur OAuth 2.0 envoie un code d'autorisation à l'URI de redirection spécifié dans la requête. Ce code peut être utilisé pour préparer la requête visant à récupérer les jetons d'accès et de rafraîchissement.

    ## Échanger le code d'autorisation pour des jetons
    La dernière étape consiste simplement à échanger le code d'autorisation reçu contre les jetons. Le Client ID, le Client Secret, l'URI de redirection et le type de contribution - qui est toujours *authorization_code* - doivent être inclus dans la requête. Le serveur OAuth 2.0 envoie ensuite le jeton d'accès et de rafraîchissement à l'URI de redirection défini.
    ```
    curl --request POST 'https://app.agendrix.com/oauth/token' \
    --header 'Content-Type: application/json' \
    --data-raw '{
      "client_id": "{CLIENT_ID}",
      "client_secret": "{CLIENT_SECRET}",
      "redirect_uri": "{REDIRECT_URI}",
      "grant_type": "authorization_code",
      "code": "{AUTORIZATION_CODE}"
    }'
    ```

    ## Échanger le jeton de rafraîchissement pour de nouveaux jetons
    Le jeton d'accès récupéré expirera éventuellement - sa durée de vie est de 2 heures. Plutôt que de faire le processus d'autorisation à nouveau, le jeton de rafraîchissement peut être utilisé pour demander de nouveaux jetons d'accès et de rafraîchissement. Le type de contribution devient *refresh_token* et celui-ci doit être inclus dans la requête avec le Client ID, le Client Secret ainsi que l'URI de redirection. Un sous-ensemble de la portée du jeton d'accès d'origine peut également être inclus dans la requête.
    ```
    curl --request POST 'https://app.agendrix.com/oauth/token' \
    --header 'Content-Type: application/json' \
    --data-raw '{
      "client_id": "{CLIENT_ID}",
      "client_secret": "{CLIENT_SECRET}",
      "redirect_uri": "{REDIRECT_URI}",
      "grant_type": "refresh_token",
      "refresh_token": "{REFRESH_TOKEN}",
    }'
    ```

    Les jetons de rafraîchissement deviennent invalides une fois utilisés, mais n'expirent pas. Vous pouvez répéter le processus de rafraîchissement aussi longtemps que nécessaire.

    # Rôle du propriétaire du jeton
    Les données renvoyées par l'API seront limitées au rôle du propriétaire du jeton. Cela signifie que si un jeton d'accès a été généré à l'aide d'une autorisation d'accès d'un gestionnaire, les données renvoyées par l'API seront limitées aux positions et aux sites gérés par l'utilisateur. Les actions seront également limitées par le rôle du propriétaire. Si vous souhaitez récupérer toutes les données relatives à une organisation, le jeton utilisé doit être généré par un administrateur de l'organisation.

    # En-têtes
    Des en-têtes spécifiques doivent être définis pour interagir avec l'API. Certains en-têtes contiennent également des informations pertinentes.

    ## Requêtes
    Toutes requêtes effectuées vers l'API publique d'Agendrix requièrent deux en-têtes spécifiques. Le premier est l'en-tête Content-Type. Il doit toujours être réglé à *application/json*, car c'est le format pris en charge par l'API. Le deuxième est l'en-tête Authorization, dans lequel vous devez ajouter votre jeton d'accès en tant que *Bearer*. Vous pouvez voir un exemple de requête curl classique dans la section [Effectuer un appel API](./documentation#section/Effectuer-un-appel-API).

    ## Responses
    Toutes les réponses de l'API sont en JSON; alors, elles ont toutes l'en-tête Content-Type réglé sur *application/json*. Dans le cas spécifique où le nombre de requêtes à l'API dépasse le taux [limite](./documentation#section/Taux-limite), les en-têtes RateLimit-Limit, RateLimit-Remaining et RateLimit-Reset sont ajoutés aux en-têtes de la réponse. Ils représentent respectivement le taux limite de requêtes autorisées, le nombre restant de requêtes autorisées - qui est toujours égal à 0 dans ce cas - et le nombre de secondes avant la réinitialisation du taux limite.

    # Taux limite
    Le taux limite actuel de l'API est réglée à 360 requêtes par minute. Tant que cette limite est respectée et que la requête est valide ainsi que son jeton d'accès, elle est traitée par l'API.

    # Actions de masse
    ## Limite du nombre d'éléments
    Le nombre d'éléments limite est actuellement 1000 par requête. Tout comme le taux limite, tant que le nombre d'éléments limite est respecté et que la requête ainsi que son jeton d'accès sont valides, elle est traitée par l'API.

    # Effectuer un appel API
    Une fois que vous avez le jeton d'accès, passer un appel à l'API publique d'Agendrix est plutôt simple. Il s'agit d'une requête HTTP classique. Tout ce que vous avez à faire est d'ajouter les en-têtes requis ainsi que les paramètres de corps et de requête - en fonction du type de requête -, comme vous pouvez le voir dans l'exemple ci-dessous.
    ```
    curl --request POST 'https://api.agendrix.com/v1/positions' \
    --header 'Content-Type: application/json' \
    --header 'Authorization: Bearer {ACCESS_TOKEN}' \
    --data-raw '{
        "name": "A position name"
    }'
    ```

    # Réponses
    Toutes les réponses sont en JSON. La structure des réponses varie légèrement en fonction du contexte.

    ## Réponses paginées
    Les réponses paginées contiennent toujours les champs « données » et « pagination ». Le champ « données » représente les données requises renvoyées par l'API - pour les réponses paginées, il s'agit d'une liste d'objets. Le champ « pagination » représente les métadonnées de pagination de la réponse. Le champ « pagination » contient la valeur de tri, les valeurs de recherche, la taille de la page, la limite de taille de page, les pages actuelle, suivante, précédente, dernière, première et totale, le nombre total d'objets et finalement, si la page demandée est hors de portée.

    ## Autres réponses
    Toutes les autres réponses contiennent toujours les champs « données » et « erreurs ». Le champ « données » représente, encore une fois, les données renvoyées par l'API - mais directement en tant qu'objet cette fois-ci - et sera nul s'il contient des erreurs. Le champ « erreurs » est une liste d'objets décrivant l'erreur avec les champs source, message court et/ou message long. Le champ « erreurs » est nul si la requête est traitée sans erreurs.

    # Erreurs
    ## Erreurs non autorisées - Code 401
    Différents types d'erreurs non autorisées peuvent survenir lors de l'utilisation de l'API :
      - Jeton invalide
      - Jeton expiré
      - Jeton révoqué
      - Jeton inconnu
      - Application non approuvée
      - Opération non autorisée (Votre utilisateur Agendrix ne détient pas les droits pour effectuer l'action)

    ## Erreur interdite - Code 403
    Lorsque le jeton ne possède pas la portée requise pour effectuer l'action.

    ## Erreur de taux limite - Code 429
    Lorsque la limite de fréquence de 180 requêtes par minute n'est pas respectée, une erreur de limite de fréquence est retournée. L'en-tête *RateLimit-Reset* spécifie combien de temps il reste avant qu'une autre demande puisse être effectuée.

    ## Erreur interne du serveur - Code 500
    WLorsqu'une erreur inattendue survient sur le serveur, l'API renvoie une erreur interne du serveur.

    ## Erreur non trouvée - Code 404
    Cela peut se produire pour chaque point de terminaison qui doit récupérer un enregistrement existant - requêtes GET et PUT -, à l'exception d'une mise à jour en masse

    ## Erreur de paramètre de requête - Code 400
    Différents types d'erreurs de paramètres de requête peuvent être déclenchés par l'API :
      - Si un paramètre requis est manquant
      - Si un paramètre a un format incorrect (i.e. dates)
      - Si un paramètre a une valeur incorrecte (i.e. trier ou rechercher des valeurs)

      Cela ne peut se produire que pour les points de terminaison paginés - requêtes GET.

    ## Erreur de paramètres d'entrée - Code 400
    Si un *payload* ne respecte pas le schéma spécifié dans la documentation, l'API retournera une erreur de paramètres d'entrée. Cela ne peut se produire que pour des requêtes POST et PUT.

    ## Erreur de paramètre de route - Code 400
    Ceci peut uniquement se produire pour les points de terminaison qui nécessitent des paramètres inhabituels dans leur route - i.e. la liste de disponibilité d'un membre affichée par date : `/members/{id}/availability_lists/{date}`.

    # Aide
    ## Nous contacter
    N'hésitez pas à nous contacter  si vous ne trouvez pas les informations que vous cherchez dans ce guide : <a href='mailto:api@agendrix.com'>api@agendrix.com</a>.
  version: 1.8.0
servers:
- url: https://api.agendrix.com/v1
security:
- oauth:
  - read
  - write
tags:
- name: AvailabilityListRequests
  description: Opérations sur les demandes de disponibilités
- name: BillboardTags
  description: Opérations sur les catégories du fil d'actualité
- name: BillboardThreads
  description: Opérations sur les publications du fil d'actualité
- name: ClockLogs
  description: Opérations sur les registres de pointage
- name: Comments
  description: Opérations sur les commentaires
- name: DriveSignatureRequests
  description: Opérations sur les demandes de signature
- name: DriveSignatures
  description: Opérations sur les signatures
- name: LeaveRequests
  description: Opérations sur les demandes de congés
- name: HRFields
  description: Opérations sur les champs de ressources humaines
- name: LeaveTypes
  description: Opérations sur les types de congé
- name: MemberTimeBankTransactions
  description: Opérations sur les transactions d'une banque de temps d'un membre
- name: Members
  description: Un membre est l'entité qui relie un utilisateur à une organisation.
    Un utilisateur a un membre par organisation dont il fait partie dans Agendrix.
- name: OpenShiftRequests
  description: Opérations sur les demandes de quart à combler
- name: Payrolls
  description: Opération sur les paies
- name: Positions
  description: Une position représente une position disponible dans l'organisation.
    Un employé peut se voir attribuer plusieurs positions pour chaque succursale dont
    il fait partie.
- name: PremiumEntries
  description: Opération sur les entrées de prime
- name: Premiums
  description: Opération sur les primes
- name: Publications
  description: Opérations sur les publications
- name: Resources
  description: Opération sur les ressources
- name: RoleDefinitions
  description: Opérations sur les définitions de rôles
- name: SchedulerProjections
  description: Opération sur les prévisions du planificateur d'horaires
- name: Session
  description: Opération sur la session
- name: Shifts
  description: 'Les quarts sont les données qui alimentent le planificateur. Il est
    important de noter que le planificateur est composé de quarts brouillons et de
    quarts publiés. Un employé dans Agendrix ne verra que les quarts publiés dans
    son horaire. Lorsqu''un administrateur ou un gestionnaire crée un quart de travail
    futur, il s''agit d''un brouillon. Le quart doit être publié pour que l''employé
    puisse le voir. Les modifications apportées à un quart futur existant créeront
    une nouvelle version du quart en tant que brouillon. Une fois le quart publié,
    il remplacera son ancienne version dans l''horaire de l''employé. Il en va de
    même pour la suppression, le transfert, etc. Les quarts dans le passé sont automatiquement
    publiés. Il est possible d''ajouter ''publish : true'' aux requêtes d''écriture
    pour publier automatiquement un quart après qu''il ait été modifié via l''API.'
- name: Sites
  description: Une succursale représente l'une des succursales de l'organisation.
    Un gestionnaire gère des succursales spécifiques.
- name: TimeBanks
  description: Opérations sur les banques de temps
- name: TimeEntries
  description: Les entrées de temps sont les entrées finalisées d'un employé. Elles
    sont générées par les quarts, les demandes de congé, les pointages, etc.
- name: TransferRequests
  description: Opérations sur les demandes de transfert
- name: Users
  description: Opérations sur les utilisateurs
paths:
  "/availability_list_requests":
    get:
      summary: Obtenir une liste paginée des demandes de disponibilités.
      description: Retourne une liste paginée des demandes de disponibilités.
      tags:
      - AvailabilityListRequests
      operationId: index_availability_list_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[member_id]
        in: query
        description: L'identifiant de l'employé utilisé pour la recherche appliquée
          à la requête.
        schema:
          type: string
      - name: search[created_by]
        in: query
        description: L'identifiant du créateur utilisé pour la recherche appliquée
          à la requête.
        schema:
          type: string
      - name: search[availability_list_id]
        in: query
        description: L'identifiant de la liste de disponibilités utilisé pour la recherche
          appliquée à la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/availability_list_requests/{id}":
    get:
      summary: Obtenir une seule demande de disponibilités.
      description: Retourne la demande de disponibilités associée à l'identifiant
        donné.
      tags:
      - AvailabilityListRequests
      operationId: show_availability_list_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_tags":
    get:
      summary: Obtenir les catégories paginées du fil d'actualité.
      description: Retourne une liste paginée de catégories du fil d'actulités.
      tags:
      - BillboardTags
      operationId: index_billboard_tag
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer une catégorie du fil d'actualité.
      description: Créer une catégorie du fil d'actualité à partir du corps de la
        requête.
      tags:
      - BillboardTags
      operationId: create_billboard_tag
      requestBody:
        "$ref": "#/components/requestBodies/BillboardTagCreate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/billboard_tags/{id}":
    get:
      summary: Obtenir une catégorie du fil d'actualité.
      description: Retourne une catégorie du fil d'actualité par identifiant.
      tags:
      - BillboardTags
      operationId: show_billboard_tag
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Modifier une catégorie du fil d'actualité.
      description: Modifier une catégorie du fil d'actualité à partir du corps de
        la requête.
      tags:
      - BillboardTags
      operationId: update_billboard_tag
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/BillboardTagUpdate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer une catégorie du fil d'actualité.
      description: Supprime une catégorie du fil d'actulités par identifiant.
      tags:
      - BillboardTags
      operationId: delete_billboard_tag
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_threads":
    get:
      summary: Obtenir les publications paginées du fil d'actualité.
      description: Retourne la liste paginée des publications du fil d'actualité.
      tags:
      - BillboardThreads
      operationId: index_billboard_thread
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[start_date]
        in: query
        description: Trie la requête par la valeur 'start_date', qui doit être 'asc'
          ou 'desc', insensible à la case.
        schema:
          type: string
      - name: sort[end_date]
        in: query
        description: Trie la requête par la valeur 'end_date', qui doit être 'asc'
          ou 'desc', insensible à la case.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer une publication du fil d'actualité.
      description: Créer une publication du fil d'actualité à partir du corps de la
        requête.
      tags:
      - BillboardThreads
      operationId: create_billboard_thread
      requestBody:
        "$ref": "#/components/requestBodies/BillboardThreadCreate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/billboard_threads/{id}":
    get:
      summary: Obtenir une publication d'un fil d'actualité.
      description: Retourne une publication d'un fil d'actualité par identifiant.
      tags:
      - BillboardThreads
      operationId: show_billboard_thread
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Modifier une publication du fil d'actualité.
      description: Modifier une publication du fil d'actualité à partir du corps de
        la requête.
      tags:
      - BillboardThreads
      operationId: update_billboard_thread
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/BillboardThreadUpdate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer une publication.
      description: Supprime une publication par identifiant.
      tags:
      - BillboardThreads
      operationId: delete_billboard_thread
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_threads/{id}/positions":
    get:
      summary: Obtenir les positions paginées.
      description: Retourne les positions paginées.
      tags:
      - BillboardThreads
      operationId: index_billboard_thread_positions
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[name]
        in: query
        description: Trie la requête avec le nom de la position, il doit être 'asc'
          ou 'desc', et est insensible à la case.
        schema:
          type: string
      - name: sort[rank]
        in: query
        description: Trie la requête avec le rang de la position, il doit être 'asc'
          ou 'desc', et est insensible à la case.
        schema:
          type: string
      - name: search[name]
        in: query
        description: Le nom appliquer dans la requête.
        schema:
          type: string
      - name: search[rank]
        in: query
        description: Le rang utiliser dans la requête.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Inclure les positions archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclue les positions archivées dans le résultat paginé.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/billboard_threads/{id}/sites":
    get:
      summary: Obtenir les succursales paginées.
      description: Retourne les succursales paginées.
      tags:
      - BillboardThreads
      operationId: index_billboard_thread_sites
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Inclure les succursales archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclure les succursales archivées dans le résultat paginé.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/billboard_threads/{id}/tags":
    get:
      summary: Obtenir les catégories paginées du fil d'actualité.
      description: Retourne une liste paginée de catégories du fil d'actulités.
      tags:
      - BillboardThreads
      operationId: index_billboard_thread_billboard_tags
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/clock_logs":
    get:
      summary: Obtenir les registres de pointage paginés.
      description: Retourne les registres de pointage paginés.
      tags:
      - ClockLogs
      operationId: index_clock_log
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[created_at]
        in: query
        description: La date et l'heure de création.
        schema:
          type: string
      - name: search[shift_id]
        in: query
        description: L'identifiant de quart utilisé comme filtre sur la requête.
        schema:
          type: string
      - name: search[member_id]
        in: query
        description: L'identifiant du membre utilisé comme filtre sur la requête.
        schema:
          type: string
      - name: search[job_site_id]
        in: query
        description: L'identifiant du lieu de travail utilisé comme filtre sur la
          requête.
        schema:
          type: string
      - name: search[success]
        in: query
        description: Le statut de réussite - vrai ou faux - utilisé comme filtre sur
          la requête.
        schema:
          type: string
      - name: search[has_questions]
        in: query
        description: Le status de 'has_question' - vrai ou faux - utilisé comme filtre
          sur la requête.
        schema:
          type: string
      - name: search[created_since]
        in: query
        description: La date de création utilisée comme filtre à la requête.
        schema:
          type: string
      - name: search[created_until]
        in: query
        description: La date limite utilisée comme filtre à la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ClockLogSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/clock_logs/{id}":
    get:
      summary: Obtenir un registre de pointage.
      description: Retourne le registre de pointage lié à l'identifiant.
      tags:
      - ClockLogs
      operationId: show_clock_log
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ClockLogSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/comments":
    get:
      summary: Obtenir les commentaires paginés.
      description: Retourne les commentaires paginés.
      tags:
      - Comments
      operationId: index_comment
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[commentable_id]
        in: query
        description: L'identifiant de l'objet commenté utilisé comme filtre sur la
          requête.
        schema:
          type: string
      - name: search[commentable_type]
        in: query
        description: Le type d'objet commenté utilisé comme filtre sur la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer un commentaire.
      description: Créer un commentaire à partir du corps de la requête.
      tags:
      - Comments
      operationId: create_comment
      requestBody:
        "$ref": "#/components/requestBodies/CommentCreate"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/comments/{id}":
    get:
      summary: Obtenir un commentaire.
      description: Retourne le commentaire lié à l'identifiant.
      tags:
      - Comments
      operationId: show_comment
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Modifier un commentaire.
      description: Modifier un commentaire à partir du corps de la requête.
      tags:
      - Comments
      operationId: update_comment
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/CommentUpdate"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer un commentaire
      description: Supprime le commentaire lié à l'identifiant.
      tags:
      - Comments
      operationId: delete_comment
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/documents/{id}":
    get:
      summary: Obtenir un document.
      description: Retourne le document relié à l'identifiant.
      tags:
      - Documents
      operationId: show_document
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DocumentSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests/{id}/approve":
    put:
      summary: Approuver une demande de congé
      description: Change le statut de la demande pour approuvée
      tags:
      - LeaveRequests
      operationId: approve_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests/{id}/cancel":
    put:
      summary: Annuler une demande de congé
      description: Change le statut de la demande pour annulée
      tags:
      - LeaveRequests
      operationId: cancel_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests":
    get:
      summary: Obtenir les demandes de congé paginée.
      description: Retourne les demandes de congé paginée.
      tags:
      - LeaveRequests
      operationId: index_leave_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[member_id]
        in: query
        description: L'identifiant d'un membre utilisé comme filtre sur la requête.
        schema:
          type: string
      - name: search[created_by]
        in: query
        description: L'identifiant du créateur de la requête utilisé comme filtre
          sur la requête.
        schema:
          type: string
      - name: search[status]
        in: query
        description: Le statut de la requête. Les valeurs valides sont 'approved',
          'canceled', 'declined' and 'pending'.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer une demande de congé.
      description: Créer une demande de congé à partir du corps de la requête
      tags:
      - LeaveRequests
      operationId: create_leave_request
      requestBody:
        "$ref": "#/components/requestBodies/LeaveRequestCreate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_requests/{id}/decline":
    put:
      summary: Décliner une demande de congé en attente
      description: Change le statut de la demande pour déclinée
      tags:
      - LeaveRequests
      operationId: decline_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests/{id}":
    get:
      summary: Obtenir une demande de congé.
      description: Retourne la demande de congé lié à l'identifiant.
      tags:
      - LeaveRequests
      operationId: show_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Modifier une demande de congé.
      description: Modifier une demande de congé à partir du corps de la requête.
      tags:
      - LeaveRequests
      operationId: update_leave_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/LeaveRequestUpdate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_types":
    get:
      summary: Obtenir les types de congé paginé.
      description: Retourne les types de congé paginé.
      tags:
      - LeaveTypes
      operationId: index_leave_type
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer un type de congé.
      description: Créer un type de congé à partir du corps de la requête.
      tags:
      - LeaveTypes
      operationId: create_leave_type
      requestBody:
        "$ref": "#/components/requestBodies/LeaveTypeCreate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_types/{id}":
    get:
      summary: Obtenir un type de congé.
      description: Retourne le type de congé lié à l'identifiant.
      tags:
      - LeaveTypes
      operationId: show_leave_type
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Modifier un type de congé.
      description: Modifier un type de congé à partir du corps de la requête.
      tags:
      - LeaveTypes
      operationId: update_leave_type
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/LeaveTypeUpdate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer un type de congé.
      description: Supprime le type de congé lié à l'identifiant.
      tags:
      - LeaveTypes
      operationId: delete_leave_type
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/member_time_bank_transactions":
    get:
      summary: Obtenir les transactions de banques d'heures paginées d'un membre.
      description: Retourne les transactions de banque de temps paginées d'un membre.
      tags:
      - MemberTimeBankTransactions
      operationId: index_member_time_bank_transaction
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[date]
        in: query
        description: Trie la requête par la valeur de la date, qui doit être 'asc'
          ou 'desc', insensible à la case.
        schema:
          type: string
      - name: search[member_id]
        in: query
        description: Le 'member_id' utilisé pour la recherche appliquée sur la requête.
        schema:
          type: string
      - name: search[member_time_bank_id]
        in: query
        description: Le 'member_time_bank_id' utilisé pour la recherche appliquée
          sur la requête.
        schema:
          type: string
      - name: search[from]
        in: query
        description: La date de départ utilisée pour la recherche appliquée sur la
          requête.
        schema:
          type: string
      - name: search[to]
        in: query
        description: Le date de fin utilisée pour la recherche appliquée sur la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankTransactionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/member_time_bank_transactions/{id}":
    get:
      summary: Obtenir une transaction d'une banque de temps d'un membre.
      description: Retourne l'identifiant unique d'une transaction de banque d'heure
      tags:
      - MemberTimeBankTransactions
      operationId: show_member_time_bank_transaction
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankTransactionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members":
    get:
      summary: Obtenir les membres paginés.
      description: Retourne les membres paginés.
      tags:
      - Members
      operationId: index_member
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[main_position_id]
        in: query
        description: Filtre selon l'identifiant unique du la position princiaple.
        schema:
          type: string
      - name: search[main_site_id]
        in: query
        description: Filtre selon l'identifiant unique du succursale principale.
        schema:
          type: string
      - name: search[visible]
        in: query
        description: Filtre selon la valeur 'visible'.
        schema:
          type: string
      - name: search[identification_number]
        in: query
        description: Le paramètre 'identification_number' appliqué afin de filtrer
          la requête.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Inclure les membres archivés dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclue les membres actifs du résultat paginé.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer un membre.
      description: Créer un membre à partir de paramètres.
      tags:
      - Members
      operationId: create_member
      requestBody:
        "$ref": "#/components/requestBodies/MemberCreate"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/members/{id}":
    get:
      summary: Obtenir un membre.
      description: Retourne un membre selon l'identifiant unique.
      tags:
      - Members
      operationId: show_member
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Mettre à jour un membre.
      description: Update à jour un membre à partir de paramètres.
      tags:
      - Members
      operationId: update_member
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/MemberUpdate"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer un membre.
      description: Supprime un membre selon l'identificateur unique.
      tags:
      - Members
      operationId: delete_member
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/restore":
    put:
      summary: Restaurer un membre supprimé.
      description: Restaure un membre selon l'identificateur unique.
      tags:
      - Members
      operationId: restore_member
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/availability_lists/{date}":
    get:
      summary: Obtenir une seule liste de disponibilités.
      description: Retourne une liste de disponibilités approuvées à la date spécifiée.
      tags:
      - Members
      operationId: show_availability_list
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/Date"
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListSuccessOne"
        400:
          "$ref": "#/components/responses/PathParamFailure"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/availability_lists":
    get:
      summary: Obtenir une liste paginée des listes de disponibilités.
      description: Retourne une liste paginée des listes de disponibilités.
      tags:
      - Members
      operationId: index_member_availability_lists
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[status]
        in: query
        description: L'état de la liste utilisé pour la recherche appliquée à la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/member_sites":
    get:
      summary: Obtenir les succursales paginées du membre.
      description: Retourne les succursales paginées du membre.
      tags:
      - Members
      operationId: index_member_member_sites
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[role]
        in: query
        description: Le rôle utilisé pour la recherche sur la requête. Doit être 'member',
          'supervisor' ou 'manager'.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberSiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/member_time_banks":
    get:
      summary: Obtenir les banque de temps de membre paginées.
      description: Retourne les banque de temps de membre paginées.
      tags:
      - Members
      operationId: index_member_member_time_banks
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[time_bank_id]
        in: query
        description: Le 'time_bank_id' utilisé pour la recherche appliquée sur la
          requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/positions":
    get:
      summary: Obtenir les positions paginées.
      description: Retourne les positions paginées.
      tags:
      - Members
      operationId: index_member_positions
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[name]
        in: query
        description: Trie la requête avec le nom de la position, il doit être 'asc'
          ou 'desc', et est insensible à la case.
        schema:
          type: string
      - name: sort[rank]
        in: query
        description: Trie la requête avec le rang de la position, il doit être 'asc'
          ou 'desc', et est insensible à la case.
        schema:
          type: string
      - name: search[name]
        in: query
        description: Le nom appliquer dans la requête.
        schema:
          type: string
      - name: search[rank]
        in: query
        description: Le rang utiliser dans la requête.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Inclure les positions archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclue les positions archivées dans le résultat paginé.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/hr/private_data":
    get:
      summary: Obtenir les données privées de ressources humaines.
      description: Retourne les données privées de ressources humaines du membre.
      tags:
      - Members
      operationId: show_member_hr_private_data
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/HRPrivateDataSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/sites":
    get:
      summary: Obtenir les succursales paginées.
      description: Retourne les succursales paginées.
      tags:
      - Members
      operationId: index_member_sites
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Inclure les succursales archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclure les succursales archivées dans le résultat paginé.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/open_shift_requests/{id}/approve":
    put:
      summary: Approuver une demande de quart à combler
      description: Assigne le quart à combler à un ou plusieurs employés volontaires.
      tags:
      - OpenShiftRequests
      operationId: approve_open_shift_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/open_shift_requests/{id}/cancel":
    put:
      summary: Annuler une demande de quart à combler
      description: Annule une demande de quart à combler et supprime le quart correspondant.
      tags:
      - OpenShiftRequests
      operationId: cancel_open_shift_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/open_shift_requests":
    get:
      summary: Obtenir les demandes de quart à combler paginées.
      description: Retourne les demandes de quart à combler paginées.
      tags:
      - OpenShiftRequests
      operationId: index_open_shift_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[shift_id]
        in: query
        description: L'identifiant d'un quart à combler utilisé comme filte sur la
          requête.
        schema:
          type: string
      - name: search[with_volunteers]
        in: query
        description: Lorsque 'true' est envoyé, seules les demandes avec des volontaires
          seront retournées.
        schema:
          type: string
      - name: search[status]
        in: query
        description: Le statut de la requête. Les valeurs valides sont 'approved',
          'canceled', 'expired' et 'pending'.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/open_shift_requests/{id}":
    get:
      summary: Obtenir une demande de quart à combler.
      description: Retourne la demande de quart à combler lié à l'identifiant.
      tags:
      - OpenShiftRequests
      operationId: show_open_shift_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/payrolls":
    get:
      summary: Obtenir la paie paginée.
      description: Retourne la paie paginée.
      tags:
      - Payrolls
      operationId: index_payroll
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[start_at]
        in: query
        description: Trie la requête par le paramètre 'start_at', il doit être 'asc'
          ou 'desc', et est insensible à la case.
        schema:
          type: string
      - name: sort[end_at]
        in: query
        description: Trie la requête par le paramètre 'end_at', il doit être 'asc'
          ou 'desc', et est insensible au majuscule
        schema:
          type: string
      - name: search[status]
        in: query
        description: Le status appliqué pour filtrer la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/payrolls/{id}":
    get:
      summary: Obtenir une paie.
      description: Retourne la paie correspondante à l'identifiant unique.
      tags:
      - Payrolls
      operationId: show_payroll
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Met à jour la paie.
      description: Met à jour la paie depuis une requête.
      tags:
      - Payrolls
      operationId: update_payroll
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/PayrollUpdate"
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/positions":
    get:
      summary: Obtenir les positions paginées.
      description: Retourne les positions paginées.
      tags:
      - Positions
      operationId: index_position
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[name]
        in: query
        description: Trie la requête avec le nom de la position, il doit être 'asc'
          ou 'desc', et est insensible à la case.
        schema:
          type: string
      - name: sort[rank]
        in: query
        description: Trie la requête avec le rang de la position, il doit être 'asc'
          ou 'desc', et est insensible à la case.
        schema:
          type: string
      - name: search[name]
        in: query
        description: Le nom appliquer dans la requête.
        schema:
          type: string
      - name: search[rank]
        in: query
        description: Le rang utiliser dans la requête.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Inclure les positions archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclue les positions archivées dans le résultat paginé.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créé une position.
      description: Créer une position depuis une requête.
      tags:
      - Positions
      operationId: create_position
      requestBody:
        "$ref": "#/components/requestBodies/PositionCreate"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/positions/{id}":
    get:
      summary: Obtenir une position.
      description: Retourne la position correspondante à l'identifiant unique.
      tags:
      - Positions
      operationId: show_position
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Mettre a jour une position.
      description: Mettre a jour une position depuis une requête.
      tags:
      - Positions
      operationId: update_position
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/PositionUpdate"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer une position.
      description: Supprime la position correspondante à l'identifiant unique.
      tags:
      - Positions
      operationId: delete_position
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/premium_entries":
    get:
      summary: Obtenir les enregistrements des primes paginés.
      description: Retourne les résultats des primes paginés.
      tags:
      - PremiumEntries
      operationId: index_premium_entry
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[entry_id]
        in: query
        description: Identifiant unique de la prime, utilisé afin de filtré la requête.
        schema:
          type: string
      - name: search[entry_type]
        in: query
        description: Type de la prime, utilisé afin de filtré la requête.
        schema:
          type: string
      - name: search[created_by_id]
        in: query
        description: Identifiant unique du créateur de la prime, utilisé afin de filtré
          la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PremiumEntrySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/premium_entries/{id}":
    get:
      summary: Obtenir l'enregistrement d'une prime
      description: Retourne l'enregistrement d'une prime selon l'identifiant unique.
      tags:
      - PremiumEntries
      operationId: show_premium_entry
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PremiumEntrySuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/premiums":
    get:
      summary: Obtenir les primes paginées.
      description: Retournes les primes paginées.
      tags:
      - Premiums
      operationId: index_premium
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[only_time_offs]
        in: query
        description: La valeur only_time_offs utilisée afin de filtrer la requête.
        schema:
          type: string
      - name: search[compute_manually]
        in: query
        description: La valeur compute_manually utilisée afin de filtrer la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PremiumSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/premiums/{id}":
    get:
      summary: Obtenir une prime.
      description: Retourne la prime correspondant à l'identifiant unique.
      tags:
      - Premiums
      operationId: show_premium
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PremiumSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/publications":
    get:
      summary: Obtenir les publications paginées.
      description: Retourne les publications paginées.
      tags:
      - Publications
      operationId: index_publication
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/PublicationSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/publications/{id}":
    get:
      summary: Obtenir une publication.
      description: Retourne une publications selon l'identifiant unique.
      tags:
      - Publications
      operationId: show_publication
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PublicationSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/resources":
    get:
      summary: Obtenir les ressources paginées.
      description: Retourne les ressources paginées.
      tags:
      - Resources
      operationId: index_resource
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Inclure les ressources archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclus les ressources archivé dans le résultat paginé.
        schema:
          type: string
      - name: search[name]
        in: query
        description: Le nom utilisé pour filtrer la requête.
        schema:
          type: string
      - name: search[no]
        in: query
        description: Le court identifiant unique utilisé pour filtrer la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Création d'une ressource.
      description: Création d'une ressources depuis les paramètres.
      tags:
      - Resources
      operationId: create_resource
      requestBody:
        "$ref": "#/components/requestBodies/ResourceCreate"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/resources/{id}":
    get:
      summary: Obtenir une ressource.
      description: Retourne la ressource avec l'identifiant unique correspondant.
      tags:
      - Resources
      operationId: show_resource
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Mise à jour d'une ressource'.
      description: MMise à jour d'une ressources depuis les paramètres.
      tags:
      - Resources
      operationId: update_resource
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ResourceUpdate"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer la ressource.
      description: Supprime la ressource avec l'identifiant unique correspondant.
      tags:
      - Resources
      operationId: delete_resource
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/resources/{id}/restore":
    put:
      summary: Restaurer une ressource.
      description: Restaure une ressource archivé.
      tags:
      - Resources
      operationId: restore_resource
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/resources/bulk":
    post:
      summary: Création de plusieurs ressources.
      description: Création de plusieurs ressources depuis les paramètres.
      tags:
      - Resources
      operationId: bulk_create_resource
      requestBody:
        "$ref": "#/components/requestBodies/ResourceBulkCreate"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessManyWithoutPagination"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/role_definitions":
    get:
      summary: Obtenir les définitions de rôles paginées.
      description: Retourne les définitions de rôles paginées.
      tags:
      - RoleDefinitions
      operationId: index_role_definition
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/RoleDefinitionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/role_definitions/{id}":
    get:
      summary: Obtenir une définition de rôle.
      description: Retourne une définition de rôle selon l'identifiant unique.
      tags:
      - RoleDefinitions
      operationId: show_role_definition
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/RoleDefinitionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/scheduler_projections":
    get:
      summary: Obtenir les prévisions du planificateur d'horaire paginées.
      description: Retourne les prévisions du planificateur d'horaire paginées.
      tags:
      - SchedulerProjections
      operationId: index_scheduler_projection
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[date]
        in: query
        description: Trie la requête avec la date, elle doit être 'asc' ou 'desc',
          et est insensible à la case.
        schema:
          type: string
      - name: search[site_id]
        in: query
        description: L'identificateur unique appliqué afin de filtrer la requête.
        schema:
          type: string
      - name: search[position_id]
        in: query
        description: Le paramètre 'position_id' appliqué afin de filtrer la requête.
        schema:
          type: string
      - name: search[integration_name]
        in: query
        description: Le paramètre 'integration_name' appliqué afin de filtrer la requête.
        schema:
          type: string
      - name: search[from]
        in: query
        description: La date de début appliquée afin de filtrer la requête.
        schema:
          type: string
      - name: search[to]
        in: query
        description: La date de fin appliquée afin de filtrer la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer une prévision du planificateur d'horaires.
      description: Créer une prévision du planificateur à partir de paramètres.
      tags:
      - SchedulerProjections
      operationId: create_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionCreate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/scheduler_projections/{id}":
    get:
      summary: Obtenir une prévision du planificateur d'horaires.
      description: Retourne une prévision du planificateur d'horaires selon l'identificateur
        unique.
      tags:
      - SchedulerProjections
      operationId: show_scheduler_projection
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Mettre à jour une prévision du planificateur d'horaires.
      description: Mettre à jour une prévision du planificateur à partir de paramètres.
      tags:
      - SchedulerProjections
      operationId: update_scheduler_projection
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer une prévision du planificateur d'horaires.
      description: Supprime une prévision du planificateur d'horaires selon l'identificateur
        unique.
      tags:
      - SchedulerProjections
      operationId: delete_scheduler_projection
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/scheduler_projections/bulk":
    put:
      summary: Mettre à jour plusieurs prévisions du planificateur d'horaires.
      description: Mettre à jour plusieurs prévisions du planificateur à partir de
        paramètres.
      tags:
      - SchedulerProjections
      operationId: bulk_update_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionBulkUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessManyWithoutPagination"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    post:
      summary: Créer plusieurs prévisions du planificateur d'horaires.
      description: Créer plusieurs prévisions du planificateur à partir de paramètres.
      tags:
      - SchedulerProjections
      operationId: bulk_create_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionBulkCreate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessManyWithoutPagination"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/session":
    get:
      summary: Obtenir une session
      description: Retourne les informations de votre utilisateur, membre et organization.
      tags:
      - Session
      operationId: show_session
      responses:
        200:
          "$ref": "#/components/responses/SessionSuccessOne"
  "/shifts":
    get:
      summary: Obtenir des quarts de travail.
      description: Retourne les quarts de travail paginés.
      tags:
      - Shifts
      operationId: index_shift
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[start_at]
        in: query
        description: Trie la requête avec la date de début, elle doit être 'asc' ou
          'desc', et est insensible à la case.
        schema:
          type: string
      - name: sort[end_at]
        in: query
        description: Trie la requête avec la date de fin, elle doit être 'asc' ou
          'desc', et est insensible à la case.
        schema:
          type: string
      - name: sort[updated_at]
        in: query
        description: La date et l'heure de la dernière modification.
        schema:
          type: string
      - name: search[member_id]
        in: query
        description: Identificateur unique du membre, utilisé afin de filtrer la requête.
        schema:
          type: string
      - name: search[position_id]
        in: query
        description: Identificateur unique de la position, utilisé afin de filtrer
          la requête.
        schema:
          type: string
      - name: search[site_id]
        in: query
        description: Identificateur unique du succursale, utilisé afin de filtrer
          la requête.
        schema:
          type: string
      - name: search[status]
        in: query
        description: La status utilisé afin de filtrer la requête. Doit être'draft'
          ou 'published'.
        schema:
          type: string
      - name: search[from]
        in: query
        description: La date de début utilisée afin de filtrer la requête. Requis
          si 'updated_since' et 'updated_until' ne sont pas fournis.
        schema:
          type: string
      - name: search[to]
        in: query
        description: La date et l'heure de fin utilisées afin de filtrer la requête.
          L'intervalle maximal entre 'from' et 'to' doit être égal à ou plus petit
          que 31 jours. Tous les quarts qui chevauchent cet intervalle seront retournés.
          Requis si updated_since et updated_until ne sont pas fournis.
        schema:
          type: string
      - name: search[updated_since]
        in: query
        description: La valeur 'updated_since', la date et heure utilisé afin de filtrer
          la requête.
        schema:
          type: string
      - name: search[updated_until]
        in: query
        description: La valeur 'updated_until', la date et heure utilisé afin de filtrer
          la requête.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Inclure les quarts de travail archivés dans le résultat paginé.
          Utilisable seulement si les filtres 'updated_since' et 'updated_until' sont
          présents.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer un quart de travail.
      description: Créer un quart de travail à partir de paramètres.
      tags:
      - Shifts
      operationId: create_shift
      requestBody:
        "$ref": "#/components/requestBodies/ShiftCreate"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/shifts/{id}":
    get:
      summary: Obtenir un quart de travail.
      description: Retourne un quart de travail selon l'identificateur unique.
      tags:
      - Shifts
      operationId: show_shift
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Mettre à jour un quart de travail.
      description: Mettre à jour un quart de travail à partir de paramètres.
      tags:
      - Shifts
      operationId: update_shift
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ShiftUpdate"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer un quart de travail.
      description: Supprime le quart de travail avec l'identifiant unique correspondant.
      tags:
      - Shifts
      operationId: delete_shift
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ShiftDelete"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/shifts/{id}/transfer":
    put:
      summary: Transférer un quart.
      description: Transférer à un membre et/ou à une date spécifique. Peut aussi
        transférer un quart assigné en quart à combler en laissant le member_id vide.
      tags:
      - Shifts
      operationId: transfer_shift
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ShiftTransfer"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/shifts/{id}/toggle_tasks_completion":
    put:
      summary: Faire basculer l'état de complétion d'une tâche.
      description: Faire basculer l'état de complétion d'une tâche pour un quart (si
        le plan Plus est activé).
      tags:
      - ShiftTasks
      operationId: toggle_shift_tasks
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/shifts/{id}/activities":
    get:
      summary: Obtenir une liste paginée des activités.
      description: Retourne une liste paginée des activités.
      tags:
      - Shifts
      operationId: index_shift_activities
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[created_at]
        in: query
        description: Trie la requête en fonction de la valeur de created_at, laquelle
          doit être 'asc' ou 'desc', insensible à la case.
        schema:
          type: string
      - name: search[trackable_id]
        in: query
        description: L'identifiant de l'objet associé à l'activité utilisé pour la
          recherche appliquée à la requête.
        schema:
          type: string
      - name: search[trackable_type]
        in: query
        description: Le type de l'objet associé à l'activité utilisé pour la recherche
          appliquée à la requête.
        schema:
          type: string
      - name: search[owner_id]
        in: query
        description: L'identifiant du propriétaire de l'activité utilisé pour la recherche
          appliquée à la requête.
        schema:
          type: string
      - name: search[owner_type]
        in: query
        description: Le type du propriétaire de l'activité utilisé pour la recherche
          appliquée à la requête.
        schema:
          type: string
      - name: search[key]
        in: query
        description: La clé utilisée pour la recherche appliquée à la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ActivitySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/breaks":
    get:
      summary: Obtenir les pauses paginées.
      description: Retourne la liste paginée des pauses.
      tags:
      - Shifts
      operationId: index_shift_breaks
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BreakSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/tasks":
    get:
      summary: Obtenir une liste paginée des tâches (si le plan Plus est activé).
      description: Retourne une liste paginée des tâches.
      tags:
      - Shifts
      operationId: index_shift_tasks
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/TaskSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/premium_entries":
    get:
      summary: Obtenir les enregistrements des primes paginés.
      description: Retourne les résultats des primes paginés.
      tags:
      - Shifts
      operationId: index_shift_premium_entries
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[entry_id]
        in: query
        description: Identifiant unique de la prime, utilisé afin de filtré la requête.
        schema:
          type: string
      - name: search[entry_type]
        in: query
        description: Type de la prime, utilisé afin de filtré la requête.
        schema:
          type: string
      - name: search[created_by_id]
        in: query
        description: Identifiant unique du créateur de la prime, utilisé afin de filtré
          la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/PremiumEntrySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/resources":
    get:
      summary: Obtenir les ressources paginées.
      description: Retourne les ressources paginées.
      tags:
      - Shifts
      operationId: index_shift_resources
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Inclure les ressources archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclus les ressources archivé dans le résultat paginé.
        schema:
          type: string
      - name: search[name]
        in: query
        description: Le nom utilisé pour filtrer la requête.
        schema:
          type: string
      - name: search[no]
        in: query
        description: Le court identifiant unique utilisé pour filtrer la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/versions":
    get:
      summary: Obtenir plusieurs quarts.
      description: Retourne le quart lié à l'identifiant.
      tags:
      - Shifts
      operationId: show_shift_shifts
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessManyWithoutPagination"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/shifts/{id}/audience_members":
    get:
      summary: Obtenir une liste paginée des membres de l'audience d'un quart à combler.
      description: Retourne une liste paginée des membres de l'audience d'un quart
        à combler.
      tags:
      - Shifts
      operationId: index_shift_open_shift_audience_members
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[query]
        in: query
        description: Termes de recherche afin de filtrer la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/OpenShiftAudienceMemberSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/sites":
    get:
      summary: Obtenir les succursales paginées.
      description: Retourne les succursales paginées.
      tags:
      - Sites
      operationId: index_site
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Inclure les succursales archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclure les succursales archivées dans le résultat paginé.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer une succursale.
      description: Créer une succursale à partir de paramètres.
      tags:
      - Sites
      operationId: create_site
      requestBody:
        "$ref": "#/components/requestBodies/SiteCreate"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/sites/{id}":
    get:
      summary: Obtenir une succursale.
      description: Retourne la succursale avec l'identifiant unique correspondant.
      tags:
      - Sites
      operationId: show_site
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Mettre à jour une succursale.
      description: Mettre à jour une succursale à partir de paramètres.
      tags:
      - Sites
      operationId: update_site
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/SiteUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer une succursale.
      description: Supprime la succursale associée à cet identifiant unique.
      tags:
      - Sites
      operationId: delete_site
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/time_banks":
    get:
      summary: Obetnir les banques de temps paginées.
      description: Retourne des banques de temps paginées.
      tags:
      - TimeBanks
      operationId: index_time_bank
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[name]
        in: query
        description: Trie la requête par le champs 'name', doit être 'asc' ou 'desc',
          insensible à la case.
        schema:
          type: string
      - name: search[name]
        in: query
        description: Filtre selon le nom.
        schema:
          type: string
      - name: search[time_off]
        in: query
        description: Renvoie uniquement les banques de temps de congés si 'true',
          les exclut si 'false'.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/TimeBankSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/time_banks/{id}":
    get:
      summary: Obtenir une banque de temps.
      description: Retourne une banque de temps.
      tags:
      - TimeBanks
      operationId: show_time_bank
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TimeBankSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/time_entries":
    get:
      summary: Obtenir des entrées de temps.
      description: Retourne des entrées de temps paginées.
      tags:
      - TimeEntries
      operationId: index_time_entry
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[start_at]
        in: query
        description: Trie la requête par la valeur start_at, qui doit être 'asc' ou
          'desc', insensible à la case.
        schema:
          type: string
      - name: sort[end_at]
        in: query
        description: Trie la requête par la valeur end_at, qui doit être 'asc' ou
          'desc', insensible à la case.
        schema:
          type: string
      - name: sort[date]
        in: query
        description: Trie la requête par la valeur de date, qui doit être 'asc' ou
          'desc', insensible à la case.
        schema:
          type: string
      - name: sort[updated_at]
        in: query
        description: La date et l'heure de la dernière modification.
        schema:
          type: string
      - name: search[time_off]
        in: query
        description: Filtre selon le statut time_off - true ou false.
        schema:
          type: string
      - name: search[position_id]
        in: query
        description: Filtre selon la position.
        schema:
          type: string
      - name: search[site_id]
        in: query
        description: Filtre selon la succursale.
        schema:
          type: string
      - name: search[member_id]
        in: query
        description: Filtre selon l'employé
        schema:
          type: string
      - name: search[approved]
        in: query
        description: Filtre selon le status d'approbation - true ou false.
        schema:
          type: string
      - name: search[from]
        in: query
        description: Filtre les résultats selon la date (à partir de). Requis si 'updated_since',
          'updated_until' ou 'member_id' ne sont pas fournis.
        schema:
          type: string
      - name: search[to]
        in: query
        description: Filtre les résultats selon la date (jusqu'à). L'intervalle maximal
          entre 'from' et 'to' doit être égal à ou plus petit que 31 jours. Requis
          si 'updated_since', 'updated_until' ou 'member_id' ne sont pas fournis.
        schema:
          type: string
      - name: search[updated_since]
        in: query
        description: Filtre les résultats selon la date de mise à jour (à partir de).
        schema:
          type: string
      - name: search[updated_until]
        in: query
        description: Filtre les résultats selon la date de mise à jour (jusqu'à).
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Inclure les entrées de temps archivées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Filtre seulement les entrées archivées.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer une entrée de temps.
      description: Créer une entrée de temps à partir d'une requête.
      tags:
      - TimeEntries
      operationId: create_time_entry
      requestBody:
        "$ref": "#/components/requestBodies/TimeEntryCreate"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/time_entries/{id}":
    get:
      summary: Obtenir une entrée de temps.
      description: Retourne une entrée de temps par identificateur unique.
      tags:
      - TimeEntries
      operationId: show_time_entry
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Mettre à jour une entrée de temps.
      description: Mettre à jour une entrée de temps à partir d'une requête.
      tags:
      - TimeEntries
      operationId: update_time_entry
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/TimeEntryUpdate"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer une entrée de temps.
      description: Supprime une entrée de temps par identifiant.
      tags:
      - TimeEntries
      operationId: delete_time_entry
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/time_entries/{id}/activities":
    get:
      summary: Obtenir une liste paginée des activités.
      description: Retourne une liste paginée des activités.
      tags:
      - TimeEntries
      operationId: index_time_entry_activities
      parameters:
      - "$ref": "#/components/parameters/PathId"
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: sort[created_at]
        in: query
        description: Trie la requête en fonction de la valeur de created_at, laquelle
          doit être 'asc' ou 'desc', insensible à la case.
        schema:
          type: string
      - name: search[trackable_id]
        in: query
        description: L'identifiant de l'objet associé à l'activité utilisé pour la
          recherche appliquée à la requête.
        schema:
          type: string
      - name: search[trackable_type]
        in: query
        description: Le type de l'objet associé à l'activité utilisé pour la recherche
          appliquée à la requête.
        schema:
          type: string
      - name: search[owner_id]
        in: query
        description: L'identifiant du propriétaire de l'activité utilisé pour la recherche
          appliquée à la requête.
        schema:
          type: string
      - name: search[owner_type]
        in: query
        description: Le type du propriétaire de l'activité utilisé pour la recherche
          appliquée à la requête.
        schema:
          type: string
      - name: search[key]
        in: query
        description: La clé utilisée pour la recherche appliquée à la requête.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/ActivitySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/transfer_requests":
    get:
      summary: Obetnir les demandes de transfert paginées.
      description: Retourne les demandes de transfert paginées.
      tags:
      - TransferRequests
      operationId: index_transfer_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[member_id]
        in: query
        description: Filtre par ID d'employé assigné à la demande.
        schema:
          type: string
      - name: search[created_by]
        in: query
        description: Filtre par ID d'employé qui a créé la demande.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/TransferRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/transfer_requests/{id}":
    get:
      summary: Obtenir une demande de transfert.
      description: Retourne une demande de transfert par ID.
      tags:
      - TransferRequests
      operationId: show_transfer_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TransferRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/users/me":
    get:
      summary: Obtenir son utilisateur.
      description: Retourne son utilisateur.
      tags:
      - Users
      operationId: show_user
      responses:
        200:
          "$ref": "#/components/responses/UserSuccessOne"
    put:
      summary: Mettre à jour son utilisateur.
      description: Mettre à jour son utilisateur.
      tags:
      - Users
      operationId: update_user
      requestBody:
        "$ref": "#/components/requestBodies/UserUpdate"
      responses:
        200:
          "$ref": "#/components/responses/UserSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/drive/files":
    post:
      summary: Créer un fichier.
      description: Créer un fichier à partir du corps de la requête.
      tags:
      - DriveFiles
      operationId: create_drive_file
      requestBody:
        "$ref": "#/components/requestBodies/DriveFileCreate"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/drive/files/{id}":
    put:
      summary: Modifier un fichier.
      description: Modifier un fichier à partir du corps de la requête.
      tags:
      - DriveFiles
      operationId: update_drive_file
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/DriveFileUpdate"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer un fichier.
      description: Supprimer le dossier associé à l'identifiant.
      tags:
      - DriveFiles
      operationId: delete_drive_file
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/folders":
    post:
      summary: Créer un dossier.
      description: Créer un dossier à partir du corps de la requête.
      tags:
      - DriveFolders
      operationId: create_drive_folder
      requestBody:
        "$ref": "#/components/requestBodies/DriveFolderCreate"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/drive/folders/{id}":
    put:
      summary: Modifier un dossier.
      description: Modifier un dossier à partir du corps de la requête.
      tags:
      - DriveFolders
      operationId: update_drive_folder
      parameters:
      - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/DriveFolderUpdate"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Supprimer un dossier.
      description: Supprimer le dossier lié à l'identifiant.
      tags:
      - DriveFolders
      operationId: delete_drive_folder
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/items":
    get:
      summary: Obtenir les fichiers et dossiers paginés.
      description: Retourne les fichiers et dossiers paginés.
      tags:
      - DriveItems
      operationId: index_drive_item
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[member_id]
        in: query
        description: L'identifiant d'un membre utilisé comme filtre sur la requête.
        schema:
          type: string
      - name: search[with_deleted]
        in: query
        description: Inclure les fichiers et dossiers archivés dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclure les fichiers et dossiers non archivés du résultat paginé.
        schema:
          type: string
      - name: search[folder_id]
        in: query
        description: L'identifiant du dossier utilisé comme filtre sur la requête.
        schema:
          type: string
      - name: search[type]
        in: query
        description: Le type d'objet utilisé comme filtre sur la requête. Peut être
          'file' ou 'folder'.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/drive/items/{id}":
    get:
      summary: Obtenir un objet.
      description: Retourne un objet par id.
      tags:
      - DriveItems
      operationId: show_drive_item
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DriveItemSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/signature_requests":
    get:
      summary: Obtenir les demandes de signature paginées.
      description: Obtenir les demandes de signature paginées.
      tags:
      - DriveSignatureRequests
      operationId: index_drive_signature_request
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Inclure les demandes de signature annulées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclue les demandes de signature actives du résultat paginé.
        schema:
          type: string
      - name: search[creator_id]
        in: query
        description: Filtrer par l'identifiant du créateur de la demande de signature.
        schema:
          type: string
      - name: search[state]
        in: query
        description: 'Filtrer par l''état de la demande. Options : ''pending'', ''completed''
          ou ''canceled''.'
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Créer une demande de signature.
      description: Créer une demande de signature avec des paramètres.
      tags:
      - DriveSignatureRequests
      operationId: create_drive_signature_request
      requestBody:
        "$ref": "#/components/requestBodies/DriveSignatureRequestCreate"
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureRequestSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/drive/signature_requests/{id}":
    get:
      summary: Obtenir une demande de signature.
      description: Obtenir une demande de signature par son identifiant.
      tags:
      - DriveSignatureRequests
      operationId: show_drive_signature_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/signature_requests/{id}/cancel":
    put:
      summary: Annuler une demande de signature.
      description: Annuler une demande de signature avec son identifiant.
      tags:
      - DriveSignatureRequests
      operationId: cancel_drive_signature_request
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/signatures/{id}":
    get:
      summary: Obtenir une signature.
      description: Renvoie l'identifiant du titulaire de la signature.
      tags:
      - DriveSignatures
      operationId: show_drive_signature
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/drive/signatures":
    get:
      summary: Obtenir les signatures paginées.
      description: Renvoie les signatures paginées.
      tags:
      - DriveSignatures
      operationId: index_drive_signature
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[with_deleted]
        in: query
        description: Inclure les signatures annulées dans le résultat paginé.
        schema:
          type: string
      - name: search[only_deleted]
        in: query
        description: Exclure les signatures actives du résultat paginé.
        schema:
          type: string
      - name: search[state]
        in: query
        description: 'Filtrer par l''état de la signature. Options : ''pending'' ou
          ''completed''.'
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/DriveSignatureSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/hr/fields":
    get:
      summary: Obtenir les champs de ressources humaines paginés.
      description: Retourne les champs de ressources humaines paginés.
      tags:
      - HRFields
      operationId: index_hr_field
      parameters:
      - "$ref": "#/components/parameters/QueryPage"
      - "$ref": "#/components/parameters/QueryLimit"
      - "$ref": "#/components/parameters/QueryPageSize"
      - name: search[custom]
        in: query
        description: Filtre selon le statut custom - true ou false.
        schema:
          type: string
      - name: search[enabled]
        in: query
        description: Filtre selon le statut enabled - true ou false.
        schema:
          type: string
      - name: search[rank]
        in: query
        description: Filtre selon le rank.
        schema:
          type: string
      responses:
        200:
          "$ref": "#/components/responses/HRFieldSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/hr/fields/{id}":
    get:
      summary: Obtenir un champ de ressources humaines.
      description: Retourne un champ de ressources humaines par id.
      tags:
      - HRFields
      operationId: show_hr_field
      parameters:
      - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/HRFieldSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
components:
  schemas:
    Activity:
      type: object
      description: Une description détaillée d'une activité.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        trackable_id:
          type: string
          description: L'identifiant de l'objet associé à l'activité.
          format: uuid
        trackable_type:
          type: string
          description: Le type de l'objet associé à l'activité.
        owner_id:
          type: string
          description: L'identifiant du propriétaire de l'activité.
          format: uuid
        owner_type:
          type: string
          description: Le type du propriétaire de l'activité.
        key:
          type: string
          description: La clé de l'activité.
        created_at:
          type: string
          description: Le moment de création de l'activité.
          format: date-time
        updated_at:
          type: string
          description: Le dernier moment de modification de l'activité.
          format: date-time
        parameters:
          type: object
          description: Les paramètres de l'activité.
    Availability:
      type: object
      description: Une description détaillé de la disponibilité.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        day:
          type: integer
          description: Le jour de la semaine du planificateur de l'organisation.
          format: int32
        start_at:
          type: string
          description: Le temps de début de la disponibilité (HH:MM).
        end_at:
          type: string
          description: Le temps de fin de la disponibilité (HH:MM).
        available:
          type: boolean
          description: Si la disponibilité est marquée comme étant disponible ou non.
        all_day:
          type: boolean
          description: Si la disponibilité s'étale sur toute la journée ou non.
        created_at:
          type: string
          description: Le moment de création de la disponibilité.
          format: date-time
        updated_at:
          type: string
          description: Le dernier moment de modification de la disponibilité.
          format: date-time
    AvailabilityListRequest:
      type: object
      description: Une description détaillée d'une demande de disponibilités.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: L'identifiant de l'employé visé par la demande de disponibilités.
          format: uuid
        created_by:
          type: string
          description: L'identifiant du créateur de la demande de disponibilités.
          format: uuid
        availability_list_id:
          type: string
          description: L'identifiant de la liste de disponibilités de la demande de
            disponibilités.
          format: uuid
        expired_at:
          type: string
          description: Le moment d'expiration de la demande de disponibilités.
          format: date-time
        created_at:
          type: string
          description: Le moment de création de la demande de disponibilités.
          format: date-time
        updated_at:
          type: string
          description: Le dernier moment de modification de la demande de disponibilités.
          format: date-time
    AvailabilityList:
      type: object
      description: Une description détaillée d'une liste de disponibilités.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: L'identifiant de l'employé auquel appartient la liste de disponibilités.
          format: uuid
        name:
          type: string
          description: Le nom de la liste de disponibilités.
        note:
          type: string
          description: Les notes de la liste de disponibilités.
        week_minimum:
          type: integer
          description: Le nombre minimum d'heures souhaité par l'employé.
          format: int32
        week_maximum:
          type: integer
          description: Le nombre maximum d'heures souhaité par l'employé.
          format: int32
        repeat_interval:
          type: boolean
          description: 'Combien de fois la liste de disponibilités est répétée dans
            le temps, en semaine (ex. 1: à chaque semaine, null: n''est pas répétée).'
        status:
          type: string
          description: L'état de la liste de disponibilités.
        cancelable:
          type: boolean
          description: Si la liste de disponibilités peut être annulée.
        start_date:
          type: string
          description: Le début de la liste de disponibilités.
          format: date
        end_date:
          type: string
          description: La fin de la liste de disponibilités.
          format: date
        created_at:
          type: string
          description: Le moment de création de la liste de disponibilités.
          format: date-time
        updated_at:
          type: string
          description: Le dernier moment de modification de la liste de disponibilités.
          format: date-time
        availabilities:
          type: array
          description: Les disponibilités de la liste de disponibilités.
          items:
            "$ref": "#/components/schemas/Availability"
    BillboardTag:
      type: object
      description: Une description détaillée d'une catégorie du fil d'actualité.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Le nom de la catégorie.
        unread_count:
          type: integer
          description: Le nombre de publications non lues dans cette catégorie.
          format: int32
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    BillboardThreadStats:
      type: object
      description: Une description détaillée des statistiques d'une publication.
      properties:
        confirmed_count:
          type: integer
          description: La quantité de consultations confirmées.
          format: int32
        percent_confirmed:
          type: number
          description: Le pourcentage de consultations confirmées au travers tous
            les membres concernés.
          format: float
        views_count:
          type: integer
          description: La quantité de consultations.
          format: int32
        percent_views:
          type: number
          description: Le pourcentage de consultations au travers tous les membres
            concernés.
          format: float
    BillboardThread:
      type: object
      description: Une description détaillée d'une publication.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        created_by:
          type: string
          description: L'identifiant unique du membre ayant créé cette publication.
          format: uuid
        updated_by:
          type: string
          description: L'identifiant unique du dernier membre ayant modifié cette
            publication.
          format: uuid
        title:
          type: string
          description: Le titre de la publication.
        content:
          type: string
          description: Le contenu de la publication.
        content_excerpt:
          type: string
          description: Un extrait du contenu de la publication (environ 20 mots).
        billboard_views_count:
          type: integer
          description: Le nombre de fois que la publication a été consultée.
          format: int32
        billboard_acknowledged_count:
          type: integer
          description: Le nombre de fois que la publication a été confirmée.
          format: int32
        comments_count:
          type: integer
          description: La quantité de commentaires sur la publication.
          format: int32
        start_date:
          type: string
          description: La date à laquelle la publication a été publiée.
          format: date
        end_date:
          type: string
          description: La date à laquelle la publication a été archivée.
          format: date
        start_time:
          type: string
          description: La date et l'heure auxquelles la publication a été publiée.
        organization_wide:
          type: boolean
          description: Si la publication est accessible à tous les membres de l'organisation.
            'false' si la publication vise des positions, succursales ou membres spécifiques.
        commentable:
          type: boolean
          description: Si la publication peut être commentée.
        acknowledgeable:
          type: boolean
          description: Si la publication peut être confirmée par les membres concernés.
        draft:
          type: boolean
          description: Si la publication est un brouillon.
        sticky:
          type: boolean
          description: Si la publication est collante.
        unread:
          type: boolean
          description: Si la publication n'a pas été lue par le membre courant.
        unconfirmed:
          type: boolean
          description: Si la publication n'a pas été confirmée par le membre courant.
        excerpted:
          type: boolean
          description: Si la publication possède un extrait (si la contenu possède
            plus de 20 mots).
        can_acknowledge:
          type: boolean
          description: Si le membre courant doit confirmer la publication. 'false'
            si le membre courant n'est pas concerné par publication ou s'il l'a déjà
            confirmée.
        can_edit:
          type: boolean
          description: Si le membre courant a les droits nécessaires à la modification
            de la publication.
        archived_at:
          type: string
          description: La date à laquelle la publication a été archivée.
          format: date-time
        acknowledged_at:
          type: string
          description: La dernière date à laquelle la publication a été confirmée
            par le membre courant.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        stats:
          "$ref": "#/components/schemas/BillboardThreadStats"
    Break:
      type: object
      description: Une description détaillée d'une pause.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        length:
          type: integer
          description: La durée de la pause, en minutes.
          format: int32
        offset:
          type: integer
          description: Le décalage de la pause à partir du moment où elle commence,
            en minutes. Par exemple, une pause commençant à 7:30 pour un quart de
            travail commençant à 7:00 aura un décalage de 30 minutes.
          format: int32
        paid:
          type: boolean
          description: Si la pause est payée ou non.
        start_at:
          type: string
          description: Le moment auquel la pause commence.
          format: date-time
        end_at:
          type: string
          description: Le moment auquel la pause finie.
          format: date-time
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    ClockLog:
      type: object
      description: Une description détaillée d'un registre de pointage.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: Identifiant unique du membre associé au registre de pointage.
          format: uuid
        time_entry_id:
          type: string
          description: Identifiant unique de l'entrée de temps associée au registre
            de pointage.
          format: uuid
        shift_id:
          type: string
          description: Identifiant unique du quart associé au registre de pointage.
          format: uuid
        job_site_id:
          type: string
          description: Identifiant unique du lieu de travail associé au registre de
            pointage.
          format: uuid
        code:
          type: string
          description: Le code utilisé pour pointer.
        action:
          type: string
          description: Le type de pointage. Soit 'clocked_in' ou 'clocked_out'.
        type:
          type: string
          description: Le type d'appareil utilisé pour pointer.
        params:
          type: object
          description: Les paramètres de pointage.
        response:
          type: object
          description: Les erreurs de pointage, s'il y a lieu.
        success:
          type: boolean
          description: Que le pointage ait été un succès ou non.
        has_questions:
          type: boolean
          description: Que le pointage ait des questions ou non.
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    Comment:
      type: object
      description: Une description détaillée d'un commentaire.
      properties:
        id:
          type: string
          description: Identifiant unique du commentaire.
          format: uuid
        body:
          type: string
          description: Le contenu du commentaire.
        commentable_id:
          type: string
          description: L'identifiant de l'objet commenté.
          format: uuid
        commentable_type:
          type: string
          description: Le type d'objet commenté -  quart, demande de congé, publication
            d'actualité, etc.
        editable:
          type: boolean
          description: Si le commentaire est modifiable.
        deletable:
          type: boolean
          description: Si le commentaire est supprimable.
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    Document:
      type: object
      description: Une description détaillée d'un document, c'est-à-dire un fichier
        externe téléversé sur Agendrix.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        file_content_type:
          type: string
          description: Le type de fichier relié au document.
        file_size:
          type: integer
          description: La taille de fichier relié au document.
          format: int32
        file_name:
          type: string
          description: Le nom de fichier relié document.
        file_url:
          type: string
          description: Le lien pour accéder au fichier.
        created_at:
          type: string
          description: Date et heure de création du document.
          format: date-time
    LeaveType:
      type: object
      description: Une description détaillée sur un type de congé.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Le nom de ce type de congé.
        paid:
          type: boolean
          description: Si le type de congé est payé.
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    Resource:
      type: object
      description: Description détaillée d'une ressource.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Nom de la ressource.
        'no':
          type: string
          description: L'identifiant unique raccourci de la ressource.
        description:
          type: string
          description: Description de la ressource.
        address:
          type: string
          description: L'adresse de la ressource.
        exclusive:
          type: boolean
          description: Si la ressource est exclusive.
        type_job_site:
          type: boolean
          description: Si la ressource est une succursale.
        type_equipment:
          type: boolean
          description: Si la ressource est un équipement.
        private_comments_count:
          type: integer
          description: Nombre de commentaires privés sur la ressource.
          format: int32
        clock_logs_count:
          type: integer
          description: Le nombre d'enregistrement de registre d'horloge d'une ressource.
          format: int32
        public_comments_count:
          type: integer
          description: Nombre de commentaires publics sur la ressource.
          format: int32
        minimum_paid_minutes_per_entry:
          type: integer
          description: Le montant minimum de minutes payées par enregistrement de
            la ressource.
          format: int32
        created_at:
          type: string
          description: Moment de création de la ressource.
          format: date-time
        updated_at:
          type: string
          description: Moment de la dernière mise à jour de la ressource.
          format: date-time
        deleted_at:
          type: string
          description: Moment d'archive de la ressource.
          format: date-time
    TimeOffPaymentConstraint:
      type: object
      description: Une description détaillée d'une contrainte de congé.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        paid_weekdays:
          type: array
          description: Les jours de la semaine qui sont considérés comme payés pour
            le temps libre, avec 0 comme dimanche, jusqu'à 6 comme samedi. Une seule
            occurrence de chaque jour peut être spécifiée.
          items:
            type: integer
            format: int32
        excluded_dates:
          type: array
          description: Les dates qui sont considérées comme non payées pour le congé.
            Cet attribut a la priorité sur les paid_weekdays.
          items:
            type: string
            format: date
    LeaveRequest:
      type: object
      description: Une description détaillée d'une demande de congé.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: L'identifiant du demandeur.
          format: uuid
        member_site_position_id:
          type: string
          description: L'identifiant de la position du site du demandeur.
          format: uuid
        created_by:
          type: string
          description: L'identifiant du créateur de la demande de congé.
          format: uuid
        justification:
          type: string
          description: La justification pour la demande de congé.
        leave_value:
          type: integer
          description: La durée du congé demandé.
          format: int32
        paid:
          type: boolean
          description: Si le congé demandé est payé.
        all_day:
          type: boolean
          description: Si le congé demandé est une journée complète.
        multiple_days:
          type: boolean
          description: Si le congé demandé est sur plusieurs jours.
        overlapping_shifts_count:
          type: integer
          description: Combien de quarts chevauche le congé demandé.
          format: int32
        start_at:
          type: string
          description: L'heure auquel le congé demandé débute.
          format: date-time
        start_date:
          type: string
          description: La date auquel le congé demandé débute.
          format: date
        end_at:
          type: string
          description: L'heure auquel le congé demandé se termine.
          format: date-time
        end_date:
          type: string
          description: La date auquel le congé demandé se termine.
          format: date
        approved_by:
          type: string
          description: L'identifiant de l'approbateur lié à la demande.
        declined_by:
          type: string
          description: L'identifiant du déclinant(e) lié à la demande.
        canceled_by:
          type: string
          description: L'identifiant de l'annulateur(e) lié à la demande.
        approved_at:
          type: string
          description: Le moment auquel la demande de congé a été approuvée.
          format: date-time
        declined_at:
          type: string
          description: Le moment auquel la demande de congé a été déclinée.
          format: date-time
        canceled_at:
          type: string
          description: Le moment auquel la demande de congé a été annulée.
          format: date-time
        expired_at:
          type: string
          description: Le moment auquel la demande de congé expire.
          format: date-time
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
        leave_type:
          "$ref": "#/components/schemas/LeaveType"
        resource:
          "$ref": "#/components/schemas/Resource"
        time_off_payment_constraint:
          "$ref": "#/components/schemas/TimeOffPaymentConstraint"
    Location:
      type: object
      description: Une description détaillée de l'emplacement.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        locatable_id:
          type: string
          description: L'identifiant unique de l'objet localisable lié à l'emplacement.
          format: uuid
        locatable_type:
          type: string
          description: Le type de l'objet lié à l'emplacement.
        latitude:
          type: number
          description: La latitude de l'emplacement.
          format: float
        longitude:
          type: number
          description: La longitude de l'emplacement.
          format: float
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    MemberShiftConflict:
      type: object
      description: Une description détaillée d'un conflit de quart d'un membre.
      properties:
        start_at:
          type: string
          description: Date et heure de début du quart de travail en conflit.
          format: date-time
        end_at:
          type: string
          description: Date et heure de fin du quart de travail en conflit.
          format: date-time
    MemberSitePosition:
      type: object
      description: Une description détaillée de la position du membre dans la succursale.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        position_id:
          type: string
          description: L'identifiant unique d'une position.
          format: uuid
        rate_base:
          type: number
          description: Le taux horaire régulier du membre pour cette position.
          format: float
        rate_overtime:
          type: number
          description: Le taux horaire supplémentaire du membre pour cette position.
          format: float
        rate_overtime_2:
          type: number
          description: Le taux horaire supplémentaire 2 du membre pour cette position,
            si activé.
          format: float
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    MemberSite:
      type: object
      description: Une description détaillée de la succursale d'un membre.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        site_id:
          type: string
          description: L'identifiant unique de la succursale.
          format: uuid
        role:
          type: string
          description: Le rôle de l'utilisateur au sein de la succursale. Il peut
            être employé, superviseur ou gestionnaire. Aussi appelé niveau hiérarchique.
        role_definition_id:
          type: string
          description: L'identifiant unique de la définition de rôle.
          format: uuid
        supervisor_position_ids:
          type: array
          description: Les identifiants uniques des positions supervisées par le membre
            dans la succursale.
          items:
            type: string
        supervisor_resource_ids:
          type: array
          description: Les identifiants uniques des ressources supervisées par le
            membre dans la succursale.
          items:
            type: string
        rate_type:
          type: string
          description: Si les taux horaires sont appliqués à toutes les positions
            (simple), ou chaque position assignée a son propre taux horaire (position)
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
        member_site_positions:
          type: array
          description: Les positions du membre dans la succursale.
          items:
            "$ref": "#/components/schemas/MemberSitePosition"
    MemberTimeBankTransaction:
      type: object
      description: Une description détaillée d'une transaction sur une banque d'heure
        d'un membre.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: L'identifiant unique du membre de la transaction.
          format: uuid
        created_by_id:
          type: string
          description: L'identifiant unique du créateur de la transaction.
          format: uuid
        member_time_bank_id:
          type: string
          description: L'identifiant unique de la banque de temps de la transaction.
          format: uuid
        time_bank_id:
          type: string
          description: L'identifiant unique de la banque de temps de la transaction.
          format: uuid
        position_id:
          type: string
          description: L'identifiant unique de la position de la transaction.
          format: uuid
        site_id:
          type: string
          description: L'identifiant unique de la succursale de la transaction.
          format: uuid
        'no':
          type: integer
          description: Le numéro séquentiel unique de la transaction dans la banque
            de temps.
          format: int32
        revert_no:
          type: integer
          description: Le numéro séquentiel unique de la transaction que cette transaction
            à rétablie.
          format: int32
        action:
          type: string
          description: Les actions de la transaction sur la banque de temps.
        notes:
          type: string
          description: Les notes de la transaction
        date:
          type: string
          description: La date de la transaction.
          format: date
        multiplier:
          type: number
          description: Le multiplicateur des minutes de la transaction.
          format: float
        rate_regular:
          type: number
          description: Le taux horaire régulier de la transaction.
          format: float
        rate_overtime:
          type: number
          description: Le taux horaire supplémentaire de la transaction.
          format: float
        rate_overtime_2:
          type: number
          description: Le taux horaire supplémentaire 2 de la transaction, si activé.
          format: float
        total_minutes:
          type: integer
          description: Le total en minutes de la transaction après avoir appliqué
            le multiplicateur.
          format: int32
        minutes:
          type: integer
          description: Les minutes de la transaction avant d'appliquer le multiplicateur.
          format: int32
        regular_minutes:
          type: integer
          description: Les heures régulières de la transaction.
          format: int32
        overtime_1_minutes:
          type: integer
          description: Les heures supplémentaires 1 de la transaction.
          format: int32
        overtime_2_minutes:
          type: integer
          description: Les heures supplémentaires 2 de la transaction.
          format: int32
        overtime_minutes:
          type: integer
          description: Le total des heures supplémentaires en minutes.
          format: int32
        paid_minutes:
          type: integer
          description: Les minutes payées de la transaction.
          format: int32
        balance:
          type: integer
          description: Le solde courant dans la banque jusqu'à cette transaction,
            inclusivement.
          format: int32
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    MemberTimeBank:
      type: object
      description: Une description détaillée d'une banque de temps d'un membre.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: L'identificateur unique du membre.
          format: uuid
        time_bank_id:
          type: string
          description: L'identificateur unique de la banque de temps.
          format: uuid
        processed_transactions_count:
          type: integer
          description: Le nombre de transactions traitées de la banque de temps du
            membre.
          format: int32
        processed_total_minutes:
          type: integer
          description: Le nombre de minutes traitées de la banque de temps du membre.
          format: int32
        pending_total_minutes:
          type: integer
          description: Le nombre de minutes en attente de la banque de temps du membre.
          format: int32
        available_total_minutes:
          type: integer
          description: Le nombre de minutes disponibles de la banque de temps du membre.
          format: int32
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    Profile:
      type: object
      description: Description détaillée du profil.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        first_name:
          type: string
          description: Le prénom du profil.
        last_name:
          type: string
          description: Le nom de famille du profil.
        full_name:
          type: string
          description: Le Nom  complet du profil.
        nickname:
          type: string
          description: Le prénom usuel du profil.
        display_name:
          type: string
          description: Le nom d'affichage du profil.
        email:
          type: string
          description: L'adresse e-mail du profil.
          format: email
        birthdate:
          type: string
          description: La date de naissance du profil.
          format: date
        civic_address:
          type: string
          description: L'adresse municipal du profil.
        document_id:
          type: string
          description: L'identifiant unique de la photo du profil.
        phone_1_number:
          type: string
          description: Le premier numéro de téléphone du profil.
          format: phone
        phone_2_number:
          type: string
          description: Le deuxième numéro de téléphone du profil.
          format: phone
        phone_3_number:
          type: string
          description: Le troisième numéro de téléphone du profil.
          format: phone
        phone_1_type:
          type: string
          description: Le type du premier numéro de téléphone du profil.
        phone_2_type:
          type: string
          description: Le type du deuxième numéro de téléphone du profil.
        phone_3_type:
          type: string
          description: Le type du troisième numéro de téléphone du profil.
        created_at:
          type: string
          description: Moment de création du profil.
          format: date-time
        updated_at:
          type: string
          description: Moment de la dernière mise à jour du profil.
          format: date-time
    Member:
      type: object
      description: Une description détailée d'un membre.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        user_id:
          type: string
          description: L'identifiant unique de l'utilisateur du membre.
          format: uuid
        profile_id:
          type: string
          description: L'identifiant unique du profil du membre.
          format: uuid
        identification_number:
          type: string
          description: Le nombre identificateur du membre.
        highest_role:
          type: string
          description: Le plus haut niveau hiérarchique de l'utilisateur. Peut être
            'member', 'supervisor' ou 'manager'.
        visible_rates:
          type: boolean
          description: Si le membre peut voir les taux et coûts, dépendament des paramètres
            de l'organisation.
        color:
          type: string
          description: La couleur associée à l'organisation pour ce membre.
        additional_information:
          type: string
          description: Informations additionnelles sur le membre.
        assigned_site_names:
          type: string
          description: Une liste des noms des succursales associées à ce membre.
        invitable_phone_number:
          type: string
          description: Un numéro de télépone pouvant être utilisé pour inviter le
            membre.
        invited_since:
          type: string
          description: La date à laquelle le membre a été invité à joindre l'organisation,
            en mots.
        main_position_id:
          type: string
          description: L'identifiant unique de la position principale du membre.
          format: uuid
        main_site_id:
          type: string
          description: L'identifiant unique de la succursale princiaple du membre.
          format: uuid
        last_invitation_method:
          type: string
          description: La dernière méthode utilisée pour inviter le membre, sms ou
            courriel.
        admin:
          type: boolean
          description: Si le membre est un administrateur de l'organisation.
        hide_before_seniority_date:
          type: boolean
          description: Si le membre est exclu du planificateur et des feuilles de
            temps avant sa date d'embauche.
        messenger_active:
          type: boolean
          description: Si le membre est présentement actif sur l'engin de conversations
            d'Agendrix.
        visible:
          type: boolean
          description: Si le membre est exclu du planificateur et des feuilles de
            temps.
        is_subordinate:
          type: boolean
          description: Si le membre est un subbordonné de l'utilisateur courant.
        has_unsupervised_sites:
          type: boolean
          description: Si le membre est assigné à des succursales qui ne sont pas
            suppervisées par l'utilisateur courant.
        override_overtime:
          type: boolean
          description: Si le membre possède des seuils d'heures supplémentaires personnalisés.
        multi_level_overtime:
          type: boolean
          description: Si les heures supplémentaires multi-niveaux sont activées pour
            le membre.
        overtime_day_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de jour personnalisé 1 du
            membre.
          format: float
        overtime_week_threshold:
          type: number
          description: Le seuil d'heures supplémentaire de semaine personnalisé 1
            du membre.
          format: float
        overtime_2_day_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de jour personnalisé 2 du
            membre, si les heures supplémentaires multi-niveaux sont activées.
          format: float
        overtime_2_week_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de semaine personnalisé 2
            du membre, si les heures supplémentaires multi-niveaux sont activées.
          format: float
        comments_count:
          type: integer
          description: Le nombre de commentaires créés par le membre.
          format: int32
        shifts_updated_count:
          type: integer
          description: Le nombre de quarts de travail mis à jour par le membre.
          format: int32
        seniority_date:
          type: string
          description: La date à laquelle le membre a commencé à travailler pour l'organisation.
          format: date
        deletion_date:
          type: string
          description: La date à laquelle le membre sera archivée.
          format: date
        invited_at:
          type: string
          description: La date à laquelle le membre a été invité.
          format: date-time
        connected_at:
          type: string
          description: La date à laquelle le membre a accepté l'invitation.
          format: date-time
        code:
          type: string
          description: Le code d'invitation du membre.
        time_clock_code:
          type: string
          description: Le code de pointage du membre.
        time_clock_override_defaults:
          type: boolean
          description: Si le membre outrepasse les paramètres de pointage de l'organisation.
        time_clock_must_be_scheduled:
          type: boolean
          description: Si le membre doit être à l'horaire pour pointer.
        time_clock_transfer_next_call:
          type: boolean
          description: Si le prochain pointage par téléphone doit être transféré.
        time_clock_transfer_next_call_number:
          type: string
          description: Le numéro auquel le prochain pointage par téléphone doit être
            transféré.
        time_clock_window:
          type: integer
          description: La fenètre utilisée pour différents paramètres de pointage,
            en minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description: Si les pointages du membre sont arrondis à l'heure de début
            planifiée des quarts de travail.
        time_clock_limit_to_shift_end_window:
          type: integer
          description: Si les pointages de sortie du membre sont limités à l'heure
            de fin planifiée des quarts de travail.
          format: int32
        payroll_seniority:
          type: integer
          description: Le nombre total de minutes travaillées du membre.
          format: int32
        payroll_seniority_hours:
          type: number
          description: Le nombre total d'heures travaillées du membre.
          format: float
        payroll_auto_update:
          type: boolean
          description: Si le membre n'a pas besoin de pointer.
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        deleted_at:
          type: string
          description: La date à laquelle le membre a été archivé.
          format: date-time
        hr_data:
          type: object
          description: Le hr_data du membre.
        profile:
          "$ref": "#/components/schemas/Profile"
    OpenShiftAudienceConfig:
      type: object
      description: Une description détaillée de la configuration de l'audience d'un
        quart à combler.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        send_by_seniority:
          type: boolean
          description: Si le quart à combler est envoyé par ordre d'ancienneté.
        exclude_members_in_overtime:
          type: boolean
          description: Si les membres en situation d'heures supplémentaires sont exclus
            de l'audience.
        exclude_members_in_conflict:
          type: boolean
          description: Si les membres en conflit d'horaire sont exclus de l'audience.
        excluded_member_ids:
          type: array
          description: Les identifiants uniques des membres manuellement exclus de
            l'audience du quart à combler.
          items:
            type: string
            format: uuid
    OpenShiftAudienceMemberRequestState:
      type: object
      description: Une description détaillée de l'état d'un membre de l'audience.
      properties:
        state:
          type: string
          description: L'état du membre.
        timestamp:
          type: string
          description: L'horodatage de l'état.
          format: date-time
    OpenShiftAudienceMember:
      type: object
      description: Une description détaillée d'un membre de l'audience d'un quart
        à combler.
      properties:
        conflicts:
          type: array
          description: Les conflits de quarts de travail du membre.
          items:
            "$ref": "#/components/schemas/MemberShiftConflict"
        request_state:
          "$ref": "#/components/schemas/OpenShiftAudienceMemberRequestState"
    OpenShiftRequestMember:
      type: object
      description: Une description détaillée d'un volontaire pour un quart à combler.
      properties:
        member_id:
          type: string
          description: L'identifiant de l'employé volontaire.
          format: uuid
        shift_id:
          type: string
          description: L'identifiant du quart assigné à l'employé.
          format: uuid
        approved_at:
          type: string
          description: Le moment auquel le quart a été assigné à l'employé.
          format: date-time
        declined_at:
          type: string
          description: Le moment auquel l'offre de l'employé a été refusée.
          format: date-time
        created_at:
          type: string
          description: Le moment auquel l'employé s'est porté volontaire.
          format: date-time
    OpenShiftRequest:
      type: object
      description: Une description détaillée d'une demande de quart à combler.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        shift_id:
          type: string
          description: L'identifiant du quart à combler.
          format: uuid
        members_count:
          type: integer
          description: Le nombre de volontaires pour le quart à combler.
          format: int32
        approved_by:
          type: string
          description: L'identifiant de la personne ayant approuvé la demande.
        canceled_by:
          type: string
          description: L'identifiant de la personne ayant annulé la demande.
        approved_at:
          type: string
          description: Le moment auquel la demande de quart à combler a été approuvée.
          format: date-time
        canceled_at:
          type: string
          description: Le moment auquel la demande de quart à combler a été annulée.
          format: date-time
        expired_at:
          type: string
          description: Le moment auquel la demande de quart à combler a expiré.
          format: date-time
        created_at:
          type: string
          description: La date et l'heure de création de la demande de quart à combler.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de dernière modification de la demande de
            quart à combler.
          format: date-time
        open_shift_request_members:
          type: array
          description: La liste des volontaires pour le quart à combler.
          items:
            "$ref": "#/components/schemas/OpenShiftRequestMember"
    Organization:
      type: object
      description: Une description détaillée d'une organization.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Le nom de l'organization.
        week_start:
          type: integer
          description: L'index du premier jour de travail de la semaine. Débutant
            le dimanche à 0, et finissant le samedi à 6.
          format: int32
        day_start:
          type: string
          description: L'heure du début de la journée de travail de l'organization.
        day_end:
          type: string
          description: L'heure de fin de la journée de travail de l'organization.
        time_zone_name:
          type: string
          description: Le nom du fuseau horaire de l'organization.
        availabilities_need_approval:
          type: boolean
          description: Si les disponibilités ont besoin d'être approuvé ou non.
        created_at:
          type: string
          description: Date de création de l'organization.
          format: date-time
        updated_at:
          type: string
          description: Date de la dernière mise à jour de l'organization.
          format: date-time
    Payroll:
      type: object
      description: Description détaillée d'une feuille de temps.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        start_at:
          type: string
          description: Date de début de la paie.
          format: date-time
        end_at:
          type: string
          description: Date de fin de la paie.
          format: date-time
        is_bankable:
          type: boolean
          description: If the payroll is bankable.
        status:
          type: string
          description: Le status de la paie.
        created_at:
          type: string
          description: Date de création de la paie.
          format: date-time
        updated_at:
          type: string
          description: Date de la dernière mise a jour de la paie.
          format: date-time
    Position:
      type: object
      description: Description détaillée d'une position.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Nom de la position.
        normalized_name:
          type: string
          description: Nom normalisé de la position.
        rank:
          type: integer
          description: Rang de la position.
          format: int32
        color:
          type: string
          description: Couleur de la position.
        color_formatted:
          type: string
          description: Couleur mise en forme de la positions.
        parent_id:
          type: string
          description: Identifiant unique de la position parent. Si cette valeur est
            présente, la position est une sous-position.
        created_at:
          type: string
          description: Moment de création de la position.
          format: date-time
        updated_at:
          type: string
          description: Moment de mise à jour de la position.
          format: date-time
        deleted_at:
          type: string
          description: Moment de d'archivage de la position.
          format: date-time
    PremiumEntry:
      type: object
      description: Description détaillée d'une prime.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        premium_id:
          type: string
          description: Identifiant unique d'une prime.
          format: uuid
        entry_id:
          type: string
          description: Identifiant unique d'un enregistrement d'un prime.
          format: uuid
        entry_type:
          type: string
          description: Type d'enregistrement d'une prime.
        entry_minutes:
          type: integer
          description: Nombre de minutes pour lesquelles la prime est appliquée.
          format: int32
        minutes:
          type: integer
          description: Nombre de minutes d'extra ajoutées à la prime.
          format: int32
        manual:
          type: boolean
          description: Si la prime est manuelle.
        created_by_id:
          type: string
          description: L'identifiant unique du créateur de l'enregistrement de la
            prime.
          format: uuid
    Premium:
      type: object
      description: Description détaillée d'une prime.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Nom de la prime.
        weekdays:
          type: array
          description: Les jours de la semaine que la prime s'applique.
          items:
            type: integer
            format: int32
        start_at:
          type: string
          description: Début de la prime.
        end_at:
          type: string
          description: Fin de la prime.
        multiplier:
          type: number
          description: Le multiplicateur de la prime.
          format: float
        default_value:
          type: integer
          description: La valeur par défaut d'une prime.
          format: int32
        compute_manually:
          type: boolean
          description: Si une prime est appliquée manuellement.
        compute_entire_shifts:
          type: boolean
          description: Si une prime est appliquée sur l'intégralité du quart de travaille
            superposé à la période de prime.
        only_time_offs:
          type: boolean
          description: Si une prime s'applique uniquement sur un congé.
        all_day:
          type: boolean
          description: Si une prime s'applique sur toutes les heures travaillées de
            la journée de travaille.
        all_week:
          type: boolean
          description: Si la prime est appliquée sur toute les jours de la semaine.
        all_leave_types:
          type: boolean
          description: Si la prime s'applique sur tous les types de congés.
        all_sites:
          type: boolean
          description: Si la prime s'applique sur toutes les succursales.
        all_members:
          type: boolean
          description: Si la prime s'applique sur tous les employés.
        all_positions:
          type: boolean
          description: Si la prime s'applique sur toutes les positions.
        created_at:
          type: string
          description: Moment de création de la prime.
          format: date-time
        updated_at:
          type: string
          description: Moment de la dernière mise à jour de la prime.
          format: date-time
    Publication:
      type: object
      description: Description détaillée d'une publication.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: Identifiant unique du membre de la publication.
          format: uuid
        site_id:
          type: string
          description: Identifiant unique de la succursale de la publication.
          format: uuid
        from:
          type: string
          description: Date de début de la publication des quarts de travail.
          format: date
        to:
          type: string
          description: Date de fin de la publication des quarts de travail.
          format: date
        created_at:
          type: string
          description: Moment de création de la publication.
          format: date-time
    RoleDefinition:
      type: object
      description: Description détaillée d'une définition de rôle.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Le nom de la définition de rôle.
        default:
          type: boolean
          description: Si c'est la définition par défaut du rôle.
        role:
          type: string
          description: Le rôle défini.
        disabled_features:
          type: array
          description: Les fonctionnalités désactivées pour ce rôle.
          items:
            type: string
        created_at:
          type: string
          description: Le moment de création de la définition de rôle.
          format: date-time
        updated_at:
          type: string
          description: Le dernier moment de modification de la définition de rôle.
          format: date-time
        deleted_at:
          type: string
          description: Le moment de l'archivage de la définition de rôle.
          format: date-time
    SchedulerProjection:
      type: object
      description: Description d'une prévision du planificateur d'horaires.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        site_id:
          type: string
          description: Identifiant unique de la succursale de la prévision du planificateur
            d'horaire.
          format: uuid
        position_id:
          type: string
          description: Identifiant unique de la de la position de la prévision du
            planificateur d'horaire.
          format: uuid
        date:
          type: string
          description: Date de la prévision du planificateur d'horaire.
          format: date
        hours:
          type: number
          description: Nombre d'heure prévus.
          format: float
        revenues:
          type: number
          description: Montant des revenus attendus.
          format: float
        productivity:
          type: number
          description: Le nombre d'unités de productivité attendues.
          format: float
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    User:
      type: object
      description: Description détaillée d'un utilisateur.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        email:
          type: string
          description: Courriel de l'utilisateur.
          format: email
        unconfirmed_email:
          type: string
          description: Le courriel non confirmé de l'utilisateur.
          format: email
        email_notifications:
          type: boolean
          description: Si l'utilisateur reçoit des notifications par e-mail.
        push_notifications:
          type: boolean
          description: Si l'utilisateur reçoit des notifications dans l'application
            mobile.
        sms_notifications:
          type: boolean
          description: Si l'utilisateur reçoit des notifications par SMS.
        sms_notifications_phone_status:
          type: string
          description: Le statut de confirmation du numéro de téléphone, en 'pending'
            ou 'confirmed'.
        sms_notifications_phone_number:
          type: string
          description: Le numéro de téléphone auquel l'utilisateur reçoit les notifications
            par SMS.
        sms_available:
          type: boolean
          description: Si des notifications par SMS sont disponibles pour ce membre.
        sms_blacklisted_numbers:
          type: array
          description: Une liste de numéros de téléphone qui ont été mis sur liste
            noire et qui ne peuvent pas recevoir de notifications.
          items:
            type: string
        disabled_notifications:
          type: array
          description: Une liste des notifications que cet utilisateur a désactivées.
          items:
            type: string
        shift_reminder_time:
          type: integer
          description: Lorsque l'utilisateur reçoit un rappel d'un quart de travail
            à venir, en minutes.
          format: int32
        last_sign_in_at:
          type: string
          description: Date à laquelle l'utilisateur s'est connecté pour la dernière
            fois.
          format: date-time
        sign_in_count:
          type: integer
          description: Le nombre de fois que l'utilisateur s'est connecté.
          format: int32
        unconfirmed:
          type: boolean
          description: Si le courriel de l'utilisateur n'est pas confirmé.
        confirmed_at:
          type: string
          description: Quand le courriel de l'utilisateur a été confirmé.
          format: date-time
        locale:
          type: string
          description: La langue de l'utilisateur.
        time_format:
          type: integer
          description: Le format d'heure de l'utilisateur, 12 ou 24.
          format: int32
        time_zone_name:
          type: string
          description: Le fuseau horaire de l'utilisateur.
        time_zone_identifier:
          type: string
          description: L'identifiant du fuseau horaire de l'utilisateur.
        last_seen_at:
          type: string
          description: Date et heure de la dernière action de l'utilisateur.
          format: date-time
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
        profile:
          "$ref": "#/components/schemas/Profile"
    Session:
      type: object
      description: Description détaillée de la session.
      properties:
        organization:
          "$ref": "#/components/schemas/Organization"
        user:
          "$ref": "#/components/schemas/User"
        member:
          "$ref": "#/components/schemas/Member"
    Shift:
      type: object
      description: Description détaillée d'un quart de travail.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        start_at:
          type: string
          description: Date et heure de début du quart de travail.
          format: date-time
        start_date:
          type: string
          description: Date de début du quart de travail.
          format: date
        end_at:
          type: string
          description: Date et heure de fin du quart de travail.
          format: date-time
        end_date:
          type: string
          description: Date de fin du quart de travail.
          format: date
        date:
          type: string
          description: Date du du quart de travail.
          format: date
        paid_break:
          type: integer
          description: Nombre de minutes de la pause payée du quart de travail.
          format: int32
        unpaid_break:
          type: string
          description: Nombre de minutes non payée du quart de travail.
        status:
          type: string
          description: Status du quart de travail, les valeurs possibles sont 'draft'
            ou 'published'.
        site_id:
          type: string
          description: Identifiant unique de la succursale du quart de travail.
          format: uuid
        member_id:
          type: string
          description: Identifiant unique du membre du quart de travail.
          format: uuid
        position_id:
          type: string
          description: Identifiant unique de la position du quart de travail.
          format: uuid
        sub_position_id:
          type: string
          description: Identifiant unique de la sous-position du quart de travail.
          format: uuid
        member_site_position_id:
          type: string
          description: Identifiant unique du member_site_position du quart de travail.
          format: uuid
        publication_id:
          type: string
          description: Identifiant unique de la publication du quart de travail.
          format: uuid
        leave_request_id:
          type: string
          description: Identifiant unique de la demande de congé du quart de travail.
          format: uuid
        leave_type_id:
          type: string
          description: Identifiant unique du type de congé du quart de travail.
          format: uuid
        shift_series_id:
          type: string
          description: Identifiant unique de la série de quart de travail.
          format: uuid
        updated_by:
          type: string
          description: Identifiant unique du dernier membre qui a mis à jour le quart
            de travail.
        open:
          type: boolean
          description: Si le quart de travail est ouvert.
        recurring:
          type: boolean
          description: Si le quart de travail est récurrent.
        time_off:
          type: boolean
          description: Si le quart de travail est un congé.
        paid:
          type: boolean
          description: Si le quart de travail est un congé payé.
        single_clock:
          type: boolean
          description: Si le quart de travail est demmande uniquement de pointée l'entrée.
        auto_clock:
          type: boolean
          description: Si le quart de travail est pointe automatiquement l'employé.
        on_call:
          type: boolean
          description: Si le quart de travail est sur appel.
        training:
          type: boolean
          description: Si le quart est une formation.
        all_day:
          type: boolean
          description: Si le quart de travail est toute la journée.
        same_date:
          type: boolean
          description: Si le début et la fin du quart de travail sont la même date.
        hide_end_at:
          type: boolean
          description: Si la fin du quart de travail est cachée aux membres.
        confirmed:
          type: boolean
          description: Si le quart de travail a été confirmer par ses membres.
        to_delete:
          type: boolean
          description: Si le quart de travail doit être supprimé.
        color:
          type: string
          description: La couleur de la position ou sous-position du quart de travail.
        reminder:
          type: string
          description: Les informations supplémentaires du quart de travail.
        viewed_at:
          type: string
          description: Date et heure que les membres au vue le quart de travail.
          format: date-time
        confirmed_at:
          type: string
          description: Date et heure que les membres au confirmer le quart de travail.
          format: date-time
        open_quantity:
          type: integer
          description: Nombre de quart de travail disponible.
          format: int32
        leave_value:
          type: integer
          description: Longueur du congé.
          format: int32
        comments_count:
          type: integer
          description: Nombre de commentaire du quart de travail.
          format: int32
        resources_count:
          type: integer
          description: Nombre de ressource du quart de travail.
          format: int32
        regular_minutes:
          type: integer
          description: Temps régulier du quart de travail, en minutes.
          format: int32
        overtime_1_minutes:
          type: integer
          description: Temps supplémentaire 1 du quart de travail, en minutes.
          format: int32
        overtime_2_minutes:
          type: integer
          description: Temps supplémentaire 2 du quart de travail, en minutes.
          format: int32
        overtime_minutes:
          type: integer
          description: Total du temps supplémentaire du quart de travail, en minutes.
          format: int32
        premium_minutes:
          type: integer
          description: Total du temps de prime du quart de travail, en minutes.
          format: int32
        premium_entries_count:
          type: integer
          description: Nombres de primes appliquées sur le quart de travail.
          format: int32
        duration:
          type: integer
          description: Duré total du quart de travail.
          format: int32
        original_shift_id:
          type: string
          description: L'original shift id du quart.
          format: uuid
        new_version_id:
          type: string
          description: Le new version shift id du quart.
          format: uuid
        rate_base:
          type: number
          description: Taux horaire régulier du membre.
          format: float
        rate_overtime:
          type: number
          description: Taux horaire du temps supplémentaire 1 du membre.
          format: float
        rate_overtime_2:
          type: number
          description: Taux horaire du temps supplémentaire 2 du membre.
          format: float
        resource_ids:
          type: array
          description: Les identifiants uniques des ressources du quart.
          items:
            type: string
            format: uuid
        drive_file_ids:
          type: array
          description: Les identifiants uniques des fichiers de documents partagés
            du quart.
          items:
            type: string
            format: uuid
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
        deleted_at:
          type: string
          description: Date et heure d'archive du quart de travail.
          format: date-time
        audience_config:
          "$ref": "#/components/schemas/OpenShiftAudienceConfig"
    Site:
      type: object
      description: Description détaillée d'une succursale.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Nom de la succursale.
        address:
          type: string
          description: Addresse de la succursale.
        instructions:
          type: string
          description: Informations additionnelles sur la succursale.
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
        deleted_at:
          type: string
          description: La date et l'heure d'archive de la succursale.
          format: date-time
        location:
          "$ref": "#/components/schemas/Location"
    Task:
      type: object
      description: Une description détaillée d'une tâche.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Le nom de la tâche.
        instructions:
          type: string
          description: Les instructions de la tâche.
        offset:
          type: integer
          description: Le décalage de la tâche à partir du moment où elle commence,
            en minutes. Par exemple, une tâche commençant à 7:30 pour un quart de
            travail commençant à 7:00 aura un décalage de 30.
          format: int32
        start_at:
          type: string
          description: L'heure de début de la tâche.
          format: date-time
        completed:
          type: boolean
          description: Si la tâche a été terminée.
        completed_at:
          type: string
          description: L'heure où la tâche a été terminée.
          format: date-time
        completed_by_id:
          type: string
          description: L'identifiant unique du membre ayant terminé cette tâche.
          format: uuid
    TimeBank:
      type: object
      description: Une description détaillée d'une banque de temps.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Le nom de la banque de temps.
        multiplier:
          type: number
          description: Le multiplicateur de la banque de temps.
          format: float
        leave_type_id:
          type: string
          description: L'ID du type de congé de la banque de congés.
          format: uuid
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    TimeEntry:
      type: object
      description: Une description détaillée d'une entrée de temps.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        unpaid_break:
          type: integer
          description: Minutes de pause non payées.
          format: int32
        paid_break:
          type: integer
          description: Minutes de pause payées.
          format: int32
        length:
          type: integer
          description: The time entry's length.
          format: int32
        overwritten_length_minutes:
          type: integer
          description: La longueur personnalisée de l'entrée de temps.
          format: int32
        regular_minutes:
          type: integer
          description: La quantité de temps régulier dans l'entrée de temps, en minutes.
          format: int32
        overtime_1_minutes:
          type: integer
          description: Le nombre de temps supplémentaires 1 dans l'entrée de temps,
            en minutes.
          format: int32
        overtime_2_minutes:
          type: integer
          description: Le nombre de temps supplémentaires 2 dans l'entrée de temps,
            en minutes.
          format: int32
        overtime_minutes:
          type: integer
          description: Le nombre total de temps supplémentaires dans l'entrée de temps,
            en minutes.
          format: int32
        premium_minutes:
          type: integer
          description: Le nombre de temps en prime dans l'entrée de temps, en minutes.
          format: int32
        premium_entries_count:
          type: integer
          description: Le nombre de primes pour l'entrée de temps.
          format: int32
        position_id:
          type: string
          description: ID de position.
          format: uuid
        site_id:
          type: string
          description: ID de la succursale.
          format: uuid
        member_site_position_id:
          type: string
          description: ID du 'member_site_position'.
          format: uuid
        member_id:
          type: string
          description: ID de l'employé assigné à l'entrée de temps.
          format: uuid
        shift_id:
          type: string
          description: L'identifiant unique du quart associé à l'entrée de temps.
          format: uuid
        time_off:
          type: boolean
          description: Si l'entrée de temps est un congé.
        time_off_length:
          type: integer
          description: La longueur du congé.
          format: int32
        time_off_leave_type_id:
          type: string
          description: L'identifiant unique du type de congé.
          format: uuid
        time_off_paid:
          type: boolean
          description: Si le congé est payé.
        date:
          type: string
          description: La date de l'entrée de temps.
          format: date
        start_at:
          type: string
          description: La date et l'heure du début de l'entrée de temps.
          format: date-time
        end_at:
          type: string
          description: La date et l'heure de la fin de l'entrée de temps.
          format: date-time
        start_at_clock_notes:
          type: string
          description: Note laissée par l'employé lors de son pointage d'entré.
        end_at_clock_notes:
          type: string
          description: Note laissée par l'employé lors du pointage de sortie.
        break_started_at:
          type: string
          description: La date et l'heure du début de la pause.
          format: date-time
        break_type:
          type: string
          description: Le type de pause.
        approved_suggested_end_at:
          type: boolean
          description: Si l'heure de sortie suggérée par l'employé a été approuvée.
        suggested_end_at:
          type: string
          description: L'heure de départ suggérée par l'employé.
        suggested_end_at_justification:
          type: string
          description: L'explication de l'employé pour l'heure de sortie suggérée.
        suggested_end_at_confirmed_at:
          type: string
          description: Lorsque l'heure de sortie suggérée a été approuvée.
          format: date-time
        approved:
          type: boolean
          description: Si l'entrée de temps a été approuvée.
        has_notes:
          type: boolean
          description: Si l'entrée de temps comporte des notes.
        has_caller_phone_number:
          type: boolean
          description: Si l'heure a été entrée ou sortie à l'aide d'un téléphone.
        start_at_clock_caller_phone_number:
          type: string
          description: Le numéro de téléphone utilisé pour pointer l'entrée.
        end_at_clock_caller_phone_number:
          type: string
          description: Le numéro de téléphone utilisé pour pointer la sortie.
        rate_regular:
          type: number
          description: Le taux régulier pour l'entrée de temps.
          format: float
        rate_overtime:
          type: number
          description: Le taux du temps supplémentaires 1 pour l'entrée de temps.
          format: float
        rate_overtime_2:
          type: number
          description: Le taux du temps supplémentaires 2 pour l'entrée de temps.
          format: float
        notes:
          type: string
          description: Les notes d'entrée de temps.
        start_at_clock_job_site_id:
          type: string
          description: L'identifiant unique du lieu de travail où l'employé a pointé
            son entrée.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description: L'identifiant unique du lieu de travail où l'employé a pointé
            sa sortie.
          format: uuid
        time_off_resource_id:
          type: string
          description: L'identifiant unique de la ressource associée.
          format: uuid
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
        deleted_at:
          type: string
          description: Date et heure de l'archivation.
          format: date-time
        premium_entries:
          type: array
          description: Les primes liées à l'entrée de temps.
          items:
            "$ref": "#/components/schemas/PremiumEntry"
    TransferRequest:
      type: object
      description: Une description détaillée d'une demande de transfert.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: Identificateur unique de l'employé.
          format: uuid
        created_by:
          type: string
          description: Identificateur unique de l'employé créateur.
          format: uuid
        justification:
          type: string
          description: Justification de la demande.
        sub_type:
          type: string
          description: Le sous-type de la demande.
        expired_at:
          type: string
          description: La date et l'heure à laquelle la demande expire.
          format: date-time
        created_at:
          type: string
          description: La date et l'heure de création.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de la dernière modification.
          format: date-time
    BillboardTagCreate:
      required:
      - name
      type: object
      description: Une description détaillée des paramètres d'entrée de création d'une
        catégorie du fil d'actualité.
      properties:
        name:
          type: string
          description: Le nom de la catégorie.
    BillboardTagUpdate:
      required:
      - name
      type: object
      description: Une description détaillée des paramètres d'entrée de mise à jour
        d'une catégorie du fil d'actualité.
      properties:
        name:
          type: string
          description: Le nom de la catégorie.
    BillboardThreadTagCreateAttributes:
      required:
      - billboard_tag_id
      type: object
      description: Une description détaillée des paramètres d'entrée de la création
        d'une catégorie de publication.
      properties:
        billboard_tag_id:
          type: string
          description: L'identifiant unique de la catégorie de publication.
          format: uuid
    BillboardThreadTagUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres d'entrée de la mise à
        jour d'une catégorie de publication.
      properties:
        billboard_tag_id:
          type: string
          description: L'identifiant unique de la catégorie de publication.
          format: uuid
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    BillboardThreadCreate:
      required:
      - title
      - content
      - start_date
      type: object
      description: Une description détaillée des paramètres d'entrée de la création
        d'une publication.
      properties:
        title:
          type: string
          description: Le titre de la publication.
        content:
          type: string
          description: Le contenu de la publication.
        start_date:
          type: string
          description: La date à laquelle la publication a été publiée.
          format: date
        end_date:
          type: string
          description: La date à laquelle la publication a été archivée.
          format: date
        start_time:
          type: string
          description: La date et l'heure auxquelles la publication a été publiée.
        draft:
          type: boolean
          description: Si la publication est un brouillon.
        notify:
          type: boolean
          description: Si la publication envoie une notification aux membres de l'organisation.
        sticky:
          type: boolean
          description: Si la publication est collante.
        commentable:
          type: boolean
          description: Si la publication peut être commentée.
        acknowledgeable:
          type: boolean
          description: Si la publication peut être confirmée par les membres concernés.
        site_ids:
          type: array
          description: Les ID des succursales pour lesquelles la publication est visible.
          items:
            type: string
        position_ids:
          type: array
          description: Les ID des positions pour lesquelles la publication est visible.
          items:
            type: string
        document_ids:
          type: array
          description: Les documents attachés à la publication.
          items:
            type: string
        billboard_thread_tags_attributes:
          type: array
          description: Une liste de catégories de publication du fil d'actualité.
          items:
            "$ref": "#/components/schemas/BillboardThreadTagCreateAttributes"
    BillboardThreadUpdate:
      type: object
      description: Une description détaillée des paramètres d'entrée de la mise à
        jour d'une publication.
      properties:
        title:
          type: string
          description: Le titre de la publication.
        content:
          type: string
          description: Le contenu de la publication.
        start_date:
          type: string
          description: La date à laquelle la publication a été publiée.
          format: date
        end_date:
          type: string
          description: La date à laquelle la publication a été archivée.
          format: date
        start_time:
          type: string
          description: La date et l'heure auxquelles la publication a été publiée.
        draft:
          type: boolean
          description: Si la publication est un brouillon.
        notify:
          type: boolean
          description: Si la publication envoie une notification aux membres de l'organisation.
        sticky:
          type: boolean
          description: Si la publication est collante.
        commentable:
          type: boolean
          description: Si la publication peut être commentée.
        acknowledgeable:
          type: boolean
          description: Si la publication peut être confirmée par les membres concernés.
        site_ids:
          type: array
          description: Les ID des succursales pour lesquelles la publication est visible.
          items:
            type: string
        position_ids:
          type: array
          description: Les ID des positions pour lesquelles la publication est visible.
          items:
            type: string
        document_ids:
          type: array
          description: Les documents attachés à la publication.
          items:
            type: string
        billboard_thread_tags_attributes:
          type: array
          description: Une liste de catégories de publication du fil d'actualité.
          items:
            oneOf:
            - "$ref": "#/components/schemas/BillboardThreadTagUpdateAttributes"
            - "$ref": "#/components/schemas/BillboardThreadTagCreateAttributes"
    BreakCreateAttributes:
      required:
      - length
      type: object
      description: Une description détaillée des paramètres d'entrée de la création
        d'une pause.
      properties:
        length:
          type: integer
          description: La durée de la pause, en minutes.
          format: int32
        offset:
          type: integer
          description: Le décalage de la pause à partir du moment où elle commence,
            en minutes. Par exemple, une pause commençant à 7:30 pour un quart de
            travail commençant à 7:00 aura un décalage de 30 minutes.
          format: int32
        paid:
          type: boolean
          description: Si la pause est payée ou non.
    BreakUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres d'entrée de la mise à
        jour d'une pause.
      properties:
        length:
          type: integer
          description: La durée de la pause, en minutes.
          format: int32
        offset:
          type: integer
          description: Le décalage de la pause à partir du moment où elle commence,
            en minutes. Par exemple, une pause commençant à 7:30 pour un quart de
            travail commençant à 7:00 aura un décalage de 30 minutes.
          format: int32
        paid:
          type: boolean
          description: Si la pause est payée ou non.
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    CommentCreate:
      required:
      - body
      - commentable_type
      - commentable_id
      type: object
      description: Une description détaillée des paramètres d'entrée pour la création
        d'un commentaire.
      properties:
        body:
          type: string
          description: Le contenu du commentaire.
        commentable_type:
          type: string
          description: Le type d'objet commenté -  quart, demande de congé, publication
            d'actualité, etc.
        commentable_id:
          type: string
          description: L'identifiant de l'objet commenté.
          format: uuid
        type:
          type: string
          description: Si le commentaire est privé ou non. Doit être 'private' ou
            'public'.
    CommentUpdate:
      type: object
      description: Une description détaillée des paramètres d'entrée pour la modification
        d'un commentaire.
      properties:
        body:
          type: string
          description: Le contenu du commentaire.
        commentable_type:
          type: string
          description: Le type d'objet commenté -  quart, demande de congé, publication
            d'actualité, etc.
        commentable_id:
          type: string
          description: L'identifiant de l'objet commenté.
          format: uuid
        type:
          type: string
          description: Si le commentaire est privé ou non. Doit être 'private' ou
            'public'.
    DriveItem:
      type: object
      description: Une description détaillée d'un fichier ou d'un dossier.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        member_id:
          type: string
          description: L'identifiant du membre auquel l'objet est associé.
          format: uuid
        creator_id:
          type: string
          description: L'identifiant du créateur de l'objet.
          format: uuid
        folder_id:
          type: string
          description: L'identifiant du dossier parent de l'objet.
          format: uuid
        type:
          type: string
          description: Le type de l'objet. Peut être 'file' ou 'folder'.
        name:
          type: string
          description: Le nom de l'objet.
        role:
          type: string
          description: Le rôle requis pour avoir accès à l'objet. Peut être 'member',
            'supervisor', 'manager' ou 'admin'.
        member_viewable:
          type: boolean
          description: Vrai si l'objet est accessible au membre.
        deleted_at:
          type: string
          description: Date et heure de suppression de l'objet.
          format: date-time
        created_at:
          type: string
          description: Date et heure de création de l'objet.
          format: date-time
        updated_at:
          type: string
          description: La date et l'heure de dernière modification de l'objet.
          format: date-time
        body:
          type: string
          description: Le contenu d'un fichier texte interne.
        note:
          type: string
          description: La note du fichier.
        comments_count:
          type: integer
          description: Le nombre de commentaires associés au fichier.
          format: int32
        new_version_id:
          type: string
          description: L'identifiant de la nouvelle version.
          format: uuid
        document:
          "$ref": "#/components/schemas/Document"
        body_documents:
          type: array
          description: Les documents associés au contenu d'un fichier texte externe.
          items:
            "$ref": "#/components/schemas/Document"
    DriveSignature:
      type: object
      description: Une description détaillée d'une signature.
      properties:
        id:
          type: string
          description: Identifiant unique de la signature.
          format: uuid
        signature_request_id:
          type: string
          description: Identifiant de la demande de signature associée à la signature.
          format: uuid
        member_id:
          type: string
          description: Identifiant du membre associé à la signature.
          format: uuid
        legal_name:
          type: string
          description: Le nom légal du membre signataire.
        ip_address:
          type: string
          description: L'adresse IP de l'appareil utilisé pour signer le document.
        user_agent:
          type: string
          description: Les informations du navigateur utilisé pour signer le document.
        pss_signature:
          type: string
          description: Représente une signature cryptographique générée à l'aide du
            schéma de signature probabiliste (PSS).
        signed_at:
          type: string
          description: La date et l'heure de l'application de la signature.
          format: date-time
        consent_given_at:
          type: string
          description: La date et l'heure de consentement à la signature.
          format: date-time
        deleted_at:
          type: string
          description: Date et heure de l'annulation de la signature.
          format: date-time
        created_at:
          type: string
          description: Date et heure de création de la signature.
          format: date-time
        updated_at:
          type: string
          description: Date et heure de dernière modification de la signature.
          format: date-time
    DriveSignatureRequest:
      type: object
      description: Une description détaillée d'une demande de signature.
      properties:
        id:
          type: string
          description: Identifiant unique de la demande de signature.
          format: uuid
        creator_id:
          type: string
          description: Iidentifiant du créateur de la demande de signature.
          format: uuid
        drive_file_id:
          type: string
          description: Identifiant du fichier en cours de signature.
          format: uuid
        original_file_id:
          type: string
          description: Identifiant du fichier utilisé pour créer la demande de signature.
          format: uuid
        original_document_hash:
          type: string
          description: Hash du document original.
        completed_at:
          type: string
          description: Date et heure de la completion de la demande de signature.
          format: date-time
        deleted_at:
          type: string
          description: Date et heure de l'annulation de la demande de signature.
          format: date-time
        created_at:
          type: string
          description: Date et heure de création de la demande de signature.
          format: date-time
        updated_at:
          type: string
          description: Date et heure de dernière modification de la demande de signature.
          format: date-time
        drive_file:
          "$ref": "#/components/schemas/DriveItem"
        completion_certificate:
          "$ref": "#/components/schemas/Document"
        signatures:
          type: array
          description: Les signatures associées à la demande de signature.
          items:
            "$ref": "#/components/schemas/DriveSignature"
    DriveFileShiftCreateAttributes:
      required:
      - drive_file_id
      type: object
      description: Description détaillée des paramètres de création d'un fichier de
        quart.
      properties:
        drive_file_id:
          type: string
          description: L'identifiant unique du fichier dans les documents partagés.
          format: uuid
    DriveFileShiftUpdateAttributes:
      required:
      - id
      type: object
      description: Description détaillée des paramètres de mise à jour d'un fichier
        de quart.
      properties:
        drive_file_id:
          type: string
          description: L'identifiant unique du fichier dans les documents partagés.
          format: uuid
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    HRField:
      type: object
      description: Une description détaillée d'un champ de ressources humaines.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        name:
          type: string
          description: Le nom du champ de ressources humaines.
        help_info:
          type: string
          description: L'instruction du champ de ressources humaines.
        enabled:
          type: boolean
          description: Si le champ de ressources humaines est activé.
        section:
          type: string
          description: La section d'un champ de ressources humaines.
        rank:
          type: integer
          description: Le rang du champ de ressources humaines.
          format: int32
        show_in_onboarding:
          type: boolean
          description: Si le champ de ressources humaines est affiché lors de l'onboarding.
        required_in_onboarding:
          type: boolean
          description: Si le champ de ressources humaines est requis lors de l'onboarding.
        custom:
          type: boolean
          description: Si le champ de ressources humaines est créé par l'organisation.
        field_type:
          type: string
          description: Le type du champ de ressources humaines.
        metadata:
          type: object
          description: Les métadonnées selon le field_type du champ de ressources
            humaines.
        private_field:
          type: boolean
          description: Si le champ de ressources humaines est privé.
        sortable:
          type: boolean
          description: Si le champ de ressources humaines est triable.
        filterable:
          type: boolean
          description: Si le champ de ressources humaines est filtrable.
        deleted_at:
          type: string
          description: Date et heure de la suppression du champ de ressources humaines.
          format: date-time
        created_at:
          type: string
          description: Date et heure de création du champ de ressources humaines.
          format: date-time
        updated_at:
          type: string
          description: Date et heure de la dernière modification du champ de ressources
            humaines.
          format: date-time
    LeaveRequestCreate:
      required:
      - member_id
      - justification
      - start_at
      - end_at
      type: object
      description: Une description détaillée des paramètres d'entrée d'une création
        de demande de congé.
      properties:
        start_at:
          type: string
          description: Le moment auquel le congé demandé débute
          format: date-time
        end_at:
          type: string
          description: Le moment auquel le congé demandé se termine.
          format: date-time
        justification:
          type: string
          description: La justification du congé demandé.
        leave_value:
          type: integer
          description: La durée du congé demandé.
          format: int32
        paid:
          type: boolean
          description: Si le congé demandé est payé.
        leave_type_id:
          type: string
          description: L'identifiant du type de congé demandé.
          format: uuid
        site_id:
          type: string
          description: L'identifiant de la location liée au congé demandé.
          format: uuid
        position_id:
          type: string
          description: L'identifiant de la position liée au congé demandé.
          format: uuid
        member_site_position_id:
          type: string
          description: L'identifiant de la position du site du demandeur.
          format: uuid
        resource_id:
          type: string
          description: L'identifiant de la resource liée au congé demandé.
          format: uuid
        member_id:
          type: string
          description: L'identifiant du demandeur.
          format: uuid
    TimeOffPaymentConstraintUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres d'entrée de mise à jour
        d'une contrainte de congé.
      properties:
        paid_weekdays:
          type: array
          description: Les jours de la semaine qui sont considérés comme payés pour
            le congé, où 0 représente dimanche, jusqu'à 6, qui représente samedi.
            Une seule occurrence de chaque journée peut être spécifiée. Si cet attribut
            est fourni mais pas les excluded_dates, les excluded_dates seront écrasées.
          items:
            type: integer
            format: int32
        excluded_dates:
          type: array
          description: Les dates qui sont considérées comme non payées pour le congé.
            Cet attribut a la priorité sur les paid_weekdays.
          items:
            type: string
            format: date
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
    LeaveRequestUpdate:
      type: object
      description: Une description détaillée des paramètres d'entrée d'une modification
        de demande de congé.
      properties:
        start_at:
          type: string
          description: Le moment auquel le congé demandé débute
          format: date-time
        end_at:
          type: string
          description: Le moment auquel le congé demandé se termine.
          format: date-time
        justification:
          type: string
          description: La justification du congé demandé.
        leave_value:
          type: integer
          description: La durée du congé demandé.
          format: int32
        paid:
          type: boolean
          description: Si le congé demandé est payé.
        leave_type_id:
          type: string
          description: L'identifiant du type de congé demandé.
          format: uuid
        site_id:
          type: string
          description: L'identifiant de la location liée au congé demandé.
          format: uuid
        position_id:
          type: string
          description: L'identifiant de la position liée au congé demandé.
          format: uuid
        member_site_position_id:
          type: string
          description: L'identifiant de la position du site du demandeur.
          format: uuid
        resource_id:
          type: string
          description: L'identifiant de la resource liée au congé demandé.
          format: uuid
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintUpdateAttributes"
    LeaveTypeCreate:
      required:
      - name
      - paid
      type: object
      description: Une description détaillée des paramètres d'entrée d'une création
        de type de congé.
      properties:
        keep_track_hours:
          type: boolean
          description: Si les entrées de temps sont activées pour votre organisation,
            si les congés de ce type de congé doivent impacté les banques d'heures
            associées.
        name:
          type: string
          description: Le nom du type de congé.
        paid:
          type: boolean
          description: Si le type de congé est payé.
    LeaveTypeUpdate:
      type: object
      description: Une description détaillée des paramètres d'entrée d'une modification
        de type de congé.
      properties:
        keep_track_hours:
          type: boolean
          description: Si les entrées de temps sont activées pour votre organisation,
            si les congés de ce type de congé doivent impacté les banques d'heures
            associées.
        name:
          type: string
          description: Le nom du type de congé.
        paid:
          type: boolean
          description: Si le type de congé est payé.
    LeaveValueSettingCreateAttributes:
      required:
      - interval_start
      - interval_end
      - worked_days_type
      type: object
      description: Une description détaillée des paramètres d'entrée de création des
        paramètres de valeur de congé.
      properties:
        interval_start:
          type: string
          description: La date de départ de l'intervalle utilisé pour calculer la
            durée du congé.
          format: date
        interval_end:
          type: string
          description: La date de fin de l'intervalle utilisé pour calculer la durée
            du congé.
          format: date
        worked_days_type:
          type: string
          description: Soit le nombre d'heure travaillée durant l'intervalle divisée
            par le nombre de jour (valeur 'variable') ou un nombre d'heure spécifique
            (valeur 'fixed)'
        worked_days_count:
          type: integer
          description: Le nombre par lequel le total est divisé si le type choisi
            est 'fixed'.
          format: int32
    LeaveValueSettingUpdateAttributes:
      required:
      - interval_start
      - interval_end
      - worked_days_type
      type: object
      description: Une description détaillée des paramètres d'entrée de mise à jour
        des paramètres de valeur de congé.
      properties:
        interval_start:
          type: string
          description: La date de départ de l'intervalle utilisé pour calculer la
            durée du congé.
          format: date
        interval_end:
          type: string
          description: La date de fin de l'intervalle utilisé pour calculer la durée
            du congé.
          format: date
        worked_days_type:
          type: string
          description: Soit le nombre d'heure travaillée durant l'intervalle divisée
            par le nombre de jour (valeur 'variable') ou un nombre d'heure spécifique
            (valeur 'fixed)'
        worked_days_count:
          type: integer
          description: Le nombre par lequel le total est divisé si le type choisi
            est 'fixed'.
          format: int32
    LocationCreateAttributes:
      required:
      - longitude
      - latitude
      type: object
      description: Une description détaillée des paramètres d'entrée de la création
        d'un emplacement.
      properties:
        latitude:
          type: number
          description: La latitude de l'emplacement.
          format: float
        longitude:
          type: number
          description: La longitude de l'emplacement.
          format: float
    LocationUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres d'entrée de modification
        d'un emplacement.
      properties:
        latitude:
          type: number
          description: La latitude de l'emplacement.
          format: float
        longitude:
          type: number
          description: La longitude de l'emplacement.
          format: float
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    MemberSitePositionCreateAttributes:
      required:
      - member_site_id
      - position_id
      type: object
      description: Une description détaillée des paramètres de création d'une position
        pour la succursale d'un membre.
      properties:
        member_site_id:
          type: string
          description: L'identifiant unique du 'member_site'.
          format: uuid
        position_id:
          type: string
          description: L'identifiant unique de la position.
          format: uuid
        rate_base:
          type: number
          description: Le taux horaire régulier du membre pour la position.
          format: float
        rate_overtime:
          type: number
          description: Le taux horaire supplémentaire du membre pour la position.
          format: float
        rate_overtime_2:
          type: number
          description: Le taux horaire supplémentaire 2 du membre pour la position,
            si activé.
          format: float
    MemberSitePositionUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres de modification d'une
        position pour la succursale d'un membre.
      properties:
        member_site_id:
          type: string
          description: L'identifiant unique du 'member_site'.
          format: uuid
        position_id:
          type: string
          description: L'identifiant unique de la position.
          format: uuid
        rate_base:
          type: number
          description: Le taux horaire régulier du membre pour la position.
          format: float
        rate_overtime:
          type: number
          description: Le taux horaire supplémentaire du membre pour la position.
          format: float
        rate_overtime_2:
          type: number
          description: Le taux horaire supplémentaire 2 du membre pour la position,
            si activé.
          format: float
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    MemberSiteResourceCreateAttributes:
      required:
      - member_site_id
      - resource_id
      type: object
      description: Une description détaillée des paramètres de création d'une ressource
        pour la succursale d'un membre.
      properties:
        member_site_id:
          type: string
          description: L'identifiant unique du 'member_site'.
          format: uuid
        resource_id:
          type: string
          description: L'identifiant unique de la ressource.
          format: uuid
    MemberSiteResourceUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres de modification d'une
        ressource pour la succursale d'un membre.
      properties:
        member_site_id:
          type: string
          description: L'identifiant unique du 'member_site'.
          format: uuid
        resource_id:
          type: string
          description: L'identifiant unique de la ressource.
          format: uuid
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    MemberSiteCreateAttributes:
      required:
      - site_id
      - role
      type: object
      description: Une description détaillée des paramètres de création d'une succursale
        pour un membre.
      properties:
        site_id:
          type: string
          description: L'identifiant unique de la succursale
          format: uuid
        role:
          type: string
          description: Le rôle de l'utilisateur au sein de la succursale. Il peut
            être employé, superviseur ou gestionnaire. Aussi appelé niveau hiérarchique.
        role_definition_id:
          type: string
          description: L'identifiant unique de la définition de rôle.
          format: uuid
        rate_single_base:
          type: number
          description: Le taux horaire régulier du membre pour toutes ses positions
            dans la succursale.
          format: float
        rate_single_overtime:
          type: number
          description: Le taux horaire supplémentaire du membre pour toutes ses positions
            dans la succursale.
          format: float
        rate_single_overtime_2:
          type: number
          description: Le taux horaire supplémentaire 2 du membre pour toutes ses
            positions dans la succursale, si activé.
          format: float
        rate_type:
          type: string
          description: Si les taux horaires sont appliqués à toutes les positions
            (simple), ou chaque position assignée a son propre taux horaire (position).
        member_site_positions_attributes:
          type: array
          description: Les positions associées à ce membre dans cette succursale.
          items:
            "$ref": "#/components/schemas/MemberSitePositionCreateAttributes"
        member_site_resources_attributes:
          type: array
          description: Les ressources associées à ce membre dans cette succursale.
          items:
            "$ref": "#/components/schemas/MemberSiteResourceCreateAttributes"
    MemberSiteUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres de modification d'une
        succursale pour un membre.
      properties:
        site_id:
          type: string
          description: L'identifiant unique de la succursale
          format: uuid
        role:
          type: string
          description: Le rôle de l'utilisateur au sein de la succursale. Il peut
            être employé, superviseur ou gestionnaire. Aussi appelé niveau hiérarchique.
        role_definition_id:
          type: string
          description: L'identifiant unique de la définition de rôle.
          format: uuid
        rate_single_base:
          type: number
          description: Le taux horaire régulier du membre pour toutes ses positions
            dans la succursale.
          format: float
        rate_single_overtime:
          type: number
          description: Le taux horaire supplémentaire du membre pour toutes ses positions
            dans la succursale.
          format: float
        rate_single_overtime_2:
          type: number
          description: Le taux horaire supplémentaire 2 du membre pour toutes ses
            positions dans la succursale, si activé.
          format: float
        rate_type:
          type: string
          description: Si les taux horaires sont appliqués à toutes les positions
            (simple), ou chaque position assignée a son propre taux horaire (position).
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
        member_site_positions_attributes:
          type: array
          description: Les positions associées à ce membre dans cette succursale.
          items:
            oneOf:
            - "$ref": "#/components/schemas/MemberSitePositionUpdateAttributes"
            - "$ref": "#/components/schemas/MemberSitePositionCreateAttributes"
        member_site_resources_attributes:
          type: array
          description: Les ressources associées à ce membre dans cette succursale.
          items:
            oneOf:
            - "$ref": "#/components/schemas/MemberSiteResourceUpdateAttributes"
            - "$ref": "#/components/schemas/MemberSiteResourceCreateAttributes"
    ProfileCreateAttributes:
      required:
      - first_name
      - last_name
      - email
      type: object
      description: Description détaillée des paramètres de création du profil.
      properties:
        email:
          type: string
          description: L'adresse e-mail du profil.
          format: email
        first_name:
          type: string
          description: Le prénom du profil.
        last_name:
          type: string
          description: Le nom de famille du profil.
        nickname:
          type: string
          description: Le prénom usuel du profil.
        birthdate:
          type: string
          description: La date de naissance du profil.
          format: date
        civic_address:
          type: string
          description: L'adresse municipal du profil.
        document_id:
          type: string
          description: L'identifiant unique de la photo du profil.
        phone_1_number:
          type: string
          description: Le premier numéro de téléphone du profil.
          format: phone
        phone_2_number:
          type: string
          description: Le deuxième numéro de téléphone du profil.
          format: phone
        phone_3_number:
          type: string
          description: Le troisième numéro de téléphone du profil.
          format: phone
        phone_1_type:
          type: string
          description: Le type du premier numéro de téléphone du profil.
        phone_2_type:
          type: string
          description: Le type du deuxième numéro de téléphone du profil.
        phone_3_type:
          type: string
          description: Le type du troisième numéro de téléphone du profil.
    MemberCreate:
      required:
      - profile_attributes
      - member_sites_attributes
      type: object
      description: Une description détaillée des paramètres d'entrée de la création
        d'un membre.
      properties:
        seniority_date:
          type: string
          description: La date à laquelle le membre a commencé à travailler pour l'organisation.
          format: date
        deletion_date:
          type: string
          description: La date à laquelle le membre sera archivée.
          format: date
        identification_number:
          type: string
          description: The member's identification number.
        additional_information:
          type: string
          description: Informations additionnelles sur le membre.
        override_overtime:
          type: boolean
          description: Si le membre possède des seuils d'heures supplémentaires personnalisés.
        multi_level_overtime:
          type: boolean
          description: Si les heures supplémentaires multi-niveaux sont activées pour
            le membre.
        override_spread_overtime:
          type: boolean
          description: Si le membre outrepasse les paramètres d'heures supplémentaires
            de l'organisation.
        overtime_day_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de jour personnalisé 1 du
            membre.
          format: float
        overtime_week_threshold:
          type: number
          description: Le seuil d'heures supplémentaire de semaine personnalisé 1
            du membre.
          format: float
        overtime_2_day_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de jour personnalisé 2 du
            membre, si les heures supplémentaires multi-niveaux sont activées.
          format: float
        overtime_2_week_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de semaine personnalisé 2
            du membre, si les heures supplémentaires multi-niveaux sont activées.
          format: float
        spread_overtime_enabled:
          type: boolean
          description: Si les heures supplémentaires du membre sont dispersées au
            travers plusieurs semaines.
        main_position_id:
          type: string
          description: L'identifiant unique de la position principale du membre.
          format: uuid
        main_site_id:
          type: string
          description: L'identifiant unique de la succursale principale du membre.
          format: uuid
        admin:
          type: boolean
          description: Si le membre est un administrateur de l'organisation.
        invite:
          type: boolean
          description: Si le membre est invité à rejoindre l'organisation.
        visible:
          type: boolean
          description: Si le membre est exclu du planificateur et des feuilles de
            temps.
        hide_before_seniority_date:
          type: boolean
          description: Si le membre est exclu du planificateur et des feuilles de
            temps avant sa date d'embauche.
        time_clock_code:
          type: string
          description: Le code de pointage du membre.
        time_clock_override_defaults:
          type: boolean
          description: Si le membre outrepasse les paramètres de pointage de l'organisation.
        time_clock_transfer_next_call:
          type: boolean
          description: Si le prochain pointage par téléphone doit être transféré.
        time_clock_transfer_next_call_number:
          type: string
          description: Le numéro auquel le prochain pointage par téléphone doit être
            transféré.
        time_clock_must_be_scheduled:
          type: boolean
          description: Si le membre doit être à l'horaire pour pointer.
        time_clock_window:
          type: integer
          description: La fenètre utilisée pour différents paramètres de pointage,
            en minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description: Si les pointages du membre sont arrondis à l'heure de début
            planifiée des quarts de travail.
        time_clock_limit_to_shift_end_window:
          type: integer
          description: Si les pointages de sortie du membre sont limités à l'heure
            de fin planifiée des quarts de travail.
          format: int32
        payroll_seniority:
          type: integer
          description: Le nombre total de minutes travaillées du membre.
          format: int32
        payroll_auto_update:
          type: boolean
          description: Si le membre n'a pas besoin de pointer.
        profile_attributes:
          "$ref": "#/components/schemas/ProfileCreateAttributes"
        member_sites_attributes:
          type: array
          description: Les sites du membre.
          items:
            "$ref": "#/components/schemas/MemberSiteCreateAttributes"
    ProfileUpdateAttributes:
      type: object
      description: Description détaillée des paramètres de mise à jour du profil.
      properties:
        email:
          type: string
          description: L'adresse e-mail du profil.
          format: email
        first_name:
          type: string
          description: Le prénom du profil.
        last_name:
          type: string
          description: Le nom de famille du profil.
        nickname:
          type: string
          description: Le prénom usuel du profil.
        birthdate:
          type: string
          description: La date de naissance du profil.
          format: date
        civic_address:
          type: string
          description: L'adresse municipal du profil.
        document_id:
          type: string
          description: L'identifiant unique de la photo du profil.
        phone_1_number:
          type: string
          description: Le premier numéro de téléphone du profil.
          format: phone
        phone_2_number:
          type: string
          description: Le deuxième numéro de téléphone du profil.
          format: phone
        phone_3_number:
          type: string
          description: Le troisième numéro de téléphone du profil.
          format: phone
        phone_1_type:
          type: string
          description: Le type du premier numéro de téléphone du profil.
        phone_2_type:
          type: string
          description: Le type du deuxième numéro de téléphone du profil.
        phone_3_type:
          type: string
          description: Le type du troisième numéro de téléphone du profil.
    MemberUpdate:
      type: object
      description: Une description détaillée des paramètres d'entrée de la mise à
        jour d'un membre.
      properties:
        seniority_date:
          type: string
          description: La date à laquelle le membre a commencé à travailler pour l'organisation.
          format: date
        deletion_date:
          type: string
          description: La date à laquelle le membre sera archivée.
          format: date
        identification_number:
          type: string
          description: The member's identification number.
        additional_information:
          type: string
          description: Informations additionnelles sur le membre.
        override_overtime:
          type: boolean
          description: Si le membre possède des seuils d'heures supplémentaires personnalisés.
        multi_level_overtime:
          type: boolean
          description: Si les heures supplémentaires multi-niveaux sont activées pour
            le membre.
        override_spread_overtime:
          type: boolean
          description: Si le membre outrepasse les paramètres d'heures supplémentaires
            de l'organisation.
        overtime_day_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de jour personnalisé 1 du
            membre.
          format: float
        overtime_week_threshold:
          type: number
          description: Le seuil d'heures supplémentaire de semaine personnalisé 1
            du membre.
          format: float
        overtime_2_day_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de jour personnalisé 2 du
            membre, si les heures supplémentaires multi-niveaux sont activées.
          format: float
        overtime_2_week_threshold:
          type: number
          description: Le seuil d'heures supplémentaires de semaine personnalisé 2
            du membre, si les heures supplémentaires multi-niveaux sont activées.
          format: float
        spread_overtime_enabled:
          type: boolean
          description: Si les heures supplémentaires du membre sont dispersées au
            travers plusieurs semaines.
        main_position_id:
          type: string
          description: L'identifiant unique de la position principale du membre.
          format: uuid
        main_site_id:
          type: string
          description: L'identifiant unique de la succursale principale du membre.
          format: uuid
        admin:
          type: boolean
          description: Si le membre est un administrateur de l'organisation.
        invite:
          type: boolean
          description: Si le membre est invité à rejoindre l'organisation.
        visible:
          type: boolean
          description: Si le membre est exclu du planificateur et des feuilles de
            temps.
        hide_before_seniority_date:
          type: boolean
          description: Si le membre est exclu du planificateur et des feuilles de
            temps avant sa date d'embauche.
        time_clock_code:
          type: string
          description: Le code de pointage du membre.
        time_clock_override_defaults:
          type: boolean
          description: Si le membre outrepasse les paramètres de pointage de l'organisation.
        time_clock_transfer_next_call:
          type: boolean
          description: Si le prochain pointage par téléphone doit être transféré.
        time_clock_transfer_next_call_number:
          type: string
          description: Le numéro auquel le prochain pointage par téléphone doit être
            transféré.
        time_clock_must_be_scheduled:
          type: boolean
          description: Si le membre doit être à l'horaire pour pointer.
        time_clock_window:
          type: integer
          description: La fenètre utilisée pour différents paramètres de pointage,
            en minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description: Si les pointages du membre sont arrondis à l'heure de début
            planifiée des quarts de travail.
        time_clock_limit_to_shift_end_window:
          type: integer
          description: Si les pointages de sortie du membre sont limités à l'heure
            de fin planifiée des quarts de travail.
          format: int32
        payroll_seniority:
          type: integer
          description: Le nombre total de minutes travaillées du membre.
          format: int32
        payroll_auto_update:
          type: boolean
          description: Si le membre n'a pas besoin de pointer.
        profile_attributes:
          "$ref": "#/components/schemas/ProfileUpdateAttributes"
        member_sites_attributes:
          type: array
          description: Les sites du membre.
          items:
            oneOf:
            - "$ref": "#/components/schemas/MemberSiteUpdateAttributes"
            - "$ref": "#/components/schemas/MemberSiteCreateAttributes"
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/Error"
    Error:
      type: object
      description: Un objet d'erreur.
      properties:
        source:
          type: string
        short_message:
          type: string
        full_message:
          type: string
    CommonPagination:
      type: object
      description: Un objet de pagination qui est retourné sur une requête d'index.
      properties:
        sort:
          type: object
        search:
          type: object
        limit:
          type: integer
        page_size:
          type: integer
        total_pages:
          type: integer
        current_page:
          type: integer
        next_page:
          type: integer
        prev_page:
          type: integer
        first_page:
          type: boolean
        last_page:
          type: boolean
        out_of_range:
          type: boolean
        total_count:
          type: integer
    OpenShiftAudienceConfigCreateAttributes:
      type: object
      description: Une description détaillée des paramètres de création de la configuration
        de l'audience d'un quart à combler.
      properties:
        send_by_seniority:
          type: boolean
          description: Si le quart à combler est envoyé par ordre d'ancienneté.
        exclude_members_in_overtime:
          type: boolean
          description: Si les membres en situation d'heures supplémentaires sont exclus
            de l'audience.
        exclude_members_in_conflict:
          type: boolean
          description: Si les membres en conflit d'horaire sont exclus de l'audience.
        excluded_member_ids:
          type: array
          description: Les identifiants uniques des membres manuellement exclus de
            l'audience du quart à combler.
          items:
            type: string
            format: uuid
    OpenShiftAudienceConfigUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres de modification de la
        configuration de l'audience d'un quart à combler.
      properties:
        send_by_seniority:
          type: boolean
          description: Si le quart à combler est envoyé par ordre d'ancienneté.
        exclude_members_in_overtime:
          type: boolean
          description: Si les membres en situation d'heures supplémentaires sont exclus
            de l'audience.
        exclude_members_in_conflict:
          type: boolean
          description: Si les membres en conflit d'horaire sont exclus de l'audience.
        excluded_member_ids:
          type: array
          description: Les identifiants uniques des membres manuellement exclus de
            l'audience du quart à combler.
          items:
            type: string
            format: uuid
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
    OpenShiftRequestApprove:
      required:
      - member_ids
      type: object
      description: Description détaillée des paramètres d'entrée d'approbation de
        demande de quart à combler.
      properties:
        member_ids:
          type: array
          description: L'identifiant des employés retenus pour le quart à combler.
          items:
            type: string
    PayrollUpdate:
      type: object
      description: Description détaillée des paramètres d'entrer de la mise à jours
        d'une paie.
      properties:
        status:
          type: string
          description: Le status actuel d'une paie.
    PhoneTerminalCreateAttributes:
      required:
      - name
      - phone_number
      - confidential
      type: object
      description: Description détaillée des paramètres d'entrés de la création du
        terminal téléphonique.
      properties:
        site_id:
          type: string
          description: L'identifiant unique de l'emplacement du terminal téléphonique.
          format: uuid
        name:
          type: string
          description: Nom du terminal téléphonique.
        phone_number:
          type: string
          description: Numéro de téléphone du terminal téléphonique.
        confidential:
          type: boolean
          description: Si le terminal téléphonique permet les numéros de téléphones
            confidentiels.
    PhoneTerminalUpdateAttributes:
      required:
      - id
      type: object
      description: Description détaillée des paramètres d'entrés de la mise à jour
        du terminal téléphonique.
      properties:
        site_id:
          type: string
          description: L'identifiant unique de l'emplacement du terminal téléphonique.
          format: uuid
        name:
          type: string
          description: Nom du terminal téléphonique.
        phone_number:
          type: string
          description: Numéro de téléphone du terminal téléphonique.
        confidential:
          type: boolean
          description: Si le terminal téléphonique permet les numéros de téléphones
            confidentiels.
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    PositionCreate:
      required:
      - name
      type: object
      description: Description détaillée des paramètres d'entré de la création d'une
        position.
      properties:
        name:
          type: string
          description: Nom de la position.
        rank:
          type: integer
          description: Rang de la position.
          format: int32
        color:
          type: string
          description: Couleur de la position.
        parent_id:
          type: string
          description: Identifiant unique de la position parent. Si cette valeur est
            présente, la position est une sous-position.
          format: uuid
    PositionUpdate:
      type: object
      description: Description détaillée des paramètres d'entré de la mise à jour
        d'une position.
      properties:
        name:
          type: string
          description: Nom de la position.
        rank:
          type: integer
          description: Rang de la position.
          format: int32
        color:
          type: string
          description: Couleur de la position.
        parent_id:
          type: string
          description: Identifiant unique de la position parent. Si cette valeur est
            présente, la position est une sous-position.
          format: uuid
    PremiumEntryCreateAttributes:
      required:
      - premium_id
      type: object
      description: Description détaillée des paramètres d'entrés de la création d'une
        prime.
      properties:
        premium_id:
          type: string
          description: Identifiant unique des primes.
          format: uuid
        has_custom_value:
          type: boolean
          description: Si la prime s'applique sur un nombre précis d'heure, sinon
            s'applique sur le quart de travail complet.
        entry_minutes:
          type: integer
          description: Le nombre de minute que la prime s'applique.
          format: int32
    PremiumEntryUpdateAttributes:
      required:
      - id
      type: object
      description: Description détaillée des paramètres d'entrés de la mise à jour
        d'une prime.
      properties:
        premium_id:
          type: string
          description: Identifiant unique des primes.
          format: uuid
        has_custom_value:
          type: boolean
          description: Si la prime s'applique sur un nombre précis d'heure, sinon
            s'applique sur le quart de travail complet.
        entry_minutes:
          type: integer
          description: Le nombre de minute que la prime s'applique.
          format: int32
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    ResourceShiftCreateAttributes:
      required:
      - resource_id
      type: object
      description: Description détaillée des paramètres de création d'une ressources
        de quart de travail.
      properties:
        resource_id:
          type: string
          description: Identifiant unique de la ressource.
          format: uuid
    ResourceShiftUpdateAttributes:
      required:
      - id
      type: object
      description: Description détaillée des paramètres de mise à jour d'une ressources
        de quart de travail.
      properties:
        resource_id:
          type: string
          description: Identifiant unique de la ressource.
          format: uuid
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    ResourceCreate:
      required:
      - name
      type: object
      description: Description détaillée des paramètres de créations d'une ressource.
      properties:
        'no':
          type: string
          description: L'identifiant unique raccourci de la ressource.
        name:
          type: string
          description: Nom de la ressource.
        address:
          type: string
          description: L'adresse de la ressource.
        description:
          type: string
          description: Description de la ressource.
        exclusive:
          type: boolean
          description: Si la ressource est exclusive.
        type_job_site:
          type: boolean
          description: Si la ressource est une succursale.
        type_equipment:
          type: boolean
          description: Si la ressource est un équipement.
        week_hours_min:
          type: number
          description: L'objectif minimum du nombre d'heures planifiées par ressource.
          format: float
        week_hours_max:
          type: number
          description: L'objectif maximum du nombre d'heures planifiées par ressource.
          format: float
        minimum_paid_minutes_per_entry:
          type: integer
          description: Le montant minimum de minutes payées par enregistrement de
            la ressource.
          format: int32
        document_ids:
          type: array
          description: Document attaché à cette ressource.
          items:
            type: string
        location_attributes:
          "$ref": "#/components/schemas/LocationCreateAttributes"
        phone_terminals_attributes:
          type: array
          description: Le numéro de téléphone d'une ressource.
          items:
            "$ref": "#/components/schemas/PhoneTerminalCreateAttributes"
    ResourceUpdate:
      type: object
      description: Description détaillée des paramètres de mise à jour d'une ressource.
      properties:
        'no':
          type: string
          description: L'identifiant unique raccourci de la ressource.
        name:
          type: string
          description: Nom de la ressource.
        address:
          type: string
          description: L'adresse de la ressource.
        description:
          type: string
          description: Description de la ressource.
        exclusive:
          type: boolean
          description: Si la ressource est exclusive.
        type_job_site:
          type: boolean
          description: Si la ressource est une succursale.
        type_equipment:
          type: boolean
          description: Si la ressource est un équipement.
        week_hours_min:
          type: number
          description: L'objectif minimum du nombre d'heures planifiées par ressource.
          format: float
        week_hours_max:
          type: number
          description: L'objectif maximum du nombre d'heures planifiées par ressource.
          format: float
        minimum_paid_minutes_per_entry:
          type: integer
          description: Le montant minimum de minutes payées par enregistrement de
            la ressource.
          format: int32
        document_ids:
          type: array
          description: Document attaché à cette ressource.
          items:
            type: string
        location_attributes:
          "$ref": "#/components/schemas/LocationUpdateAttributes"
        phone_terminals_attributes:
          type: array
          description: Le numéro de téléphone d'une ressource.
          items:
            oneOf:
            - "$ref": "#/components/schemas/PhoneTerminalUpdateAttributes"
            - "$ref": "#/components/schemas/PhoneTerminalCreateAttributes"
    SchedulerProjectionCreate:
      required:
      - site_id
      - date
      type: object
      description: Description détaillée des paramètres de création d'une prévision
        du planificateur d'horaires.
      properties:
        revenues:
          type: number
          description: Montant des revenus attendus.
          format: float
        hours:
          type: number
          description: Nombre d'heures prévues à l'horaire.
          format: float
        site_id:
          type: string
          description: Identifiant unique de la succursale d'une prévision du planificateur
            d'horaires.
          format: uuid
        date:
          type: string
          description: Date d'une prévision du planificateur d'horaires.
          format: date
    SchedulerProjectionUpdate:
      type: object
      description: Description détaillée des paramètres de mise à jour d'une prévision
        du planificateur d'horaires.
      properties:
        revenues:
          type: number
          description: Montant des revenus attendus.
          format: float
        hours:
          type: number
          description: Nombre d'heures prévues à l'horaire.
          format: float
    SchedulerProjectionUpdateForBulk:
      required:
      - site_id
      - date
      type: object
      description: Description détaillée des paramètres de mise à jour de plusieurs
        prévisions du planificateur d'horaires.
      properties:
        revenues:
          type: number
          description: Montant des revenus attendus.
          format: float
        hours:
          type: number
          description: Nombre d'heures prévues à l'horaire.
          format: float
        site_id:
          type: string
          description: Identifiant unique de la succursale d'une prévision du planificateur
            d'horaires.
          format: uuid
        date:
          type: string
          description: Date d'une prévision du planificateur d'horaires.
          format: date
    TaskCreateAttributes:
      required:
      - name
      type: object
      description: Une description détaillée des paramètres d'entrée pour la création
        d'une tâche.
      properties:
        name:
          type: string
          description: Le nom de la tâche.
        instructions:
          type: string
          description: Les instructions de la tâche.
        offset:
          type: integer
          description: Le décalage de la tâche à partir du moment où elle commence,
            en minutes. Par exemple, une tâche commençant à 7:30 pour un quart de
            travail commençant à 7:00 aura un décalage de 30.
          format: int32
    TimeOffPaymentConstraintCreateAttributes:
      type: object
      description: Une description détaillée des paramètres d'entrée de création d'une
        contrainte de congé.
      properties:
        paid_weekdays:
          type: array
          description: Les jours de la semaine qui sont considérés comme payés pour
            le congé, où 0 représente dimanche, jusqu'à 6, qui représente samedi.
            Une seule occurrence de chaque journée peut être spécifiée. Si cet attribut
            est fourni mais pas les excluded_dates, les excluded_dates seront écrasées.
          items:
            type: integer
            format: int32
        excluded_dates:
          type: array
          description: Les dates qui sont considérées comme non payées pour le congé.
            Cet attribut a la priorité sur les paid_weekdays.
          items:
            type: string
            format: date
    ShiftCreate:
      required:
      - site_id
      - position_id
      - start_at
      - end_at
      type: object
      description: Description détaillée des paramètres de création d'un quart de
        travail.
      properties:
        site_id:
          type: string
          description: Identifiant unique de la succursale du quart de travail.
          format: uuid
        position_id:
          type: string
          description: Identifiant unique de la position du quart de travail.
          format: uuid
        sub_position_id:
          type: string
          description: Identifiant unique de la sous-position du quart de travail.
          format: uuid
        date:
          type: string
          description: Date du du quart de travail.
          format: date
        start_at:
          type: string
          description: Date et heure de début du quart de travail shift's start date
            time.
          format: date-time
        start_at_time:
          type: string
          description: Heure de début du quart de travail.
        start_date:
          type: string
          description: Date de début du quart de travail.
          format: date
        end_at:
          type: string
          description: Date et heure de fin du quart de travail.
          format: date-time
        end_at_time:
          type: string
          description: Heure de fin du quart de travail.
        end_date:
          type: string
          description: Date de fin du quart de travail.
          format: date
        on_call:
          type: boolean
          description: Si le quart de travail est sur appel.
        training:
          type: boolean
          description: Si le quart est une formation.
        time_off:
          type: boolean
          description: Si le quart de travail est un congé.
        all_day:
          type: boolean
          description: Si le quart de travail est toute la journée.
        single_clock:
          type: boolean
          description: Si le quart de travail est demmande uniquement de pointée l'entrée.
        auto_clock:
          type: boolean
          description: Si le quart de travail est pointe automatiquement l'employé.
        hide_end_at:
          type: boolean
          description: Si la fin du quart de travail est cachée aux membres.
        paid:
          type: boolean
          description: Si le quart de travail est est un congé payé.
        recurring:
          type: boolean
          description: Si le quart de travail est recurrent.
        open:
          type: boolean
          description: Si le quart de travail est ouvert.
        open_quantity:
          type: integer
          description: Nombre de quart de travail disponible.
          format: int32
        leave_type_id:
          type: string
          description: Identifiant unique du type de congé quart de travail.
          format: uuid
        leave_value:
          type: integer
          description: Durée du congé.
          format: int32
        reminder:
          type: string
          description: Informations supplémentaires du quart de travail.
        publish:
          type: boolean
          description: Si le quart doit être publié après sa création.
        assign_position_to_member:
          type: boolean
          description: Si la position spécifiée doit être assignée au membre lorsqu'elle
            ne l'est pas déjà.
        member_id:
          type: string
          description: L'identifiant unique du membre du quart. Requis si 'open' est
            faux.
          format: uuid
        resource_shifts_attributes:
          type: array
          description: Resources du quart de travail.
          items:
            "$ref": "#/components/schemas/ResourceShiftCreateAttributes"
        drive_file_shifts_attributes:
          type: array
          description: Les fichiers de documents partagés du quart.
          items:
            "$ref": "#/components/schemas/DriveFileShiftCreateAttributes"
        breaks_attributes:
          type: array
          description: Pauses du quart de travail.
          items:
            "$ref": "#/components/schemas/BreakCreateAttributes"
        tasks_attributes:
          type: array
          description: Les tâches du quart (si le plan Plus est activé).
          items:
            "$ref": "#/components/schemas/TaskCreateAttributes"
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintCreateAttributes"
        leave_value_setting_attributes:
          "$ref": "#/components/schemas/LeaveValueSettingCreateAttributes"
        manual_premium_entries:
          type: array
          description: La prime manuel du quart de travail.
          items:
            "$ref": "#/components/schemas/PremiumEntryCreateAttributes"
        audience_config_attributes:
          "$ref": "#/components/schemas/OpenShiftAudienceConfigCreateAttributes"
    ShiftDelete:
      type: object
      description: Une description détaillée des paramètres d'entrée de suppression
        d'un quart.
      properties:
        publish:
          type: boolean
          description: Si le quart doit être publié après avoir été supprimé.
    ShiftToggleTasksCompletion:
      required:
      - tasks_attributes
      type: object
      description: Une description détaillée des paramètres d'entrée pour faire basculer
        l'état de complétion des tâches d'un quart (si le plan Plus est activé).
      properties:
        tasks_attributes:
          type: array
          description: Une liste des tâches dont l'état de complétion basculera.
          items:
            "$ref": "#/components/schemas/TaskToggleCompletionAttributes"
    ShiftTransfer:
      type: object
      description: Une description détaillée des paramètres d'entrée de transfert
        d'un quart.
      properties:
        date:
          type: string
          description: La date où le quart sera transféré.
          format: date
        member_id:
          type: string
          description: L'ID du membre auquel le quart sera transféré. Une valeur vide
            transférera ce quart en quart à combler.
          format: uuid
        publish:
          type: boolean
          description: Si le quart devrait être publié après son transfert.
    TaskUpdateAttributes:
      required:
      - id
      type: object
      description: Une description détaillée des paramètres d'entrée pour la modification
        d'une tâche.
      properties:
        name:
          type: string
          description: Le nom de la tâche.
        instructions:
          type: string
          description: Les instructions de la tâche.
        offset:
          type: integer
          description: Le décalage de la tâche à partir du moment où elle commence,
            en minutes. Par exemple, une tâche commençant à 7:30 pour un quart de
            travail commençant à 7:00 aura un décalage de 30.
          format: int32
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        _destroy:
          type: boolean
          description: Mettre à 'true' pour supprimer cet objet lors de la modification
            de son parent.
    ShiftUpdate:
      type: object
      description: Description détaillée des paramètres de mise à jour d'un quart
        de travail.
      properties:
        site_id:
          type: string
          description: Identifiant unique de la succursale du quart de travail.
          format: uuid
        position_id:
          type: string
          description: Identifiant unique de la position du quart de travail.
          format: uuid
        sub_position_id:
          type: string
          description: Identifiant unique de la sous-position du quart de travail.
          format: uuid
        date:
          type: string
          description: Date du du quart de travail.
          format: date
        start_at:
          type: string
          description: Date et heure de début du quart de travail shift's start date
            time.
          format: date-time
        start_at_time:
          type: string
          description: Heure de début du quart de travail.
        start_date:
          type: string
          description: Date de début du quart de travail.
          format: date
        end_at:
          type: string
          description: Date et heure de fin du quart de travail.
          format: date-time
        end_at_time:
          type: string
          description: Heure de fin du quart de travail.
        end_date:
          type: string
          description: Date de fin du quart de travail.
          format: date
        on_call:
          type: boolean
          description: Si le quart de travail est sur appel.
        training:
          type: boolean
          description: Si le quart est une formation.
        time_off:
          type: boolean
          description: Si le quart de travail est un congé.
        all_day:
          type: boolean
          description: Si le quart de travail est toute la journée.
        single_clock:
          type: boolean
          description: Si le quart de travail est demmande uniquement de pointée l'entrée.
        auto_clock:
          type: boolean
          description: Si le quart de travail est pointe automatiquement l'employé.
        hide_end_at:
          type: boolean
          description: Si la fin du quart de travail est cachée aux membres.
        paid:
          type: boolean
          description: Si le quart de travail est est un congé payé.
        recurring:
          type: boolean
          description: Si le quart de travail est recurrent.
        open:
          type: boolean
          description: Si le quart de travail est ouvert.
        open_quantity:
          type: integer
          description: Nombre de quart de travail disponible.
          format: int32
        leave_type_id:
          type: string
          description: Identifiant unique du type de congé quart de travail.
          format: uuid
        leave_value:
          type: integer
          description: Durée du congé.
          format: int32
        reminder:
          type: string
          description: Informations supplémentaires du quart de travail.
        publish:
          type: boolean
          description: Si le quart doit être publié après avoir été mis à jour, s'il
            a généré une nouvelle version en brouillon.
        resource_shifts_attributes:
          type: array
          description: Resources du quart de travail.
          items:
            oneOf:
            - "$ref": "#/components/schemas/ResourceShiftUpdateAttributes"
            - "$ref": "#/components/schemas/ResourceShiftCreateAttributes"
        drive_file_shifts_attributes:
          type: array
          description: Les fichiers de documents partagés du quart.
          items:
            oneOf:
            - "$ref": "#/components/schemas/DriveFileShiftUpdateAttributes"
            - "$ref": "#/components/schemas/DriveFileShiftCreateAttributes"
        breaks_attributes:
          type: array
          description: Pauses du quart de travail.
          items:
            oneOf:
            - "$ref": "#/components/schemas/BreakUpdateAttributes"
            - "$ref": "#/components/schemas/BreakCreateAttributes"
        tasks_attributes:
          type: array
          description: Les tâches du quart (si le plan Plus est activé).
          items:
            oneOf:
            - "$ref": "#/components/schemas/TaskUpdateAttributes"
            - "$ref": "#/components/schemas/TaskCreateAttributes"
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintUpdateAttributes"
        leave_value_setting_attributes:
          "$ref": "#/components/schemas/LeaveValueSettingUpdateAttributes"
        manual_premium_entries:
          type: array
          description: La prime manuel du quart de travail.
          items:
            oneOf:
            - "$ref": "#/components/schemas/PremiumEntryUpdateAttributes"
            - "$ref": "#/components/schemas/PremiumEntryCreateAttributes"
        audience_config_attributes:
          oneOf:
          - "$ref": "#/components/schemas/OpenShiftAudienceConfigUpdateAttributes"
          - "$ref": "#/components/schemas/OpenShiftAudienceConfigCreateAttributes"
    SiteCreate:
      required:
      - name
      type: object
      description: Description détaillée des paramètre de création d'une succursale.
      properties:
        name:
          type: string
          description: Le nom de la succursale.
        address:
          type: string
          description: Addresse de la succursale.
        instructions:
          type: string
          description: Informations additionnelles sur la succursale.
        location_attributes:
          "$ref": "#/components/schemas/LocationCreateAttributes"
    SiteUpdate:
      type: object
      description: Description détaillée des paramètre de mise à jour d'une succursale.
      properties:
        name:
          type: string
          description: Le nom de la succursale.
        address:
          type: string
          description: Addresse de la succursale.
        instructions:
          type: string
          description: Informations additionnelles sur la succursale.
        location_attributes:
          "$ref": "#/components/schemas/LocationUpdateAttributes"
    TaskToggleCompletionAttributes:
      required:
      - id
      - completed
      type: object
      description: Une description détaillée des paramètres d'entrée de basculement
        de la complétion d'une tâche.
      properties:
        id:
          type: string
          description: Identifiant unique de l'objet.
          format: uuid
        completed:
          type: boolean
          description: État de complétion de la tâche.
    TimeEntryCreate:
      required:
      - member_id
      - position_id
      - site_id
      - start_at
      type: object
      description: Une description détaillée des paramètres d'entrée de création d'une
        entrée de temps.
      properties:
        start_at:
          type: string
          description: La date et l'heure du début de l'entrée de temps.
          format: date-time
        end_at:
          type: string
          description: La date et l'heure de la fin de l'entrée de temps.
          format: date-time
        start_at_time:
          type: string
          description: Heure à laquelle l'entrée de temps commence.
        end_at_time:
          type: string
          description: Heure à laquelle l'entrée de temps termine.
        overwritten_length_minutes:
          type: integer
          description: La longueur personnalisée de l'entrée de temps.
          format: int32
        date:
          type: string
          description: La date de l'entrée de temps.
          format: date
        time_off:
          type: boolean
          description: Si l'entrée de temps est un congé.
        time_off_length:
          type: integer
          description: La longueur du congé.
          format: int32
        time_off_leave_type_id:
          type: string
          description: L'identifiant unique du type de congé.
          format: uuid
        time_off_paid:
          type: boolean
          description: Si le congé est payé.
        time_off_resource_id:
          type: string
          description: L'identifiant unique de la ressource associée.
          format: uuid
        unpaid_break:
          type: integer
          description: Minutes de pause non payées.
          format: int32
        paid_break:
          type: integer
          description: Minutes de pause payées.
          format: int32
        member_site_position_id:
          type: string
          description: ID du 'member_site_position'.
          format: uuid
        site_id:
          type: string
          description: ID de la succursale.
          format: uuid
        position_id:
          type: string
          description: ID de position.
          format: uuid
        notes:
          type: string
          description: Les notes d'entrée de temps.
        start_at_clock_notes:
          type: string
          description: Note laissée par l'employé lors de son pointage d'entré.
        end_at_clock_notes:
          type: string
          description: Note laissée par l'employé lors du pointage de sortie.
        start_at_clock_job_site_id:
          type: string
          description: L'identifiant unique du lieu de travail où l'employé a pointé
            son entrée.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description: L'identifiant unique du lieu de travail où l'employé a pointé
            sa sortie.
          format: uuid
        rate_regular:
          type: number
          description: Le taux régulier pour l'entrée de temps.
          format: float
        rate_overtime:
          type: number
          description: Le taux du temps supplémentaires 1 pour l'entrée de temps.
          format: float
        rate_overtime_2:
          type: number
          description: Le taux du temps supplémentaires 2 pour l'entrée de temps.
          format: float
        break_started_at:
          type: string
          description: La date et l'heure du début de la pause.
          format: date-time
        member_id:
          type: string
          description: ID de l'employé assigné à l'entrée de temps.
          format: uuid
    TimeEntryUpdate:
      type: object
      description: Une description détaillée des paramètres d'entrée de mise à jour
        d'une entrée de temps.
      properties:
        start_at:
          type: string
          description: La date et l'heure du début de l'entrée de temps.
          format: date-time
        end_at:
          type: string
          description: La date et l'heure de la fin de l'entrée de temps.
          format: date-time
        start_at_time:
          type: string
          description: Heure à laquelle l'entrée de temps commence.
        end_at_time:
          type: string
          description: Heure à laquelle l'entrée de temps termine.
        overwritten_length_minutes:
          type: integer
          description: La longueur personnalisée de l'entrée de temps.
          format: int32
        date:
          type: string
          description: La date de l'entrée de temps.
          format: date
        time_off:
          type: boolean
          description: Si l'entrée de temps est un congé.
        time_off_length:
          type: integer
          description: La longueur du congé.
          format: int32
        time_off_leave_type_id:
          type: string
          description: L'identifiant unique du type de congé.
          format: uuid
        time_off_paid:
          type: boolean
          description: Si le congé est payé.
        time_off_resource_id:
          type: string
          description: L'identifiant unique de la ressource associée.
          format: uuid
        unpaid_break:
          type: integer
          description: Minutes de pause non payées.
          format: int32
        paid_break:
          type: integer
          description: Minutes de pause payées.
          format: int32
        member_site_position_id:
          type: string
          description: ID du 'member_site_position'.
          format: uuid
        site_id:
          type: string
          description: ID de la succursale.
          format: uuid
        position_id:
          type: string
          description: ID de position.
          format: uuid
        notes:
          type: string
          description: Les notes d'entrée de temps.
        start_at_clock_notes:
          type: string
          description: Note laissée par l'employé lors de son pointage d'entré.
        end_at_clock_notes:
          type: string
          description: Note laissée par l'employé lors du pointage de sortie.
        start_at_clock_job_site_id:
          type: string
          description: L'identifiant unique du lieu de travail où l'employé a pointé
            son entrée.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description: L'identifiant unique du lieu de travail où l'employé a pointé
            sa sortie.
          format: uuid
        rate_regular:
          type: number
          description: Le taux régulier pour l'entrée de temps.
          format: float
        rate_overtime:
          type: number
          description: Le taux du temps supplémentaires 1 pour l'entrée de temps.
          format: float
        rate_overtime_2:
          type: number
          description: Le taux du temps supplémentaires 2 pour l'entrée de temps.
          format: float
        break_started_at:
          type: string
          description: La date et l'heure du début de la pause.
          format: date-time
    UserUpdate:
      type: object
      description: Description détaillée des paramètres d'entrée de mise à jour d'un
        utilisateur.
      properties:
        locale:
          type: string
          description: La langue de l'utilisateur.
        time_format:
          type: integer
          description: Le format d'heure de l'utilisateur, 12 ou 24.
          format: int32
        time_zone_name:
          type: string
          description: Le fuseau horaire de l'utilisateur.
        email:
          type: string
          description: Courriel de l'utilisateur.
          format: email
        disabled_notifications:
          type: array
          description: Une liste des notifications que cet utilisateur a désactivées.
          items:
            type: string
        sms_notifications:
          type: boolean
          description: Si l'utilisateur reçoit des notifications par SMS.
        sms_notifications_phone_status:
          type: string
          description: Le statut de confirmation du numéro de téléphone, 'pending'
            ou 'confirmed'.
        sms_notifications_phone_number:
          type: string
          description: Le numéro de téléphone auquel l'utilisateur reçoit les notifications
            par SMS.
        email_notifications:
          type: boolean
          description: Si l'utilisateur reçoit des notifications par e-mail.
        shift_reminder_time:
          type: integer
          description: Lorsque l'utilisateur reçoit un rappel d'un quart de travail
            à venir, en minutes.
          format: int32
        profile_attributes:
          "$ref": "#/components/schemas/ProfileUpdateAttributes"
    DriveFileCreate:
      required:
      - member_id
      - name
      - role
      type: object
      description: Une description détaillée des paramètres d'entrée pour la création
        d'un fichier.
      properties:
        name:
          type: string
          description: Le nom du fichier.
        member_viewable:
          type: boolean
          description: Vrai si le fichier est accessible à l'employé.
        role:
          type: string
          description: Le rôle requis pour avoir accès au fichier. Peut être 'member',
            'supervisor', 'manager' ou 'admin'.
        folder_id:
          type: string
          description: L'identifiant du dossier parent.
          format: uuid
        body:
          type: string
          description: Le contenu d'un fichier interne.
        note:
          type: string
          description: La note du fichier.
        member_id:
          type: string
          description: L'identifiant du membre auquel le fichier est associé.
          format: uuid
        file:
          type: string
          description: Un fichier externe à téléverser.
          format: binary
    DriveFileUpdate:
      type: object
      description: Une description détaillée des paramètres d'entrée pour la modification
        d'un fichier.
      properties:
        name:
          type: string
          description: Le nom du fichier.
        member_viewable:
          type: boolean
          description: Vrai si le fichier est accessible à l'employé.
        role:
          type: string
          description: Le rôle requis pour avoir accès au fichier. Peut être 'member',
            'supervisor', 'manager' ou 'admin'.
        folder_id:
          type: string
          description: L'identifiant du dossier parent.
          format: uuid
        body:
          type: string
          description: Le contenu d'un fichier interne.
        note:
          type: string
          description: La note du fichier.
    DriveFolderCreate:
      required:
      - member_id
      - name
      - role
      type: object
      description: Une description détaillée des paramètres d'entrée pour la création
        d'un dossier.
      properties:
        name:
          type: string
          description: Le nom du dossier.
        member_viewable:
          type: boolean
          description: Vrai si le dossier et son contenu est accessible à l'employé.
        role:
          type: string
          description: Le rôle requis pour avoir accès au dossier et son contenu.
            Peut être 'member', 'supervisor', 'manager' ou 'admin'.
        member_id:
          type: string
          description: L'identifiant du membre auquel le dossier est associé.
          format: uuid
    DriveFolderUpdate:
      type: object
      description: Une description détaillée des paramètres d'entrée pour la modification
        d'un dossier.
      properties:
        name:
          type: string
          description: Le nom du dossier.
        member_viewable:
          type: boolean
          description: Vrai si le dossier et son contenu est accessible à l'employé.
        role:
          type: string
          description: Le rôle requis pour avoir accès au dossier et son contenu.
            Peut être 'member', 'supervisor', 'manager' ou 'admin'.
    DriveSignatureRequestCreate:
      required:
      - drive_file_id
      - member_ids
      type: object
      description: Une description détaillée des paramètres d'entrée d'une création
        de demande de signature.
      properties:
        drive_file_id:
          type: string
          description: L'identifiant du fichier à utiliser.
          format: uuid
        member_ids:
          type: array
          description: Les identifiants des membres qui devront signer. Entre un et
            quatre membre permis.
          items:
            type: string
            format: uuid
    ResourceBulkCreate:
      required:
      - resources
      type: object
      description: Description détaillée des paramètres de création d'une ressource.
      properties:
        resources:
          type: array
          description: La ressources.
          items:
            "$ref": "#/components/schemas/ResourceCreate"
    SchedulerProjectionBulkCreate:
      required:
      - scheduler_projections
      type: object
      description: Description détaillée des paramètres de création de plusieurs prévisions
        du planificateur d'horaires.
      properties:
        scheduler_projections:
          type: array
          description: Prévisions du planificateur d'horaires.
          items:
            "$ref": "#/components/schemas/SchedulerProjectionCreate"
    SchedulerProjectionBulkUpdate:
      required:
      - scheduler_projections
      type: object
      description: Description détaillée des paramètres de mise à jour de plusieurs
        prévisions du planificateur d'horaires.
      properties:
        scheduler_projections:
          type: array
          description: Prévisions du planificateur d'horaires.
          items:
            "$ref": "#/components/schemas/SchedulerProjectionUpdateForBulk"
  responses:
    AvailabilityListRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/AvailabilityListRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    AvailabilityListRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/AvailabilityListRequest"
    BillboardTagSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/BillboardTag"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    BillboardTagSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/BillboardTag"
    BillboardThreadSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/BillboardThread"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    BillboardThreadSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/BillboardThread"
    PositionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Position"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    SiteSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Site"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ClockLogSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/ClockLog"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ClockLogSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/ClockLog"
    CommentSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Comment"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    CommentSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Comment"
    DocumentSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Document"
    LeaveRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaveRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    LeaveRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/LeaveRequest"
    LeaveTypeSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaveType"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    LeaveTypeSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/LeaveType"
    MemberTimeBankTransactionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberTimeBankTransaction"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberTimeBankTransactionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/MemberTimeBankTransaction"
    MemberSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Member"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Member"
    AvailabilityListSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/AvailabilityList"
    AvailabilityListSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/AvailabilityList"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberSiteSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberSite"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberTimeBankSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberTimeBank"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    HRPrivateDataSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
    OpenShiftRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/OpenShiftRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    OpenShiftRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/OpenShiftRequest"
    PayrollSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Payroll"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PayrollSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Payroll"
    PositionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Position"
    PremiumEntrySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/PremiumEntry"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PremiumEntrySuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/PremiumEntry"
    PremiumSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Premium"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PremiumSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Premium"
    PublicationSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Publication"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PublicationSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Publication"
    ResourceSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Resource"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ResourceSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Resource"
    ResourceSuccessManyWithoutPagination:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Resource"
    RoleDefinitionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/RoleDefinition"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    RoleDefinitionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/RoleDefinition"
    SchedulerProjectionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/SchedulerProjection"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    SchedulerProjectionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/SchedulerProjection"
    SchedulerProjectionSuccessManyWithoutPagination:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/SchedulerProjection"
    SessionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Session"
    ShiftSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Shift"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ShiftSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Shift"
    ActivitySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Activity"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    BreakSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Break"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TaskSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Task"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ShiftSuccessManyWithoutPagination:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Shift"
    OpenShiftAudienceMemberSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/OpenShiftAudienceMember"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    SiteSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Site"
    TimeBankSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TimeBank"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TimeBankSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TimeBank"
    TimeEntrySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TimeEntry"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TimeEntrySuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TimeEntry"
    TransferRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TransferRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TransferRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TransferRequest"
    UserSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/User"
    DriveItemSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/DriveItem"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    DriveItemSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/DriveItem"
    DriveSignatureRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/DriveSignatureRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    DriveSignatureRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/DriveSignatureRequest"
    DriveSignatureSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/DriveSignature"
    DriveSignatureSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/DriveSignature"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    HRFieldSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/HRField"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    HRFieldSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/HRField"
    EmptySuccess:
      description: Succès
      content:
        application/json:
          schema:
            type: object
    NotFoundFailure:
      description: Erreur - Introuvable
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    InputParamsFailure:
      description: Erreur - Paramètres d'entrée invalides
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    QueryParamFailure:
      description: Erreur - Paramètres de requête invalides
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    PathParamFailure:
      description: Erreur - Chemin d'accès invalide
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
  parameters:
    PathId:
      name: id
      in: path
      description: Identifiant unique de l'objet.
      required: true
      schema:
        type: string
    Date:
      name: date
      in: path
      description: L'objet actif à cette date (DD-MM-YYYY).
      required: true
      schema:
        type: string
    QueryPage:
      name: page
      in: query
      description: La page à retourner.
      schema:
        minimum: 1
        type: integer
        default: 1
    QueryLimit:
      name: limit
      in: query
      description: La limite sur la page retournée. Ne peut pas dépasser la taille
        de la page.
      schema:
        maximum: 100
        minimum: 0
        type: integer
        default: 50
    QueryPageSize:
      name: page_size
      in: query
      description: Le nombre d'éléments par page.
      schema:
        maximum: 100
        minimum: 50
        type: integer
        default: 50
  requestBodies:
    BillboardTagCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardTagCreate"
    BillboardTagUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardTagUpdate"
    BillboardThreadCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardThreadCreate"
    BillboardThreadUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardThreadUpdate"
    CommentCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/CommentCreate"
    CommentUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/CommentUpdate"
    LeaveRequestCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveRequestCreate"
    LeaveRequestUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveRequestUpdate"
    LeaveTypeCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveTypeCreate"
    LeaveTypeUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveTypeUpdate"
    MemberCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/MemberCreate"
    MemberUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/MemberUpdate"
    PayrollUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PayrollUpdate"
    PositionCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PositionCreate"
    PositionUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PositionUpdate"
    ResourceCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ResourceCreate"
    ResourceUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ResourceUpdate"
    ResourceBulkCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ResourceBulkCreate"
    SchedulerProjectionCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionCreate"
    SchedulerProjectionUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionUpdate"
    SchedulerProjectionBulkCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionBulkCreate"
    SchedulerProjectionUpdateForBulk:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionUpdateForBulk"
    SchedulerProjectionBulkUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionBulkUpdate"
    ShiftCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftCreate"
    ShiftDelete:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftDelete"
    ShiftUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftUpdate"
    ShiftTransfer:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftTransfer"
    SiteCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SiteCreate"
    SiteUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SiteUpdate"
    TimeEntryCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/TimeEntryCreate"
    TimeEntryUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/TimeEntryUpdate"
    UserUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UserUpdate"
    DriveFileCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveFileCreate"
    DriveFileUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveFileUpdate"
    DriveFolderCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveFolderCreate"
    DriveFolderUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveFolderUpdate"
    DriveSignatureRequestCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/DriveSignatureRequestCreate"
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: https://app.agendrix.com/oauth/token
          authorizationUrl: https://app.agendrix.com/oauth/authorize
          scopes:
            read: Autorisation de lecture
            write: Autorisation d'écriture
